
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALGORITMO ASIGNAR CADENA CARACTER COMA COMMENT COMO CONVERTIRANUMERO CONVERTIRATEXTO CON_PASO COR_DER COR_IZQ DEFINIR DESDE DE_OTRO_MODO DIVIDIDO DOS_PUN ELEVADO_A ENTERO ENTONCES ESCRIBIR ES_DISTINTO_QUE ES_IGUAL_QUE ES_MAYOR_O_IGUAL_QUE ES_MAYOR_QUE ES_MENOR_O_IGUAL_QUE ES_MENOR_QUE FALSO FIN_ALGORITMO FIN_FUNCION FIN_MIENTRAS FIN_PARA FIN_PROCEDIMIENTO FIN_SEGUN FIN_SI FIN_SI_NO FUNCION HACER HASTA ID IGUAL_A LEER LLAVE_DER LLAVE_IZQ LOGICO MAS MENOS MIENTRAS NO NUMERO O PARA PAR_DER PAR_IZQ POR PUN_Y_COM REAL RESIDUO RETORNAR SEGUN SI SI_NO TIPO_DATO VERDADERO Y\n    programa : ALGORITMO cuerpo FIN_ALGORITMO\n                | funciones ALGORITMO cuerpo FIN_ALGORITMO\n    \n    cuerpo : sentencias\n    \n    sentencias : sentencia sentencias\n               | sentencia\n    \n    sentencia : posible_declaracion_variable\n                | estructura_escribir\n                | leer\n                | asignaciones\n                | para\n                | mientras\n                | segun\n                | multiple_si\n                | llamar_funciones\n    \n    posible_declaracion_variable : declaracion_variable\n                                |  multiple_declaracion_variable\n    \n    declaracion_variable : DEFINIR ID COMO TIPO_DATO\n    \n    multiple_declaracion_variable : DEFINIR ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n    \n    asignaciones : asignacion\n                | asignacion_con_operacion\n    \n    asignacion : ID ASIGNAR tipo_dato_identificador\n    \n    asignacion_con_operacion : ID ASIGNAR operaciones_matematicas\n    \n    estructura_escribir : escribir\n                        | escribir_cadena_id\n                        | escribir_cadena_id_cadena\n                        | escribir_cadena_id_id\n    \n    escribir : ESCRIBIR CADENA\n                | ESCRIBIR ID\n                | ESCRIBIR NUMERO\n    \n    escribir_cadena_id : ESCRIBIR CADENA COMA ID\n                        | ESCRIBIR ID COMA CADENA\n                        | ESCRIBIR ID COMA ID\n                        | ESCRIBIR ID COMA NUMERO\n                        | ESCRIBIR NUMERO COMA ID\n    \n    escribir_cadena_id_cadena : ESCRIBIR CADENA COMA ID COMA CADENA\n                                | ESCRIBIR ID COMA CADENA COMA ID\n    \n    escribir_cadena_id_id : ESCRIBIR CADENA COMA ID COMA CADENA COMA ID\n                            | ESCRIBIR ID COMA CADENA COMA ID COMA CADENA\n    \n    leer : LEER ID\n    \n    para : PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA\n    \n    mientras : mientras_declaraciones mientras\n                | mientras_declaraciones\n    \n    mientras_declaraciones : mientras_v1\n                            | mientras_v2\n                            | mientras_v3\n    \n    mientras_v1 : MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS\n    \n    mientras_v2 : MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS\n    \n    mientras_v3 : MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS \n    \n    expresion_logica : tipo_dato_identificador operador_relacional tipo_dato_identificador\n                    | expresion_logica operador_logico expresion_logica\n    \n    tipo_dato_identificador : ID\n                            | NUMERO\n                            | CADENA\n                            | REAL\n                            | LOGICO\n    \n    operador_logico : Y\n                    | O\n                    | NO\n    \n    operador_relacional : ES_MAYOR_QUE\n                        | ES_MENOR_QUE\n                        | ES_IGUAL_QUE\n                        | ES_MAYOR_O_IGUAL_QUE\n                        | ES_MENOR_O_IGUAL_QUE\n                        | ES_DISTINTO_QUE\n    \n    operaciones_matematicas : operacion_matematica\n                            | operacion_matematica_parentesis\n                            | operacion_matematica_parentesis operacion_matematica\n                            | operacion_matematica operaciones_matematicas\n    \n    operacion_matematica : tipo_dato_identificador operador_aritmetico tipo_dato_identificador\n    \n    operador_aritmetico : MAS\n                        | MENOS\n                        | POR\n                        | DIVIDIDO\n                        | ELEVADO_A\n                        | RESIDUO\n    \n    operacion_matematica_parentesis : PAR_IZQ operacion_matematica PAR_DER\n                                    | PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador\n                                    | PAR_IZQ operacion_matematica_parentesis PAR_DER\n    \n    segun : SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN\n    \n    casos : caso casos\n            | caso\n    \n    caso : NUMERO DOS_PUN sentencias\n            | CADENA DOS_PUN sentencias\n    \n    multiple_si : si multiple_si\n                | si_no\n    \n    si : SI expresion_logica ENTONCES sentencias FIN_SI\n    \n    si_no : SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI\n    \n    cuerpo_funcion : sentencias_funcion\n    \n    sentencias_funcion : sentencia_funcion sentencias_funcion\n                        | sentencia_funcion\n    \n    sentencia_funcion : posible_declaracion_variable_funcion\n                        | estructura_escribir\n                        | leer\n                        | asignaciones\n                        | para\n                        | mientras\n                        | segun\n                        | multiple_si\n                        | llamar_funciones\n    \n    posible_declaracion_variable_funcion : declaracion_variable_funcion\n                                        |  multiple_declaracion_variable_funcion\n    \n    declaracion_variable_funcion : DEFINIR ID COMO TIPO_DATO\n    \n    multiple_declaracion_variable_funcion : DEFINIR ID COMA ID COMO TIPO_DATO\n                                        | DEFINIR ID COMA ID COMA ID COMO TIPO_DATO\n                                        | DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n                                        | DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n    \n    funciones : funcion funciones\n                | funcion \n    \n    tipo_retorno_funcion : ID\n                        | LOGICO\n                        | CADENA\n    \n    funcion : funcion_sin_retorno\n            | funcion_con_retorno\n            | funcion_con_parametros_con_retorno\n    \n    funcion_sin_retorno : FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION\n    \n    funcion_con_retorno : FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION\n    \n    funcion_con_parametros_con_retorno : FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION\n    \n    parametros : ID\n                | ID COMA parametros\n    \n    llamar_funciones : llamar_funcion llamar_funciones\n                    | llamar_funcion\n    \n    llamar_funcion : ID PAR_IZQ PAR_DER\n    \n    llamar_funcion : ID PAR_IZQ tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n    '
    
_lr_action_items = {'ALGORITMO':([0,3,4,5,6,7,45,151,196,231,],[2,44,-111,-115,-116,-117,-110,-118,-119,-120,]),'FUNCION':([0,4,5,6,7,151,196,231,],[8,8,-115,-116,-117,-118,-119,-120,]),'$end':([1,47,102,],[0,-1,-2,]),'LEER':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[27,27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,27,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,27,-24,-25,-68,-69,-125,27,27,27,27,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,27,27,27,27,-49,-51,27,-127,-18,-38,-39,-105,-80,-82,-90,27,-128,-19,-40,-41,-106,27,-129,-20,-50,-107,-43,-21,-108,-109,]),'PARA':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[31,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,31,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,31,-24,-25,-68,-69,-125,31,31,31,31,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,31,31,31,31,-49,-51,31,-127,-18,-38,-39,-105,-80,-82,-90,31,-128,-19,-40,-41,-106,31,-129,-20,-50,-107,-43,-21,-108,-109,]),'SEGUN':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[33,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,33,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,33,-24,-25,-68,-69,-125,33,33,33,33,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,33,33,33,33,-49,-51,33,-127,-18,-38,-39,-105,-80,-82,-90,33,-128,-19,-40,-41,-106,33,-129,-20,-50,-107,-43,-21,-108,-109,]),'DEFINIR':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[37,37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,37,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,117,-24,-25,-68,-69,-125,37,37,37,117,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,37,37,37,37,-49,-51,117,-127,-18,-38,-39,-105,-80,-82,-90,37,-128,-19,-40,-41,-106,37,-129,-20,-50,-107,-43,-21,-108,-109,]),'ESCRIBIR':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[38,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,38,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,38,-24,-25,-68,-69,-125,38,38,38,38,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,38,38,38,38,-49,-51,38,-127,-18,-38,-39,-105,-80,-82,-90,38,-128,-19,-40,-41,-106,38,-129,-20,-50,-107,-43,-21,-108,-109,]),'ID':([2,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,49,50,51,53,55,56,59,60,61,64,65,66,67,68,72,73,74,75,76,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,129,132,133,139,141,142,143,144,145,152,155,157,158,159,162,164,165,166,169,171,172,173,174,180,182,183,184,185,191,192,193,197,200,203,204,206,208,209,210,212,213,214,217,218,219,222,225,226,229,232,235,236,238,239,241,243,245,247,],[28,46,28,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,49,-22,-23,52,-45,54,-88,57,58,60,-46,-47,-48,64,64,28,-42,64,64,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,28,118,-24,-25,64,64,64,-125,140,141,142,145,28,64,-59,-60,-61,64,-62,-63,-64,-65,-66,-67,28,28,28,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,154,64,-73,-74,-75,-76,-77,-78,-71,-70,-126,64,-17,-33,-35,-34,-36,-37,175,118,-72,-79,-81,28,28,28,190,193,28,64,-49,-51,198,28,64,64,-127,-18,-38,-39,-105,-80,-82,216,218,-90,28,221,175,64,-128,-19,-40,-41,-106,28,234,237,-129,-20,-50,-107,-43,244,-21,-108,-109,]),'SI':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,34,35,36,39,40,41,44,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,157,158,159,162,164,165,170,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[42,42,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,42,-88,-124,-46,-47,-48,42,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,42,-24,-25,-68,-69,-125,42,42,42,42,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,42,42,42,-89,42,-49,-51,42,-127,-18,-38,-39,-105,-80,-82,-90,42,-128,-19,-40,-41,-106,42,-129,-20,-50,-107,-43,-21,-108,-109,]),'MIENTRAS':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,44,48,49,53,55,56,59,60,61,64,65,66,67,68,72,74,75,76,77,79,88,100,101,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,139,141,142,143,144,145,149,157,158,159,162,164,165,171,173,174,182,185,191,192,193,197,200,203,208,209,214,217,218,219,222,225,232,235,236,238,239,243,245,247,],[43,43,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,43,-88,-124,-46,-47,-48,43,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,43,-24,-25,-68,-69,-125,43,43,43,43,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-17,-33,-35,-34,-36,-37,172,-72,-79,-81,43,43,43,43,-49,-51,43,-127,-18,-38,-39,-105,-80,-82,-90,43,-128,-19,-40,-41,-106,43,-129,-20,-50,-107,-43,-21,-108,-109,]),'FIN_ALGORITMO':([9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,71,74,75,76,77,79,127,129,132,139,141,142,143,144,145,157,158,159,173,174,185,191,192,193,200,203,208,214,217,218,219,232,235,236,239,243,],[47,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,102,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,-49,-51,-127,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'FIN_SI':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,139,141,142,143,144,145,146,157,158,159,173,174,185,191,192,193,194,200,203,208,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,170,-72,-79,-81,-49,-51,-127,-18,-38,-39,208,-80,-82,-90,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'SI_NO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,139,141,142,143,144,145,146,157,158,159,173,174,185,191,192,193,200,203,208,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,171,-72,-79,-81,-49,-51,-127,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'FIN_MIENTRAS':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,139,141,142,143,144,145,149,150,157,158,159,173,174,185,191,192,193,200,203,208,214,217,218,219,220,228,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,173,174,-72,-79,-81,-49,-51,-127,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,228,236,-129,-20,-50,-43,-21,]),'FIN_SEGUN':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,139,141,142,143,144,145,157,158,159,173,174,185,187,191,192,193,200,203,208,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,-49,-51,-127,203,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'NUMERO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,38,39,40,41,42,43,48,49,50,51,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,78,79,81,82,86,89,90,91,92,93,94,95,96,97,98,99,120,121,122,123,124,125,126,127,129,132,133,136,139,141,142,143,144,145,157,158,159,161,172,173,174,183,184,185,188,189,191,192,193,200,202,203,208,213,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,61,-46,-47,-48,65,65,-4,-42,65,65,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,65,65,65,-125,134,137,144,65,-59,-60,-61,65,-62,-63,-64,-65,-66,-67,65,-73,-74,-75,-76,-77,-78,-71,-70,-126,65,137,-17,-33,-35,-34,-36,-37,-72,-79,-81,186,65,-49,-51,65,65,-127,-85,-86,-18,-38,-39,-80,215,-82,-90,65,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'CADENA':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,38,39,40,41,42,43,48,49,50,51,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,78,79,82,86,89,90,91,92,93,94,95,96,97,98,99,120,121,122,123,124,125,126,127,129,132,133,136,139,141,142,143,144,145,152,157,158,159,168,172,173,174,183,184,185,188,189,191,192,193,200,203,207,208,212,213,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,59,-46,-47,-48,66,66,-4,-42,66,66,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,66,66,66,-125,138,143,66,-59,-60,-61,66,-62,-63,-64,-65,-66,-67,66,-73,-74,-75,-76,-77,-78,-71,-70,-126,66,138,-17,-33,-35,-34,-36,-37,178,-72,-79,-81,192,66,-49,-51,66,66,-127,-85,-86,-18,-38,-39,-80,-82,219,-90,178,66,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'DE_OTRO_MODO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,135,136,139,141,142,143,144,145,157,158,159,163,173,174,185,188,189,191,192,193,200,203,208,214,217,218,219,232,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,162,-84,-17,-33,-35,-34,-36,-37,-72,-79,-81,-83,-49,-51,-127,-85,-86,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,-129,-20,-50,-43,-21,]),'FIN_PARA':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,39,40,41,48,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,127,129,132,139,141,142,143,144,145,157,158,159,173,174,185,191,192,193,200,203,208,214,217,218,219,232,233,235,236,239,243,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-4,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,-71,-70,-126,-17,-33,-35,-34,-36,-37,-72,-79,-81,-49,-51,-127,-18,-38,-39,-80,-82,-90,-128,-19,-40,-41,-129,239,-20,-50,-43,-21,]),'FIN_FUNCION':([23,24,25,26,29,30,32,35,36,39,40,41,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,141,142,143,144,145,153,157,158,159,173,174,175,176,177,178,185,192,193,197,200,203,208,214,218,219,222,223,232,236,238,239,245,247,],[-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,151,-91,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-33,-35,-34,-36,-37,-92,-72,-79,-81,-49,-51,-112,196,-113,-114,-127,-38,-39,-105,-80,-82,-90,-128,-40,-41,-106,231,-129,-50,-107,-43,-108,-109,]),'RETORNAR':([23,24,25,26,29,30,32,35,36,39,40,41,49,53,55,56,59,60,61,64,65,66,67,68,74,75,76,77,79,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,129,132,141,142,143,144,145,153,157,158,159,173,174,185,192,193,197,199,200,203,208,214,218,219,222,232,236,238,239,245,247,],[-26,-27,-28,-29,-22,-23,-45,-88,-124,-46,-47,-48,-42,-44,-87,-123,-30,-31,-32,-54,-55,-56,-57,-58,-24,-25,-68,-69,-125,152,-91,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-71,-70,-126,-33,-35,-34,-36,-37,-92,-72,-79,-81,-49,-51,-127,-38,-39,-105,212,-80,-82,-90,-128,-40,-41,-106,-129,-50,-107,-43,-108,-109,]),'ASIGNAR':([28,],[50,]),'PAR_IZQ':([28,46,50,57,64,65,66,67,68,76,78,157,],[51,73,78,51,-54,-55,-56,-57,-58,78,78,-72,]),'REAL':([42,43,50,51,64,65,66,67,68,76,77,78,89,90,91,92,93,94,95,96,97,98,99,120,121,122,123,124,125,126,133,157,158,159,172,183,184,200,213,],[67,67,67,67,-54,-55,-56,-57,-58,67,67,67,67,-59,-60,-61,67,-62,-63,-64,-65,-66,-67,67,-73,-74,-75,-76,-77,-78,67,-72,-79,-81,67,67,67,-80,67,]),'LOGICO':([42,43,50,51,64,65,66,67,68,76,77,78,89,90,91,92,93,94,95,96,97,98,99,120,121,122,123,124,125,126,133,152,157,158,159,172,183,184,200,212,213,],[68,70,68,68,-54,-55,-56,-57,-58,68,68,68,68,-59,-60,-61,68,-62,-63,-64,-65,-66,-67,68,-73,-74,-75,-76,-77,-78,68,177,-72,-79,-81,68,68,68,-80,177,68,]),'PUN_Y_COM':([46,156,],[72,182,]),'PAR_DER':([51,64,65,66,67,68,80,118,119,130,131,157,158,159,160,181,200,201,224,],[79,-54,-55,-56,-57,-58,132,-121,156,158,159,-72,-79,-81,185,-122,-80,214,232,]),'DESDE':([52,],[81,]),'HACER':([54,64,65,66,67,68,69,70,147,148,195,215,],[82,-54,-55,-56,-57,-58,100,101,-53,-52,209,225,]),'COMO':([58,140,154,190,198,216,221,234,237,244,],[83,167,179,205,211,227,230,240,242,246,]),'COMA':([58,59,60,61,64,65,66,67,68,80,118,140,141,143,154,160,190,192,193,198,201,216,221,237,],[84,85,86,87,-54,-55,-56,-57,-58,133,155,166,168,169,180,184,204,206,207,210,213,226,229,241,]),'ENTONCES':([62,64,65,66,67,68,147,148,],[88,-54,-55,-56,-57,-58,-53,-52,]),'Y':([62,64,65,66,67,68,69,147,148,195,],[90,-54,-55,-56,-57,-58,90,90,-52,90,]),'O':([62,64,65,66,67,68,69,147,148,195,],[91,-54,-55,-56,-57,-58,91,91,-52,91,]),'NO':([62,64,65,66,67,68,69,147,148,195,],[92,-54,-55,-56,-57,-58,92,92,-52,92,]),'ES_MAYOR_QUE':([63,64,65,66,67,68,70,],[94,-54,-55,-56,-57,-58,-58,]),'ES_MENOR_QUE':([63,64,65,66,67,68,70,],[95,-54,-55,-56,-57,-58,-58,]),'ES_IGUAL_QUE':([63,64,65,66,67,68,70,],[96,-54,-55,-56,-57,-58,-58,]),'ES_MAYOR_O_IGUAL_QUE':([63,64,65,66,67,68,70,],[97,-54,-55,-56,-57,-58,-58,]),'ES_MENOR_O_IGUAL_QUE':([63,64,65,66,67,68,70,],[98,-54,-55,-56,-57,-58,-58,]),'ES_DISTINTO_QUE':([63,64,65,66,67,68,70,],[99,-54,-55,-56,-57,-58,-58,]),'MAS':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,121,121,121,]),'MENOS':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,122,122,122,]),'POR':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,123,123,123,]),'DIVIDIDO':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,124,124,124,]),'ELEVADO_A':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,125,125,125,]),'RESIDUO':([64,65,66,67,68,74,128,158,],[-54,-55,-56,-57,-58,126,126,126,]),'TIPO_DATO':([83,167,179,205,211,227,230,240,242,246,],[139,191,197,217,222,235,238,243,245,247,]),'HASTA':([134,],[161,]),'DOS_PUN':([137,138,],[164,165,]),'CON_PASO':([186,],[202,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funciones':([0,4,],[3,45,]),'funcion':([0,4,],[4,4,]),'funcion_sin_retorno':([0,4,],[5,5,]),'funcion_con_retorno':([0,4,],[6,6,]),'funcion_con_parametros_con_retorno':([0,4,],[7,7,]),'cuerpo':([2,44,],[9,71,]),'sentencias':([2,11,44,88,100,101,162,164,165,171,209,225,],[10,48,10,146,149,150,187,188,189,194,220,233,]),'sentencia':([2,11,44,88,100,101,162,164,165,171,209,225,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'posible_declaracion_variable':([2,11,44,88,100,101,162,164,165,171,209,225,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'estructura_escribir':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[13,13,13,107,13,13,13,107,13,13,13,13,107,13,13,]),'leer':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[14,14,14,108,14,14,14,108,14,14,14,14,108,14,14,]),'asignaciones':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[15,15,15,109,15,15,15,109,15,15,15,15,109,15,15,]),'para':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[16,16,16,110,16,16,16,110,16,16,16,16,110,16,16,]),'mientras':([2,11,32,44,72,88,100,101,105,162,164,165,171,182,209,225,],[17,17,53,17,111,17,17,17,111,17,17,17,17,111,17,17,]),'segun':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[18,18,18,112,18,18,18,112,18,18,18,18,112,18,18,]),'multiple_si':([2,11,34,44,72,88,100,101,105,162,164,165,171,182,209,225,],[19,19,55,19,113,19,19,19,113,19,19,19,19,113,19,19,]),'llamar_funciones':([2,11,36,44,72,88,100,101,105,162,164,165,171,182,209,225,],[20,20,56,20,114,20,20,20,114,20,20,20,20,114,20,20,]),'declaracion_variable':([2,11,44,88,100,101,162,164,165,171,209,225,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'multiple_declaracion_variable':([2,11,44,88,100,101,162,164,165,171,209,225,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'escribir':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'escribir_cadena_id':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'escribir_cadena_id_cadena':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'escribir_cadena_id_id':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacion':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'asignacion_con_operacion':([2,11,44,72,88,100,101,105,162,164,165,171,182,209,225,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'mientras_declaraciones':([2,11,32,44,72,88,100,101,105,162,164,165,171,182,209,225,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'si':([2,11,34,44,72,88,100,101,105,162,164,165,171,182,209,225,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'si_no':([2,11,34,44,72,88,100,101,105,162,164,165,171,182,209,225,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'llamar_funcion':([2,11,36,44,72,88,100,101,105,162,164,165,171,182,209,225,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'mientras_v1':([2,11,32,44,72,88,100,101,105,162,164,165,171,182,209,225,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'mientras_v2':([2,11,32,44,72,88,100,101,105,162,164,165,171,182,209,225,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'mientras_v3':([2,11,32,44,72,88,100,101,105,162,164,165,171,182,209,225,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'expresion_logica':([42,43,89,172,],[62,69,147,195,]),'tipo_dato_identificador':([42,43,50,51,76,77,78,89,93,120,133,172,183,184,213,],[63,63,74,80,128,128,128,63,148,157,160,63,200,201,224,]),'operaciones_matematicas':([50,76,],[75,127,]),'operacion_matematica':([50,76,77,78,],[76,76,129,130,]),'operacion_matematica_parentesis':([50,76,78,],[77,77,131,]),'operador_logico':([62,69,147,195,],[89,89,89,89,]),'operador_relacional':([63,],[93,]),'cuerpo_funcion':([72,182,],[103,199,]),'sentencias_funcion':([72,105,182,],[104,153,104,]),'sentencia_funcion':([72,105,182,],[105,105,105,]),'posible_declaracion_variable_funcion':([72,105,182,],[106,106,106,]),'declaracion_variable_funcion':([72,105,182,],[115,115,115,]),'multiple_declaracion_variable_funcion':([72,105,182,],[116,116,116,]),'parametros':([73,155,],[119,181,]),'operador_aritmetico':([74,128,158,],[120,120,183,]),'casos':([82,136,],[135,163,]),'caso':([82,136,],[136,136,]),'tipo_retorno_funcion':([152,212,],[176,223,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ALGORITMO cuerpo FIN_ALGORITMO','programa',3,'p_programa','parser.py',13),
  ('programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO','programa',4,'p_programa','parser.py',14),
  ('cuerpo -> sentencias','cuerpo',1,'p_cuerpo','parser.py',25),
  ('sentencias -> sentencia sentencias','sentencias',2,'p_sentencias','parser.py',31),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',32),
  ('sentencia -> posible_declaracion_variable','sentencia',1,'p_sentencia','parser.py',41),
  ('sentencia -> estructura_escribir','sentencia',1,'p_sentencia','parser.py',42),
  ('sentencia -> leer','sentencia',1,'p_sentencia','parser.py',43),
  ('sentencia -> asignaciones','sentencia',1,'p_sentencia','parser.py',44),
  ('sentencia -> para','sentencia',1,'p_sentencia','parser.py',45),
  ('sentencia -> mientras','sentencia',1,'p_sentencia','parser.py',46),
  ('sentencia -> segun','sentencia',1,'p_sentencia','parser.py',47),
  ('sentencia -> multiple_si','sentencia',1,'p_sentencia','parser.py',48),
  ('sentencia -> llamar_funciones','sentencia',1,'p_sentencia','parser.py',49),
  ('posible_declaracion_variable -> declaracion_variable','posible_declaracion_variable',1,'p_posible_declaracion_variable','parser.py',56),
  ('posible_declaracion_variable -> multiple_declaracion_variable','posible_declaracion_variable',1,'p_posible_declaracion_variable','parser.py',57),
  ('declaracion_variable -> DEFINIR ID COMO TIPO_DATO','declaracion_variable',4,'p_declaracion_variable','parser.py',63),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',6,'p_multiple_declaracion_variable','parser.py',70),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',8,'p_multiple_declaracion_variable','parser.py',71),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',10,'p_multiple_declaracion_variable','parser.py',72),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',12,'p_multiple_declaracion_variable','parser.py',73),
  ('asignaciones -> asignacion','asignaciones',1,'p_asignaciones','parser.py',100),
  ('asignaciones -> asignacion_con_operacion','asignaciones',1,'p_asignaciones','parser.py',101),
  ('asignacion -> ID ASIGNAR tipo_dato_identificador','asignacion',3,'p_asignacion','parser.py',107),
  ('asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas','asignacion_con_operacion',3,'p_asignacion_con_operacion','parser.py',122),
  ('estructura_escribir -> escribir','estructura_escribir',1,'p_estructura_escribir','parser.py',128),
  ('estructura_escribir -> escribir_cadena_id','estructura_escribir',1,'p_estructura_escribir','parser.py',129),
  ('estructura_escribir -> escribir_cadena_id_cadena','estructura_escribir',1,'p_estructura_escribir','parser.py',130),
  ('estructura_escribir -> escribir_cadena_id_id','estructura_escribir',1,'p_estructura_escribir','parser.py',131),
  ('escribir -> ESCRIBIR CADENA','escribir',2,'p_escribir','parser.py',137),
  ('escribir -> ESCRIBIR ID','escribir',2,'p_escribir','parser.py',138),
  ('escribir -> ESCRIBIR NUMERO','escribir',2,'p_escribir','parser.py',139),
  ('escribir_cadena_id -> ESCRIBIR CADENA COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',146),
  ('escribir_cadena_id -> ESCRIBIR ID COMA CADENA','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',147),
  ('escribir_cadena_id -> ESCRIBIR ID COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',148),
  ('escribir_cadena_id -> ESCRIBIR ID COMA NUMERO','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',149),
  ('escribir_cadena_id -> ESCRIBIR NUMERO COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',150),
  ('escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA','escribir_cadena_id_cadena',6,'p_escribir_cadena_id_cadena','parser.py',157),
  ('escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID','escribir_cadena_id_cadena',6,'p_escribir_cadena_id_cadena','parser.py',158),
  ('escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID','escribir_cadena_id_id',8,'p_escribir_cadena_id_id','parser.py',166),
  ('escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA','escribir_cadena_id_id',8,'p_escribir_cadena_id_id','parser.py',167),
  ('leer -> LEER ID','leer',2,'p_leer','parser.py',173),
  ('para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA','para',11,'p_para','parser.py',179),
  ('mientras -> mientras_declaraciones mientras','mientras',2,'p_mientras','parser.py',186),
  ('mientras -> mientras_declaraciones','mientras',1,'p_mientras','parser.py',187),
  ('mientras_declaraciones -> mientras_v1','mientras_declaraciones',1,'p_mientras_declaraciones','parser.py',193),
  ('mientras_declaraciones -> mientras_v2','mientras_declaraciones',1,'p_mientras_declaraciones','parser.py',194),
  ('mientras_declaraciones -> mientras_v3','mientras_declaraciones',1,'p_mientras_declaraciones','parser.py',195),
  ('mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS','mientras_v1',5,'p_mientras_v1','parser.py',201),
  ('mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS','mientras_v2',10,'p_mientras_v2','parser.py',207),
  ('mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS','mientras_v3',5,'p_mientras_v3','parser.py',213),
  ('expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador','expresion_logica',3,'p_expresion_logica','parser.py',220),
  ('expresion_logica -> expresion_logica operador_logico expresion_logica','expresion_logica',3,'p_expresion_logica','parser.py',221),
  ('tipo_dato_identificador -> ID','tipo_dato_identificador',1,'p_tipo_dato_identificador','parser.py',227),
  ('tipo_dato_identificador -> NUMERO','tipo_dato_identificador',1,'p_tipo_dato_identificador','parser.py',228),
  ('tipo_dato_identificador -> CADENA','tipo_dato_identificador',1,'p_tipo_dato_identificador','parser.py',229),
  ('tipo_dato_identificador -> REAL','tipo_dato_identificador',1,'p_tipo_dato_identificador','parser.py',230),
  ('tipo_dato_identificador -> LOGICO','tipo_dato_identificador',1,'p_tipo_dato_identificador','parser.py',231),
  ('operador_logico -> Y','operador_logico',1,'p_operador_logico','parser.py',237),
  ('operador_logico -> O','operador_logico',1,'p_operador_logico','parser.py',238),
  ('operador_logico -> NO','operador_logico',1,'p_operador_logico','parser.py',239),
  ('operador_relacional -> ES_MAYOR_QUE','operador_relacional',1,'p_operador_relacional','parser.py',245),
  ('operador_relacional -> ES_MENOR_QUE','operador_relacional',1,'p_operador_relacional','parser.py',246),
  ('operador_relacional -> ES_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',247),
  ('operador_relacional -> ES_MAYOR_O_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',248),
  ('operador_relacional -> ES_MENOR_O_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',249),
  ('operador_relacional -> ES_DISTINTO_QUE','operador_relacional',1,'p_operador_relacional','parser.py',250),
  ('operaciones_matematicas -> operacion_matematica','operaciones_matematicas',1,'p_operaciones_matematicas','parser.py',256),
  ('operaciones_matematicas -> operacion_matematica_parentesis','operaciones_matematicas',1,'p_operaciones_matematicas','parser.py',257),
  ('operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica','operaciones_matematicas',2,'p_operaciones_matematicas','parser.py',258),
  ('operaciones_matematicas -> operacion_matematica operaciones_matematicas','operaciones_matematicas',2,'p_operaciones_matematicas','parser.py',259),
  ('operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador','operacion_matematica',3,'p_operacion_matematica','parser.py',268),
  ('operador_aritmetico -> MAS','operador_aritmetico',1,'p_operador_aritmetico','parser.py',280),
  ('operador_aritmetico -> MENOS','operador_aritmetico',1,'p_operador_aritmetico','parser.py',281),
  ('operador_aritmetico -> POR','operador_aritmetico',1,'p_operador_aritmetico','parser.py',282),
  ('operador_aritmetico -> DIVIDIDO','operador_aritmetico',1,'p_operador_aritmetico','parser.py',283),
  ('operador_aritmetico -> ELEVADO_A','operador_aritmetico',1,'p_operador_aritmetico','parser.py',284),
  ('operador_aritmetico -> RESIDUO','operador_aritmetico',1,'p_operador_aritmetico','parser.py',285),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER','operacion_matematica_parentesis',3,'p_operacion_matematica_parentesis','parser.py',291),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador','operacion_matematica_parentesis',5,'p_operacion_matematica_parentesis','parser.py',292),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER','operacion_matematica_parentesis',3,'p_operacion_matematica_parentesis','parser.py',293),
  ('segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN','segun',7,'p_segun','parser.py',299),
  ('casos -> caso casos','casos',2,'p_casos','parser.py',305),
  ('casos -> caso','casos',1,'p_casos','parser.py',306),
  ('caso -> NUMERO DOS_PUN sentencias','caso',3,'p_caso','parser.py',315),
  ('caso -> CADENA DOS_PUN sentencias','caso',3,'p_caso','parser.py',316),
  ('multiple_si -> si multiple_si','multiple_si',2,'p_multiple_si','parser.py',322),
  ('multiple_si -> si_no','multiple_si',1,'p_multiple_si','parser.py',323),
  ('si -> SI expresion_logica ENTONCES sentencias FIN_SI','si',5,'p_si','parser.py',329),
  ('si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI','si_no',7,'p_si_no','parser.py',335),
  ('cuerpo_funcion -> sentencias_funcion','cuerpo_funcion',1,'p_cuerpo_funcion','parser.py',342),
  ('sentencias_funcion -> sentencia_funcion sentencias_funcion','sentencias_funcion',2,'p_sentencias_funcion','parser.py',348),
  ('sentencias_funcion -> sentencia_funcion','sentencias_funcion',1,'p_sentencias_funcion','parser.py',349),
  ('sentencia_funcion -> posible_declaracion_variable_funcion','sentencia_funcion',1,'p_sentencia_funcion','parser.py',358),
  ('sentencia_funcion -> estructura_escribir','sentencia_funcion',1,'p_sentencia_funcion','parser.py',359),
  ('sentencia_funcion -> leer','sentencia_funcion',1,'p_sentencia_funcion','parser.py',360),
  ('sentencia_funcion -> asignaciones','sentencia_funcion',1,'p_sentencia_funcion','parser.py',361),
  ('sentencia_funcion -> para','sentencia_funcion',1,'p_sentencia_funcion','parser.py',362),
  ('sentencia_funcion -> mientras','sentencia_funcion',1,'p_sentencia_funcion','parser.py',363),
  ('sentencia_funcion -> segun','sentencia_funcion',1,'p_sentencia_funcion','parser.py',364),
  ('sentencia_funcion -> multiple_si','sentencia_funcion',1,'p_sentencia_funcion','parser.py',365),
  ('sentencia_funcion -> llamar_funciones','sentencia_funcion',1,'p_sentencia_funcion','parser.py',366),
  ('posible_declaracion_variable_funcion -> declaracion_variable_funcion','posible_declaracion_variable_funcion',1,'p_posible_declaracion_variable_funcion','parser.py',373),
  ('posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion','posible_declaracion_variable_funcion',1,'p_posible_declaracion_variable_funcion','parser.py',374),
  ('declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO','declaracion_variable_funcion',4,'p_declaracion_variable_funcion','parser.py',380),
  ('multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable_funcion',6,'p_multiple_declaracion_variable_funcion','parser.py',387),
  ('multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable_funcion',8,'p_multiple_declaracion_variable_funcion','parser.py',388),
  ('multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable_funcion',10,'p_multiple_declaracion_variable_funcion','parser.py',389),
  ('multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable_funcion',12,'p_multiple_declaracion_variable_funcion','parser.py',390),
  ('funciones -> funcion funciones','funciones',2,'p_funciones','parser.py',417),
  ('funciones -> funcion','funciones',1,'p_funciones','parser.py',418),
  ('tipo_retorno_funcion -> ID','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',424),
  ('tipo_retorno_funcion -> LOGICO','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',425),
  ('tipo_retorno_funcion -> CADENA','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',426),
  ('funcion -> funcion_sin_retorno','funcion',1,'p_funcion','parser.py',432),
  ('funcion -> funcion_con_retorno','funcion',1,'p_funcion','parser.py',433),
  ('funcion -> funcion_con_parametros_con_retorno','funcion',1,'p_funcion','parser.py',434),
  ('funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION','funcion_sin_retorno',5,'p_funcion_sin_retorno','parser.py',440),
  ('funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION','funcion_con_retorno',7,'p_funcion_con_retorno','parser.py',447),
  ('funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION','funcion_con_parametros_con_retorno',10,'p_funcion_con_parametros_con_retorno','parser.py',454),
  ('parametros -> ID','parametros',1,'p_parametros','parser.py',461),
  ('parametros -> ID COMA parametros','parametros',3,'p_parametros','parser.py',462),
  ('llamar_funciones -> llamar_funcion llamar_funciones','llamar_funciones',2,'p_llamar_funciones','parser.py',471),
  ('llamar_funciones -> llamar_funcion','llamar_funciones',1,'p_llamar_funciones','parser.py',472),
  ('llamar_funcion -> ID PAR_IZQ PAR_DER','llamar_funcion',3,'p_llamar_funcion_sin_parametros','parser.py',478),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER','llamar_funcion',4,'p_llamar_funcion_con_parametros','parser.py',484),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',6,'p_llamar_funcion_con_parametros','parser.py',485),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',8,'p_llamar_funcion_con_parametros','parser.py',486),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',10,'p_llamar_funcion_con_parametros','parser.py',487),
]
