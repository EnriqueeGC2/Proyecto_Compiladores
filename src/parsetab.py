
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALGORITMO ASIGNAR CADENA CARACTER COMA COMENTARIO COMO CONVERTIRANUMERO CONVERTIRATEXTO CON_PASO COR_DER COR_IZQ DEFINIR DESDE DE_OTRO_MODO DIVIDIDO DOS_PUN ELEVADO_A ENTERO ENTONCES ESCRIBIR ES_DISTINTO_QUE ES_IGUAL_QUE ES_MAYOR_O_IGUAL_QUE ES_MAYOR_QUE ES_MENOR_O_IGUAL_QUE ES_MENOR_QUE FIN_ALGORITMO FIN_FUNCION FIN_MIENTRAS FIN_PARA FIN_PROCEDIMIENTO FIN_SEGUN FIN_SI FIN_SI_NO FUNCION HACER HASTA ID IGUAL_A LEER LLAVE_DER LLAVE_IZQ LOGICO MAS MENOS MIENTRAS NO NUMERO O PARA PAR_DER PAR_IZQ POR PUN_Y_COM REAL RESIDUO RETORNAR SEGUN SI SI_NO TIPO_DATO Y\n    programa : ALGORITMO cuerpo FIN_ALGORITMO\n                | funciones ALGORITMO cuerpo FIN_ALGORITMO\n    \n    cuerpo : sentencias\n    \n    sentencias : sentencia sentencias\n               | sentencia\n    \n    sentencia : posible_declaracion_variable\n                | estructura_escribir\n                | leer\n                | asignaciones\n                | para\n                | mientras\n                | segun\n                | multiple_si\n                | llamar_funciones\n    \n    posible_declaracion_variable : declaracion_variable\n                                |  multiple_declaracion_variable\n    \n    declaracion_variable : DEFINIR ID COMO TIPO_DATO\n    \n    multiple_declaracion_variable : DEFINIR ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n                                | DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO\n    \n    asignaciones : asignacion\n                | asignacion_con_operacion\n    \n    asignacion : ID ASIGNAR tipo_dato_identificador\n    \n    asignacion_con_operacion : ID ASIGNAR operaciones_matematicas\n    \n    estructura_escribir : escribir\n                        | escribir_cadena_id\n                        | escribir_cadena_id_cadena\n                        | escribir_cadena_id_id\n    \n    escribir : ESCRIBIR CADENA\n                | ESCRIBIR ID\n                | ESCRIBIR NUMERO\n    \n    escribir_cadena_id : ESCRIBIR CADENA COMA ID\n                        | ESCRIBIR ID COMA CADENA\n                        | ESCRIBIR ID COMA ID\n                        | ESCRIBIR ID COMA NUMERO\n                        | ESCRIBIR NUMERO COMA ID\n    \n    escribir_cadena_id_cadena : ESCRIBIR CADENA COMA ID COMA CADENA\n                                | ESCRIBIR ID COMA CADENA COMA ID\n    \n    escribir_cadena_id_id : ESCRIBIR CADENA COMA ID COMA CADENA COMA ID\n                            | ESCRIBIR ID COMA CADENA COMA ID COMA CADENA\n    \n    leer : LEER ID\n    \n    para : PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA\n    \n    mientras : MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS\n    \n    expresion_logica : tipo_dato_identificador operador_relacional tipo_dato_identificador\n                    | expresion_logica operador_logico expresion_logica\n    \n    tipo_dato_identificador : ID\n                            | NUMERO\n                            | CADENA\n    \n    operador_logico : Y\n                    | O\n                    | NO\n    \n    operador_relacional : ES_MAYOR_QUE\n                        | ES_MENOR_QUE\n                        | ES_IGUAL_QUE\n                        | ES_MAYOR_O_IGUAL_QUE\n                        | ES_MENOR_O_IGUAL_QUE\n                        | ES_DISTINTO_QUE\n    \n    operaciones_matematicas : operacion_matematica\n                            | operacion_matematica_parentesis\n                            | operacion_matematica_parentesis operacion_matematica\n                            | operacion_matematica operaciones_matematicas\n    \n    operacion_matematica : tipo_dato_identificador operador_aritmetico tipo_dato_identificador\n    \n    operador_aritmetico : MAS\n                        | MENOS\n                        | POR\n                        | DIVIDIDO\n                        | ELEVADO_A\n                        | RESIDUO\n    \n    operacion_matematica_parentesis : PAR_IZQ operacion_matematica PAR_DER\n                                    | PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador\n                                    | PAR_IZQ operacion_matematica_parentesis PAR_DER\n    \n    segun : SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN\n    \n    casos : caso casos\n            | caso\n    \n    caso : NUMERO DOS_PUN sentencias\n            | CADENA DOS_PUN sentencias\n    \n    multiple_si : si multiple_si\n                | si_no\n    \n    si : SI expresion_logica ENTONCES sentencias FIN_SI\n    \n    si_no : SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI\n    \n    funciones : funcion funciones\n                | funcion \n    \n    tipo_retorno_funcion : ID\n                        | LOGICO\n                        | CADENA\n    \n    funcion : funcion_sin_retorno\n            | funcion_con_retorno\n            | funcion_con_parametros_con_retorno\n    \n    funcion_sin_retorno : FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION\n    \n    funcion_con_retorno : FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION\n    \n    funcion_con_parametros_con_retorno : FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION\n    \n    parametros : ID COMO TIPO_DATO\n                | ID COMO TIPO_DATO COMA parametros\n    \n    llamar_funciones : llamar_funcion llamar_funciones\n                    | llamar_funcion\n    \n    llamar_funcion : ID PAR_IZQ PAR_DER\n    \n    llamar_funcion : ID PAR_IZQ tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n                    | ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER\n    '
    
_lr_action_items = {'ALGORITMO':([0,3,4,5,6,7,41,127,165,191,],[2,40,-83,-87,-88,-89,-82,-90,-91,-92,]),'FUNCION':([0,4,5,6,7,127,165,191,],[8,8,-87,-88,-89,-90,-91,-92,]),'$end':([1,43,93,],[0,-1,-2,]),'LEER':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[27,27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,27,-42,-47,-48,-49,-78,-95,-30,-31,-32,27,-24,-25,-59,-60,-97,27,27,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,27,27,27,27,27,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,27,-101,-20,-43,-21,]),'PARA':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[31,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,31,-42,-47,-48,-49,-78,-95,-30,-31,-32,31,-24,-25,-59,-60,-97,31,31,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,31,31,31,31,31,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,31,-101,-20,-43,-21,]),'MIENTRAS':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[32,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,32,-42,-47,-48,-49,-78,-95,-30,-31,-32,32,-24,-25,-59,-60,-97,32,32,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,32,32,32,32,32,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,32,-101,-20,-43,-21,]),'SEGUN':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[33,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,33,-42,-47,-48,-49,-78,-95,-30,-31,-32,33,-24,-25,-59,-60,-97,33,33,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,33,33,33,33,33,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,33,-101,-20,-43,-21,]),'DEFINIR':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[37,37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,37,-42,-47,-48,-49,-78,-95,-30,-31,-32,37,-24,-25,-59,-60,-97,37,37,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,37,37,37,37,37,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,37,-101,-20,-43,-21,]),'ESCRIBIR':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[38,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,38,-42,-47,-48,-49,-78,-95,-30,-31,-32,38,-24,-25,-59,-60,-97,38,38,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,38,38,38,38,38,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,38,-101,-20,-43,-21,]),'ID':([2,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,35,36,37,38,39,40,45,46,47,51,52,53,55,56,59,60,61,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,97,98,99,100,101,102,103,104,106,109,110,119,121,122,123,124,125,128,131,132,133,136,137,139,140,141,144,146,152,153,154,155,161,162,163,166,168,171,172,174,176,178,179,180,183,184,185,188,189,192,195,196,198,],[28,42,28,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,45,-22,-23,48,51,54,-79,57,58,60,51,28,-42,51,51,-47,-48,-49,-78,-95,-30,-31,-32,28,95,-24,-25,51,51,51,-97,28,51,-50,-51,-52,51,-53,-54,-55,-56,-57,-58,120,121,122,125,28,51,-64,-65,-66,-67,-68,-69,-62,-61,-98,51,-17,-33,-35,-34,-36,-37,147,-63,-70,-72,-44,28,28,28,160,163,28,28,51,51,-99,-18,-38,-39,95,-71,-73,182,184,-81,147,51,-100,-19,-40,-41,28,194,-101,-20,-43,-21,]),'SI':([2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,34,35,36,40,45,51,52,53,55,56,59,60,61,64,66,67,68,69,71,74,92,104,106,109,119,121,122,123,124,125,131,132,133,136,137,139,140,145,146,152,155,161,162,163,168,171,176,180,183,184,185,188,192,195,196,198,],[39,39,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,39,-79,-96,39,-42,-47,-48,-49,-78,-95,-30,-31,-32,39,-24,-25,-59,-60,-97,39,39,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,39,39,39,-80,39,39,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,39,-101,-20,-43,-21,]),'FIN_ALGORITMO':([9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,63,66,67,68,69,71,104,106,109,119,121,122,123,124,125,131,132,133,136,155,161,162,163,168,171,176,180,183,184,185,192,195,196,198,],[43,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,93,-24,-25,-59,-60,-97,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'FIN_FUNCION':([10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,94,104,106,109,119,121,122,123,124,125,131,132,133,136,147,148,149,150,155,161,162,163,168,171,176,180,183,184,185,186,192,195,196,198,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,127,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-84,165,-85,-86,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,191,-101,-20,-43,-21,]),'RETORNAR':([10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,94,104,106,109,119,121,122,123,124,125,131,132,133,136,155,161,162,163,167,168,171,176,180,183,184,185,192,195,196,198,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,128,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-99,-18,-38,-39,178,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'FIN_MIENTRAS':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,112,119,121,122,123,124,125,131,132,133,136,155,161,162,163,168,171,176,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,136,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'FIN_SI':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,119,121,122,123,124,125,126,131,132,133,136,155,161,162,163,164,168,171,176,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,-17,-33,-35,-34,-36,-37,145,-63,-70,-72,-44,-99,-18,-38,-39,176,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'SI_NO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,119,121,122,123,124,125,126,131,132,133,136,155,161,162,163,168,171,176,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,-17,-33,-35,-34,-36,-37,146,-63,-70,-72,-44,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'FIN_SEGUN':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,119,121,122,123,124,125,131,132,133,136,155,157,161,162,163,168,171,176,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-99,171,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'NUMERO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,38,39,44,45,46,47,51,52,53,55,56,59,60,61,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,90,97,98,99,100,101,102,103,104,106,109,110,116,119,121,122,123,124,125,131,132,133,135,136,153,154,155,158,159,161,162,163,168,170,171,176,179,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,52,-79,-96,61,52,-4,-42,52,52,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,52,52,52,-97,111,52,-50,-51,-52,52,-53,-54,-55,-56,-57,-58,117,124,52,-64,-65,-66,-67,-68,-69,-62,-61,-98,52,117,-17,-33,-35,-34,-36,-37,-63,-70,-72,156,-44,52,52,-99,-76,-77,-18,-38,-39,-71,181,-73,-81,52,-100,-19,-40,-41,-101,-20,-43,-21,]),'CADENA':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,35,36,38,39,44,45,46,47,51,52,53,55,56,59,60,61,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,97,98,99,100,101,102,103,104,106,109,110,116,119,121,122,123,124,125,128,131,132,133,136,143,153,154,155,158,159,161,162,163,168,171,175,176,178,179,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,53,-79,-96,59,53,-4,-42,53,53,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,53,53,53,-97,53,-50,-51,-52,53,-53,-54,-55,-56,-57,-58,118,123,53,-64,-65,-66,-67,-68,-69,-62,-61,-98,53,118,-17,-33,-35,-34,-36,-37,150,-63,-70,-72,-44,162,53,53,-99,-76,-77,-18,-38,-39,-71,-73,185,-81,150,53,-100,-19,-40,-41,-101,-20,-43,-21,]),'DE_OTRO_MODO':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,115,116,119,121,122,123,124,125,131,132,133,136,138,155,158,159,161,162,163,168,171,176,180,183,184,185,192,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,137,-75,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-74,-99,-76,-77,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,-20,-43,-21,]),'FIN_PARA':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,35,36,44,45,51,52,53,55,56,59,60,61,66,67,68,69,71,104,106,109,119,121,122,123,124,125,131,132,133,136,155,161,162,163,168,171,176,180,183,184,185,192,193,195,196,198,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-28,-29,-22,-23,-79,-96,-4,-42,-47,-48,-49,-78,-95,-30,-31,-32,-24,-25,-59,-60,-97,-62,-61,-98,-17,-33,-35,-34,-36,-37,-63,-70,-72,-44,-99,-18,-38,-39,-71,-73,-81,-100,-19,-40,-41,-101,196,-20,-43,-21,]),'ASIGNAR':([28,],[46,]),'PAR_IZQ':([28,42,46,51,52,53,57,68,70,131,],[47,65,70,-47,-48,-49,47,70,70,-63,]),'PUN_Y_COM':([42,130,],[64,152,]),'PAR_DER':([47,51,52,53,72,96,107,108,131,132,133,134,151,168,169,177,187,],[71,-47,-48,-49,109,130,132,133,-63,-70,-72,155,-93,-71,180,-94,192,]),'DESDE':([48,],[73,]),'HACER':([49,51,52,53,54,113,114,181,],[74,-47,-48,-49,86,-46,-45,188,]),'Y':([49,51,52,53,62,113,114,],[76,-47,-48,-49,76,76,-45,]),'O':([49,51,52,53,62,113,114,],[77,-47,-48,-49,77,77,-45,]),'NO':([49,51,52,53,62,113,114,],[78,-47,-48,-49,78,78,-45,]),'ES_MAYOR_QUE':([50,51,52,53,],[80,-47,-48,-49,]),'ES_MENOR_QUE':([50,51,52,53,],[81,-47,-48,-49,]),'ES_IGUAL_QUE':([50,51,52,53,],[82,-47,-48,-49,]),'ES_MAYOR_O_IGUAL_QUE':([50,51,52,53,],[83,-47,-48,-49,]),'ES_MENOR_O_IGUAL_QUE':([50,51,52,53,],[84,-47,-48,-49,]),'ES_DISTINTO_QUE':([50,51,52,53,],[85,-47,-48,-49,]),'MAS':([51,52,53,66,105,132,],[-47,-48,-49,98,98,98,]),'MENOS':([51,52,53,66,105,132,],[-47,-48,-49,99,99,99,]),'POR':([51,52,53,66,105,132,],[-47,-48,-49,100,100,100,]),'DIVIDIDO':([51,52,53,66,105,132,],[-47,-48,-49,101,101,101,]),'ELEVADO_A':([51,52,53,66,105,132,],[-47,-48,-49,102,102,102,]),'RESIDUO':([51,52,53,66,105,132,],[-47,-48,-49,103,103,103,]),'COMA':([51,52,53,58,59,60,61,72,120,121,123,134,151,160,162,163,169,182,],[-47,-48,-49,88,89,90,91,110,141,143,144,154,166,172,174,175,179,189,]),'ENTONCES':([51,52,53,62,113,114,],[-47,-48,-49,92,-46,-45,]),'COMO':([58,95,120,160,182,194,],[87,129,142,173,190,197,]),'TIPO_DATO':([87,129,142,173,190,197,],[119,151,161,183,195,198,]),'HASTA':([111,],[135,]),'DOS_PUN':([117,118,],[139,140,]),'LOGICO':([128,178,],[149,149,]),'CON_PASO':([156,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funciones':([0,4,],[3,41,]),'funcion':([0,4,],[4,4,]),'funcion_sin_retorno':([0,4,],[5,5,]),'funcion_con_retorno':([0,4,],[6,6,]),'funcion_con_parametros_con_retorno':([0,4,],[7,7,]),'cuerpo':([2,40,64,152,],[9,63,94,167,]),'sentencias':([2,11,40,64,74,92,137,139,140,146,152,188,],[10,44,10,10,112,126,157,158,159,164,10,193,]),'sentencia':([2,11,40,64,74,92,137,139,140,146,152,188,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'posible_declaracion_variable':([2,11,40,64,74,92,137,139,140,146,152,188,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'estructura_escribir':([2,11,40,64,74,92,137,139,140,146,152,188,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'leer':([2,11,40,64,74,92,137,139,140,146,152,188,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'asignaciones':([2,11,40,64,74,92,137,139,140,146,152,188,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'para':([2,11,40,64,74,92,137,139,140,146,152,188,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'mientras':([2,11,40,64,74,92,137,139,140,146,152,188,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'segun':([2,11,40,64,74,92,137,139,140,146,152,188,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'multiple_si':([2,11,34,40,64,74,92,137,139,140,146,152,188,],[19,19,55,19,19,19,19,19,19,19,19,19,19,]),'llamar_funciones':([2,11,36,40,64,74,92,137,139,140,146,152,188,],[20,20,56,20,20,20,20,20,20,20,20,20,20,]),'declaracion_variable':([2,11,40,64,74,92,137,139,140,146,152,188,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'multiple_declaracion_variable':([2,11,40,64,74,92,137,139,140,146,152,188,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'escribir':([2,11,40,64,74,92,137,139,140,146,152,188,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'escribir_cadena_id':([2,11,40,64,74,92,137,139,140,146,152,188,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'escribir_cadena_id_cadena':([2,11,40,64,74,92,137,139,140,146,152,188,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'escribir_cadena_id_id':([2,11,40,64,74,92,137,139,140,146,152,188,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacion':([2,11,40,64,74,92,137,139,140,146,152,188,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'asignacion_con_operacion':([2,11,40,64,74,92,137,139,140,146,152,188,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'si':([2,11,34,40,64,74,92,137,139,140,146,152,188,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'si_no':([2,11,34,40,64,74,92,137,139,140,146,152,188,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'llamar_funcion':([2,11,36,40,64,74,92,137,139,140,146,152,188,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expresion_logica':([32,39,75,],[49,62,113,]),'tipo_dato_identificador':([32,39,46,47,68,69,70,75,79,97,110,153,154,179,],[50,50,66,72,105,105,105,50,114,131,134,168,169,187,]),'operaciones_matematicas':([46,68,],[67,104,]),'operacion_matematica':([46,68,69,70,],[68,68,106,107,]),'operacion_matematica_parentesis':([46,68,70,],[69,69,108,]),'operador_logico':([49,62,113,],[75,75,75,]),'operador_relacional':([50,],[79,]),'parametros':([65,166,],[96,177,]),'operador_aritmetico':([66,105,132,],[97,97,153,]),'casos':([86,116,],[115,138,]),'caso':([86,116,],[116,116,]),'tipo_retorno_funcion':([128,178,],[148,186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ALGORITMO cuerpo FIN_ALGORITMO','programa',3,'p_programa','parser.py',9),
  ('programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO','programa',4,'p_programa','parser.py',10),
  ('cuerpo -> sentencias','cuerpo',1,'p_cuerpo','parser.py',21),
  ('sentencias -> sentencia sentencias','sentencias',2,'p_sentencias','parser.py',27),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',28),
  ('sentencia -> posible_declaracion_variable','sentencia',1,'p_sentencia','parser.py',37),
  ('sentencia -> estructura_escribir','sentencia',1,'p_sentencia','parser.py',38),
  ('sentencia -> leer','sentencia',1,'p_sentencia','parser.py',39),
  ('sentencia -> asignaciones','sentencia',1,'p_sentencia','parser.py',40),
  ('sentencia -> para','sentencia',1,'p_sentencia','parser.py',41),
  ('sentencia -> mientras','sentencia',1,'p_sentencia','parser.py',42),
  ('sentencia -> segun','sentencia',1,'p_sentencia','parser.py',43),
  ('sentencia -> multiple_si','sentencia',1,'p_sentencia','parser.py',44),
  ('sentencia -> llamar_funciones','sentencia',1,'p_sentencia','parser.py',45),
  ('posible_declaracion_variable -> declaracion_variable','posible_declaracion_variable',1,'p_posible_declaracion_variable','parser.py',52),
  ('posible_declaracion_variable -> multiple_declaracion_variable','posible_declaracion_variable',1,'p_posible_declaracion_variable','parser.py',53),
  ('declaracion_variable -> DEFINIR ID COMO TIPO_DATO','declaracion_variable',4,'p_declaracion_variable','parser.py',59),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',6,'p_multiple_declaracion_variable','parser.py',66),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',8,'p_multiple_declaracion_variable','parser.py',67),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',10,'p_multiple_declaracion_variable','parser.py',68),
  ('multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO','multiple_declaracion_variable',12,'p_multiple_declaracion_variable','parser.py',69),
  ('asignaciones -> asignacion','asignaciones',1,'p_asignaciones','parser.py',86),
  ('asignaciones -> asignacion_con_operacion','asignaciones',1,'p_asignaciones','parser.py',87),
  ('asignacion -> ID ASIGNAR tipo_dato_identificador','asignacion',3,'p_asignacion','parser.py',93),
  ('asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas','asignacion_con_operacion',3,'p_asignacion_con_operacion','parser.py',99),
  ('estructura_escribir -> escribir','estructura_escribir',1,'p_estructura_escribir','parser.py',105),
  ('estructura_escribir -> escribir_cadena_id','estructura_escribir',1,'p_estructura_escribir','parser.py',106),
  ('estructura_escribir -> escribir_cadena_id_cadena','estructura_escribir',1,'p_estructura_escribir','parser.py',107),
  ('estructura_escribir -> escribir_cadena_id_id','estructura_escribir',1,'p_estructura_escribir','parser.py',108),
  ('escribir -> ESCRIBIR CADENA','escribir',2,'p_escribir','parser.py',114),
  ('escribir -> ESCRIBIR ID','escribir',2,'p_escribir','parser.py',115),
  ('escribir -> ESCRIBIR NUMERO','escribir',2,'p_escribir','parser.py',116),
  ('escribir_cadena_id -> ESCRIBIR CADENA COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',123),
  ('escribir_cadena_id -> ESCRIBIR ID COMA CADENA','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',124),
  ('escribir_cadena_id -> ESCRIBIR ID COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',125),
  ('escribir_cadena_id -> ESCRIBIR ID COMA NUMERO','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',126),
  ('escribir_cadena_id -> ESCRIBIR NUMERO COMA ID','escribir_cadena_id',4,'p_escribir_cadena_id','parser.py',127),
  ('escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA','escribir_cadena_id_cadena',6,'p_escribir_cadena_id_cadena','parser.py',134),
  ('escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID','escribir_cadena_id_cadena',6,'p_escribir_cadena_id_cadena','parser.py',135),
  ('escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID','escribir_cadena_id_id',8,'p_escribir_cadena_id_id','parser.py',143),
  ('escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA','escribir_cadena_id_id',8,'p_escribir_cadena_id_id','parser.py',144),
  ('leer -> LEER ID','leer',2,'p_leer','parser.py',151),
  ('para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA','para',11,'p_para','parser.py',157),
  ('mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS','mientras',5,'p_mientras','parser.py',164),
  ('expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador','expresion_logica',3,'p_expresion_logica','parser.py',170),
  ('expresion_logica -> expresion_logica operador_logico expresion_logica','expresion_logica',3,'p_expresion_logica','parser.py',171),
  ('tipo_dato_identificador -> ID','tipo_dato_identificador',1,'p_tipo_dato','parser.py',177),
  ('tipo_dato_identificador -> NUMERO','tipo_dato_identificador',1,'p_tipo_dato','parser.py',178),
  ('tipo_dato_identificador -> CADENA','tipo_dato_identificador',1,'p_tipo_dato','parser.py',179),
  ('operador_logico -> Y','operador_logico',1,'p_operador_logico','parser.py',185),
  ('operador_logico -> O','operador_logico',1,'p_operador_logico','parser.py',186),
  ('operador_logico -> NO','operador_logico',1,'p_operador_logico','parser.py',187),
  ('operador_relacional -> ES_MAYOR_QUE','operador_relacional',1,'p_operador_relacional','parser.py',193),
  ('operador_relacional -> ES_MENOR_QUE','operador_relacional',1,'p_operador_relacional','parser.py',194),
  ('operador_relacional -> ES_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',195),
  ('operador_relacional -> ES_MAYOR_O_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',196),
  ('operador_relacional -> ES_MENOR_O_IGUAL_QUE','operador_relacional',1,'p_operador_relacional','parser.py',197),
  ('operador_relacional -> ES_DISTINTO_QUE','operador_relacional',1,'p_operador_relacional','parser.py',198),
  ('operaciones_matematicas -> operacion_matematica','operaciones_matematicas',1,'p_operaciones_matematicas','parser.py',204),
  ('operaciones_matematicas -> operacion_matematica_parentesis','operaciones_matematicas',1,'p_operaciones_matematicas','parser.py',205),
  ('operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica','operaciones_matematicas',2,'p_operaciones_matematicas','parser.py',206),
  ('operaciones_matematicas -> operacion_matematica operaciones_matematicas','operaciones_matematicas',2,'p_operaciones_matematicas','parser.py',207),
  ('operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador','operacion_matematica',3,'p_operacion_matematica','parser.py',216),
  ('operador_aritmetico -> MAS','operador_aritmetico',1,'p_operador_aritmetico','parser.py',222),
  ('operador_aritmetico -> MENOS','operador_aritmetico',1,'p_operador_aritmetico','parser.py',223),
  ('operador_aritmetico -> POR','operador_aritmetico',1,'p_operador_aritmetico','parser.py',224),
  ('operador_aritmetico -> DIVIDIDO','operador_aritmetico',1,'p_operador_aritmetico','parser.py',225),
  ('operador_aritmetico -> ELEVADO_A','operador_aritmetico',1,'p_operador_aritmetico','parser.py',226),
  ('operador_aritmetico -> RESIDUO','operador_aritmetico',1,'p_operador_aritmetico','parser.py',227),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER','operacion_matematica_parentesis',3,'p_operacion_matematica_parentesis','parser.py',233),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador','operacion_matematica_parentesis',5,'p_operacion_matematica_parentesis','parser.py',234),
  ('operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER','operacion_matematica_parentesis',3,'p_operacion_matematica_parentesis','parser.py',235),
  ('segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN','segun',7,'p_segun','parser.py',241),
  ('casos -> caso casos','casos',2,'p_casos','parser.py',247),
  ('casos -> caso','casos',1,'p_casos','parser.py',248),
  ('caso -> NUMERO DOS_PUN sentencias','caso',3,'p_caso','parser.py',257),
  ('caso -> CADENA DOS_PUN sentencias','caso',3,'p_caso','parser.py',258),
  ('multiple_si -> si multiple_si','multiple_si',2,'p_multiple_si','parser.py',264),
  ('multiple_si -> si_no','multiple_si',1,'p_multiple_si','parser.py',265),
  ('si -> SI expresion_logica ENTONCES sentencias FIN_SI','si',5,'p_si','parser.py',271),
  ('si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI','si_no',7,'p_si_no','parser.py',277),
  ('funciones -> funcion funciones','funciones',2,'p_funciones','parser.py',283),
  ('funciones -> funcion','funciones',1,'p_funciones','parser.py',284),
  ('tipo_retorno_funcion -> ID','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',290),
  ('tipo_retorno_funcion -> LOGICO','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',291),
  ('tipo_retorno_funcion -> CADENA','tipo_retorno_funcion',1,'p_tipo_retorno_funcion','parser.py',292),
  ('funcion -> funcion_sin_retorno','funcion',1,'p_funcion','parser.py',298),
  ('funcion -> funcion_con_retorno','funcion',1,'p_funcion','parser.py',299),
  ('funcion -> funcion_con_parametros_con_retorno','funcion',1,'p_funcion','parser.py',300),
  ('funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION','funcion_sin_retorno',5,'p_funcion_sin_retorno','parser.py',306),
  ('funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION','funcion_con_retorno',7,'p_funcion_con_retorno','parser.py',313),
  ('funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION','funcion_con_parametros_con_retorno',10,'p_funcion_con_parametros_con_retorno','parser.py',320),
  ('parametros -> ID COMO TIPO_DATO','parametros',3,'p_parametros','parser.py',327),
  ('parametros -> ID COMO TIPO_DATO COMA parametros','parametros',5,'p_parametros','parser.py',328),
  ('llamar_funciones -> llamar_funcion llamar_funciones','llamar_funciones',2,'p_llamar_funciones','parser.py',337),
  ('llamar_funciones -> llamar_funcion','llamar_funciones',1,'p_llamar_funciones','parser.py',338),
  ('llamar_funcion -> ID PAR_IZQ PAR_DER','llamar_funcion',3,'p_llamar_funcion_sin_parametros','parser.py',344),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER','llamar_funcion',4,'p_llamar_funcion_con_parametros','parser.py',350),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',6,'p_llamar_funcion_con_parametros','parser.py',351),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',8,'p_llamar_funcion_con_parametros','parser.py',352),
  ('llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER','llamar_funcion',10,'p_llamar_funcion_con_parametros','parser.py',353),
]
