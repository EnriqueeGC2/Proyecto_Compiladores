Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER
    COMMENT
    CONVERTIRANUMERO
    CONVERTIRATEXTO
    COR_DER
    COR_IZQ
    ENTERO
    FALSO
    FIN_PROCEDIMIENTO
    FIN_SI_NO
    IGUAL_A
    LLAVE_DER
    LLAVE_IZQ
    VERDADERO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ALGORITMO cuerpo FIN_ALGORITMO
Rule 2     programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO
Rule 3     cuerpo -> sentencias
Rule 4     sentencias -> sentencia sentencias
Rule 5     sentencias -> sentencia
Rule 6     sentencia -> posible_declaracion_variable
Rule 7     sentencia -> estructura_escribir
Rule 8     sentencia -> leer
Rule 9     sentencia -> asignaciones
Rule 10    sentencia -> para
Rule 11    sentencia -> mientras
Rule 12    sentencia -> segun
Rule 13    sentencia -> multiple_si
Rule 14    sentencia -> llamar_funciones
Rule 15    posible_declaracion_variable -> declaracion_variable
Rule 16    posible_declaracion_variable -> multiple_declaracion_variable
Rule 17    declaracion_variable -> DEFINIR ID COMO TIPO_DATO
Rule 18    multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO
Rule 19    ids -> ID
Rule 20    ids -> ID COMA ids
Rule 21    estructura_escribir -> ESCRIBIR lista_escribir
Rule 22    lista_escribir -> lista_escribir COMA elemento_escribir
Rule 23    lista_escribir -> elemento_escribir
Rule 24    elemento_escribir -> CADENA
Rule 25    elemento_escribir -> ID
Rule 26    elemento_escribir -> NUMERO
Rule 27    leer -> LEER ID
Rule 28    para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
Rule 29    mientras -> mientras_declaraciones mientras
Rule 30    mientras -> mientras_declaraciones
Rule 31    mientras_declaraciones -> mientras_v1
Rule 32    mientras_declaraciones -> mientras_v2
Rule 33    mientras_declaraciones -> mientras_v3
Rule 34    mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
Rule 35    mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
Rule 36    mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS
Rule 37    asignaciones -> asignacion asignaciones
Rule 38    asignaciones -> asignacion
Rule 39    asignacion -> asignacion_v1
Rule 40    asignacion -> asignacion_con_operacion
Rule 41    asignacion_v1 -> ID ASIGNAR tipo_dato_identificador
Rule 42    asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas
Rule 43    expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador
Rule 44    expresion_logica -> expresion_logica operador_logico expresion_logica
Rule 45    tipo_dato_identificador -> ID
Rule 46    tipo_dato_identificador -> NUMERO
Rule 47    tipo_dato_identificador -> CADENA
Rule 48    tipo_dato_identificador -> REAL
Rule 49    tipo_dato_identificador -> LOGICO
Rule 50    operador_logico -> Y
Rule 51    operador_logico -> O
Rule 52    operador_logico -> NO
Rule 53    operador_relacional -> ES_MAYOR_QUE
Rule 54    operador_relacional -> ES_MENOR_QUE
Rule 55    operador_relacional -> ES_IGUAL_QUE
Rule 56    operador_relacional -> ES_MAYOR_O_IGUAL_QUE
Rule 57    operador_relacional -> ES_MENOR_O_IGUAL_QUE
Rule 58    operador_relacional -> ES_DISTINTO_QUE
Rule 59    operaciones_matematicas -> operacion_matematica_v1
Rule 60    operaciones_matematicas -> operacion_matematica_v2
Rule 61    operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador
Rule 62    operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador
Rule 63    operador_aritmetico -> MAS
Rule 64    operador_aritmetico -> MENOS
Rule 65    operador_aritmetico -> POR
Rule 66    operador_aritmetico -> DIVIDIDO
Rule 67    operador_aritmetico -> ELEVADO_A
Rule 68    operador_aritmetico -> RESIDUO
Rule 69    segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
Rule 70    casos -> caso casos
Rule 71    casos -> caso
Rule 72    caso -> NUMERO DOS_PUN sentencias
Rule 73    caso -> CADENA DOS_PUN sentencias
Rule 74    multiple_si -> si multiple_si
Rule 75    multiple_si -> si_no
Rule 76    si -> SI expresion_logica ENTONCES sentencias FIN_SI
Rule 77    si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
Rule 78    cuerpo_funcion -> sentencias_funcion
Rule 79    sentencias_funcion -> sentencia_funcion sentencias_funcion
Rule 80    sentencias_funcion -> sentencia_funcion
Rule 81    sentencia_funcion -> posible_declaracion_variable_funcion
Rule 82    sentencia_funcion -> estructura_escribir
Rule 83    sentencia_funcion -> leer
Rule 84    sentencia_funcion -> asignaciones
Rule 85    sentencia_funcion -> para
Rule 86    sentencia_funcion -> mientras
Rule 87    sentencia_funcion -> segun
Rule 88    sentencia_funcion -> multiple_si
Rule 89    sentencia_funcion -> llamar_funciones
Rule 90    posible_declaracion_variable_funcion -> declaracion_variable_funcion
Rule 91    posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion
Rule 92    declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO
Rule 93    multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO
Rule 94    funciones -> funcion funciones
Rule 95    funciones -> funcion
Rule 96    tipo_retorno_funcion -> ID
Rule 97    tipo_retorno_funcion -> LOGICO
Rule 98    tipo_retorno_funcion -> CADENA
Rule 99    funcion -> funcion_sin_retorno
Rule 100   funcion -> funcion_con_retorno
Rule 101   funcion -> funcion_con_parametros_con_retorno
Rule 102   funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
Rule 103   funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 104   funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 105   parametros -> ID
Rule 106   parametros -> ID COMA parametros
Rule 107   llamar_funciones -> llamar_funcion llamar_funciones
Rule 108   llamar_funciones -> llamar_funcion
Rule 109   llamar_funcion -> ID PAR_IZQ PAR_DER
Rule 110   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER
Rule 111   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 112   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 113   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

Terminals, with rules where they appear

ALGORITMO            : 1 2
ASIGNAR              : 41 42
CADENA               : 24 47 73 98
CARACTER             : 
COMA                 : 20 22 106 111 112 112 113 113 113
COMMENT              : 
COMO                 : 17 18 92 93
CONVERTIRANUMERO     : 
CONVERTIRATEXTO      : 
CON_PASO             : 28
COR_DER              : 
COR_IZQ              : 
DEFINIR              : 17 18 92 93
DESDE                : 28
DE_OTRO_MODO         : 69
DIVIDIDO             : 66
DOS_PUN              : 72 73
ELEVADO_A            : 67
ENTERO               : 
ENTONCES             : 76 77
ESCRIBIR             : 21
ES_DISTINTO_QUE      : 58
ES_IGUAL_QUE         : 55
ES_MAYOR_O_IGUAL_QUE : 56
ES_MAYOR_QUE         : 53
ES_MENOR_O_IGUAL_QUE : 57
ES_MENOR_QUE         : 54
FALSO                : 
FIN_ALGORITMO        : 1 2
FIN_FUNCION          : 102 103 104
FIN_MIENTRAS         : 34 35 35 36
FIN_PARA             : 28
FIN_PROCEDIMIENTO    : 
FIN_SEGUN            : 69
FIN_SI               : 76 77
FIN_SI_NO            : 
FUNCION              : 102 103 104
HACER                : 28 34 35 35 36 69
HASTA                : 28
ID                   : 17 19 20 25 27 28 41 42 45 69 92 96 102 103 104 105 106 109 110 111 112 113
IGUAL_A              : 
LEER                 : 27
LLAVE_DER            : 
LLAVE_IZQ            : 
LOGICO               : 36 49 97
MAS                  : 63
MENOS                : 64
MIENTRAS             : 34 35 35 36
NO                   : 52
NUMERO               : 26 28 28 28 46 72
O                    : 51
PARA                 : 28
PAR_DER              : 104 109 110 111 112 113
PAR_IZQ              : 104 109 110 111 112 113
POR                  : 65
PUN_Y_COM            : 102 103 104
REAL                 : 48
RESIDUO              : 68
RETORNAR             : 103 104
SEGUN                : 69
SI                   : 76 77
SI_NO                : 77
TIPO_DATO            : 17 18 92 93
VERDADERO            : 
Y                    : 50
error                : 

Nonterminals, with rules where they appear

asignacion           : 37 38
asignacion_con_operacion : 40
asignacion_v1        : 39
asignaciones         : 9 37 84
caso                 : 70 71
casos                : 69 70
cuerpo               : 1 2
cuerpo_funcion       : 102 103 104
declaracion_variable : 15
declaracion_variable_funcion : 90
elemento_escribir    : 22 23
estructura_escribir  : 7 82
expresion_logica     : 34 35 35 44 44 76 77
funcion              : 94 95
funcion_con_parametros_con_retorno : 101
funcion_con_retorno  : 100
funcion_sin_retorno  : 99
funciones            : 2 94
ids                  : 18 20 93
leer                 : 8 83
lista_escribir       : 21 22
llamar_funcion       : 107 108
llamar_funciones     : 14 89 107
mientras             : 11 29 86
mientras_declaraciones : 29 30
mientras_v1          : 31
mientras_v2          : 32
mientras_v3          : 33
multiple_declaracion_variable : 16
multiple_declaracion_variable_funcion : 91
multiple_si          : 13 74 88
operacion_matematica_v1 : 59
operacion_matematica_v2 : 60
operaciones_matematicas : 42
operador_aritmetico  : 61 62 62
operador_logico      : 44
operador_relacional  : 43
para                 : 10 85
parametros           : 104 106
posible_declaracion_variable : 6
posible_declaracion_variable_funcion : 81
programa             : 0
segun                : 12 87
sentencia            : 4 5
sentencia_funcion    : 79 80
sentencias           : 3 4 28 34 35 35 36 69 72 73 76 77 77
sentencias_funcion   : 78 79
si                   : 74
si_no                : 75
tipo_dato_identificador : 41 43 43 61 61 62 62 62 110 111 111 112 112 112 113 113 113 113
tipo_retorno_funcion : 103 104

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ALGORITMO cuerpo FIN_ALGORITMO
    (2) programa -> . funciones ALGORITMO cuerpo FIN_ALGORITMO
    (94) funciones -> . funcion funciones
    (95) funciones -> . funcion
    (99) funcion -> . funcion_sin_retorno
    (100) funcion -> . funcion_con_retorno
    (101) funcion -> . funcion_con_parametros_con_retorno
    (102) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (103) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (104) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       shift and go to state 2
    FUNCION         shift and go to state 8

    programa                       shift and go to state 1
    funciones                      shift and go to state 3
    funcion                        shift and go to state 4
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    cuerpo                         shift and go to state 9
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 3

    (2) programa -> funciones . ALGORITMO cuerpo FIN_ALGORITMO

    ALGORITMO       shift and go to state 41


state 4

    (94) funciones -> funcion . funciones
    (95) funciones -> funcion .
    (94) funciones -> . funcion funciones
    (95) funciones -> . funcion
    (99) funcion -> . funcion_sin_retorno
    (100) funcion -> . funcion_con_retorno
    (101) funcion -> . funcion_con_parametros_con_retorno
    (102) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (103) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (104) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       reduce using rule 95 (funciones -> funcion .)
    FUNCION         shift and go to state 8

    funcion                        shift and go to state 4
    funciones                      shift and go to state 42
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 5

    (99) funcion -> funcion_sin_retorno .

    FUNCION         reduce using rule 99 (funcion -> funcion_sin_retorno .)
    ALGORITMO       reduce using rule 99 (funcion -> funcion_sin_retorno .)


state 6

    (100) funcion -> funcion_con_retorno .

    FUNCION         reduce using rule 100 (funcion -> funcion_con_retorno .)
    ALGORITMO       reduce using rule 100 (funcion -> funcion_con_retorno .)


state 7

    (101) funcion -> funcion_con_parametros_con_retorno .

    FUNCION         reduce using rule 101 (funcion -> funcion_con_parametros_con_retorno .)
    ALGORITMO       reduce using rule 101 (funcion -> funcion_con_parametros_con_retorno .)


state 8

    (102) funcion_sin_retorno -> FUNCION . ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (103) funcion_con_retorno -> FUNCION . ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (104) funcion_con_parametros_con_retorno -> FUNCION . ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ID              shift and go to state 43


state 9

    (1) programa -> ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 44


state 10

    (3) cuerpo -> sentencias .

    FIN_ALGORITMO   reduce using rule 3 (cuerpo -> sentencias .)


state 11

    (4) sentencias -> sentencia . sentencias
    (5) sentencias -> sentencia .
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

  ! shift/reduce conflict for MIENTRAS resolved as shift
    FIN_ALGORITMO   reduce using rule 5 (sentencias -> sentencia .)
    FIN_SI          reduce using rule 5 (sentencias -> sentencia .)
    SI_NO           reduce using rule 5 (sentencias -> sentencia .)
    FIN_MIENTRAS    reduce using rule 5 (sentencias -> sentencia .)
    FIN_SEGUN       reduce using rule 5 (sentencias -> sentencia .)
    NUMERO          reduce using rule 5 (sentencias -> sentencia .)
    CADENA          reduce using rule 5 (sentencias -> sentencia .)
    DE_OTRO_MODO    reduce using rule 5 (sentencias -> sentencia .)
    FIN_PARA        reduce using rule 5 (sentencias -> sentencia .)
    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

  ! MIENTRAS        [ reduce using rule 5 (sentencias -> sentencia .) ]

    sentencia                      shift and go to state 11
    sentencias                     shift and go to state 45
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 12

    (6) sentencia -> posible_declaracion_variable .

    ESCRIBIR        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    LEER            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    PARA            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SEGUN           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DEFINIR         reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    ID              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    MIENTRAS        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SI          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI_NO           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SEGUN       reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    NUMERO          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    CADENA          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_PARA        reduce using rule 6 (sentencia -> posible_declaracion_variable .)


state 13

    (7) sentencia -> estructura_escribir .

    ESCRIBIR        reduce using rule 7 (sentencia -> estructura_escribir .)
    LEER            reduce using rule 7 (sentencia -> estructura_escribir .)
    PARA            reduce using rule 7 (sentencia -> estructura_escribir .)
    SEGUN           reduce using rule 7 (sentencia -> estructura_escribir .)
    DEFINIR         reduce using rule 7 (sentencia -> estructura_escribir .)
    SI              reduce using rule 7 (sentencia -> estructura_escribir .)
    ID              reduce using rule 7 (sentencia -> estructura_escribir .)
    MIENTRAS        reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_ALGORITMO   reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SI          reduce using rule 7 (sentencia -> estructura_escribir .)
    SI_NO           reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_MIENTRAS    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SEGUN       reduce using rule 7 (sentencia -> estructura_escribir .)
    NUMERO          reduce using rule 7 (sentencia -> estructura_escribir .)
    CADENA          reduce using rule 7 (sentencia -> estructura_escribir .)
    DE_OTRO_MODO    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_PARA        reduce using rule 7 (sentencia -> estructura_escribir .)


state 14

    (8) sentencia -> leer .

    ESCRIBIR        reduce using rule 8 (sentencia -> leer .)
    LEER            reduce using rule 8 (sentencia -> leer .)
    PARA            reduce using rule 8 (sentencia -> leer .)
    SEGUN           reduce using rule 8 (sentencia -> leer .)
    DEFINIR         reduce using rule 8 (sentencia -> leer .)
    SI              reduce using rule 8 (sentencia -> leer .)
    ID              reduce using rule 8 (sentencia -> leer .)
    MIENTRAS        reduce using rule 8 (sentencia -> leer .)
    FIN_ALGORITMO   reduce using rule 8 (sentencia -> leer .)
    FIN_SI          reduce using rule 8 (sentencia -> leer .)
    SI_NO           reduce using rule 8 (sentencia -> leer .)
    FIN_MIENTRAS    reduce using rule 8 (sentencia -> leer .)
    FIN_SEGUN       reduce using rule 8 (sentencia -> leer .)
    NUMERO          reduce using rule 8 (sentencia -> leer .)
    CADENA          reduce using rule 8 (sentencia -> leer .)
    DE_OTRO_MODO    reduce using rule 8 (sentencia -> leer .)
    FIN_PARA        reduce using rule 8 (sentencia -> leer .)


state 15

    (9) sentencia -> asignaciones .

    ESCRIBIR        reduce using rule 9 (sentencia -> asignaciones .)
    LEER            reduce using rule 9 (sentencia -> asignaciones .)
    PARA            reduce using rule 9 (sentencia -> asignaciones .)
    SEGUN           reduce using rule 9 (sentencia -> asignaciones .)
    DEFINIR         reduce using rule 9 (sentencia -> asignaciones .)
    SI              reduce using rule 9 (sentencia -> asignaciones .)
    ID              reduce using rule 9 (sentencia -> asignaciones .)
    MIENTRAS        reduce using rule 9 (sentencia -> asignaciones .)
    FIN_ALGORITMO   reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SI          reduce using rule 9 (sentencia -> asignaciones .)
    SI_NO           reduce using rule 9 (sentencia -> asignaciones .)
    FIN_MIENTRAS    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SEGUN       reduce using rule 9 (sentencia -> asignaciones .)
    NUMERO          reduce using rule 9 (sentencia -> asignaciones .)
    CADENA          reduce using rule 9 (sentencia -> asignaciones .)
    DE_OTRO_MODO    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_PARA        reduce using rule 9 (sentencia -> asignaciones .)


state 16

    (10) sentencia -> para .

    ESCRIBIR        reduce using rule 10 (sentencia -> para .)
    LEER            reduce using rule 10 (sentencia -> para .)
    PARA            reduce using rule 10 (sentencia -> para .)
    SEGUN           reduce using rule 10 (sentencia -> para .)
    DEFINIR         reduce using rule 10 (sentencia -> para .)
    SI              reduce using rule 10 (sentencia -> para .)
    ID              reduce using rule 10 (sentencia -> para .)
    MIENTRAS        reduce using rule 10 (sentencia -> para .)
    FIN_ALGORITMO   reduce using rule 10 (sentencia -> para .)
    FIN_SI          reduce using rule 10 (sentencia -> para .)
    SI_NO           reduce using rule 10 (sentencia -> para .)
    FIN_MIENTRAS    reduce using rule 10 (sentencia -> para .)
    FIN_SEGUN       reduce using rule 10 (sentencia -> para .)
    NUMERO          reduce using rule 10 (sentencia -> para .)
    CADENA          reduce using rule 10 (sentencia -> para .)
    DE_OTRO_MODO    reduce using rule 10 (sentencia -> para .)
    FIN_PARA        reduce using rule 10 (sentencia -> para .)


state 17

    (11) sentencia -> mientras .

    ESCRIBIR        reduce using rule 11 (sentencia -> mientras .)
    LEER            reduce using rule 11 (sentencia -> mientras .)
    PARA            reduce using rule 11 (sentencia -> mientras .)
    SEGUN           reduce using rule 11 (sentencia -> mientras .)
    DEFINIR         reduce using rule 11 (sentencia -> mientras .)
    SI              reduce using rule 11 (sentencia -> mientras .)
    ID              reduce using rule 11 (sentencia -> mientras .)
    MIENTRAS        reduce using rule 11 (sentencia -> mientras .)
    FIN_ALGORITMO   reduce using rule 11 (sentencia -> mientras .)
    FIN_SI          reduce using rule 11 (sentencia -> mientras .)
    SI_NO           reduce using rule 11 (sentencia -> mientras .)
    FIN_MIENTRAS    reduce using rule 11 (sentencia -> mientras .)
    FIN_SEGUN       reduce using rule 11 (sentencia -> mientras .)
    NUMERO          reduce using rule 11 (sentencia -> mientras .)
    CADENA          reduce using rule 11 (sentencia -> mientras .)
    DE_OTRO_MODO    reduce using rule 11 (sentencia -> mientras .)
    FIN_PARA        reduce using rule 11 (sentencia -> mientras .)


state 18

    (12) sentencia -> segun .

    ESCRIBIR        reduce using rule 12 (sentencia -> segun .)
    LEER            reduce using rule 12 (sentencia -> segun .)
    PARA            reduce using rule 12 (sentencia -> segun .)
    SEGUN           reduce using rule 12 (sentencia -> segun .)
    DEFINIR         reduce using rule 12 (sentencia -> segun .)
    SI              reduce using rule 12 (sentencia -> segun .)
    ID              reduce using rule 12 (sentencia -> segun .)
    MIENTRAS        reduce using rule 12 (sentencia -> segun .)
    FIN_ALGORITMO   reduce using rule 12 (sentencia -> segun .)
    FIN_SI          reduce using rule 12 (sentencia -> segun .)
    SI_NO           reduce using rule 12 (sentencia -> segun .)
    FIN_MIENTRAS    reduce using rule 12 (sentencia -> segun .)
    FIN_SEGUN       reduce using rule 12 (sentencia -> segun .)
    NUMERO          reduce using rule 12 (sentencia -> segun .)
    CADENA          reduce using rule 12 (sentencia -> segun .)
    DE_OTRO_MODO    reduce using rule 12 (sentencia -> segun .)
    FIN_PARA        reduce using rule 12 (sentencia -> segun .)


state 19

    (13) sentencia -> multiple_si .

    ESCRIBIR        reduce using rule 13 (sentencia -> multiple_si .)
    LEER            reduce using rule 13 (sentencia -> multiple_si .)
    PARA            reduce using rule 13 (sentencia -> multiple_si .)
    SEGUN           reduce using rule 13 (sentencia -> multiple_si .)
    DEFINIR         reduce using rule 13 (sentencia -> multiple_si .)
    SI              reduce using rule 13 (sentencia -> multiple_si .)
    ID              reduce using rule 13 (sentencia -> multiple_si .)
    MIENTRAS        reduce using rule 13 (sentencia -> multiple_si .)
    FIN_ALGORITMO   reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SI          reduce using rule 13 (sentencia -> multiple_si .)
    SI_NO           reduce using rule 13 (sentencia -> multiple_si .)
    FIN_MIENTRAS    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SEGUN       reduce using rule 13 (sentencia -> multiple_si .)
    NUMERO          reduce using rule 13 (sentencia -> multiple_si .)
    CADENA          reduce using rule 13 (sentencia -> multiple_si .)
    DE_OTRO_MODO    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_PARA        reduce using rule 13 (sentencia -> multiple_si .)


state 20

    (14) sentencia -> llamar_funciones .

    ESCRIBIR        reduce using rule 14 (sentencia -> llamar_funciones .)
    LEER            reduce using rule 14 (sentencia -> llamar_funciones .)
    PARA            reduce using rule 14 (sentencia -> llamar_funciones .)
    SEGUN           reduce using rule 14 (sentencia -> llamar_funciones .)
    DEFINIR         reduce using rule 14 (sentencia -> llamar_funciones .)
    SI              reduce using rule 14 (sentencia -> llamar_funciones .)
    ID              reduce using rule 14 (sentencia -> llamar_funciones .)
    MIENTRAS        reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SI          reduce using rule 14 (sentencia -> llamar_funciones .)
    SI_NO           reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SEGUN       reduce using rule 14 (sentencia -> llamar_funciones .)
    NUMERO          reduce using rule 14 (sentencia -> llamar_funciones .)
    CADENA          reduce using rule 14 (sentencia -> llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_PARA        reduce using rule 14 (sentencia -> llamar_funciones .)


state 21

    (15) posible_declaracion_variable -> declaracion_variable .

    ESCRIBIR        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    LEER            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    PARA            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SEGUN           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DEFINIR         reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    ID              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    MIENTRAS        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SI          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI_NO           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SEGUN       reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    NUMERO          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    CADENA          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_PARA        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)


state 22

    (16) posible_declaracion_variable -> multiple_declaracion_variable .

    ESCRIBIR        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    LEER            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    PARA            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SEGUN           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DEFINIR         reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    ID              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    MIENTRAS        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SI          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI_NO           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SEGUN       reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    NUMERO          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    CADENA          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_PARA        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)


state 23

    (21) estructura_escribir -> ESCRIBIR . lista_escribir
    (22) lista_escribir -> . lista_escribir COMA elemento_escribir
    (23) lista_escribir -> . elemento_escribir
    (24) elemento_escribir -> . CADENA
    (25) elemento_escribir -> . ID
    (26) elemento_escribir -> . NUMERO

    CADENA          shift and go to state 48
    ID              shift and go to state 49
    NUMERO          shift and go to state 50

    lista_escribir                 shift and go to state 46
    elemento_escribir              shift and go to state 47

state 24

    (27) leer -> LEER . ID

    ID              shift and go to state 51


state 25

    (109) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (110) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> ID . ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> ID . ASIGNAR operaciones_matematicas

    PAR_IZQ         shift and go to state 52
    ASIGNAR         shift and go to state 53


state 26

    (37) asignaciones -> asignacion . asignaciones
    (38) asignaciones -> asignacion .
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas

  ! shift/reduce conflict for ID resolved as shift
    ESCRIBIR        reduce using rule 38 (asignaciones -> asignacion .)
    LEER            reduce using rule 38 (asignaciones -> asignacion .)
    PARA            reduce using rule 38 (asignaciones -> asignacion .)
    SEGUN           reduce using rule 38 (asignaciones -> asignacion .)
    DEFINIR         reduce using rule 38 (asignaciones -> asignacion .)
    SI              reduce using rule 38 (asignaciones -> asignacion .)
    MIENTRAS        reduce using rule 38 (asignaciones -> asignacion .)
    FIN_ALGORITMO   reduce using rule 38 (asignaciones -> asignacion .)
    FIN_SI          reduce using rule 38 (asignaciones -> asignacion .)
    SI_NO           reduce using rule 38 (asignaciones -> asignacion .)
    FIN_MIENTRAS    reduce using rule 38 (asignaciones -> asignacion .)
    FIN_SEGUN       reduce using rule 38 (asignaciones -> asignacion .)
    NUMERO          reduce using rule 38 (asignaciones -> asignacion .)
    CADENA          reduce using rule 38 (asignaciones -> asignacion .)
    DE_OTRO_MODO    reduce using rule 38 (asignaciones -> asignacion .)
    FIN_PARA        reduce using rule 38 (asignaciones -> asignacion .)
    FIN_FUNCION     reduce using rule 38 (asignaciones -> asignacion .)
    RETORNAR        reduce using rule 38 (asignaciones -> asignacion .)
    ID              shift and go to state 55

  ! ID              [ reduce using rule 38 (asignaciones -> asignacion .) ]

    asignacion                     shift and go to state 26
    asignaciones                   shift and go to state 54
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35

state 27

    (28) para -> PARA . ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    ID              shift and go to state 56


state 28

    (29) mientras -> mientras_declaraciones . mientras
    (30) mientras -> mientras_declaraciones .
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

  ! shift/reduce conflict for MIENTRAS resolved as shift
    ESCRIBIR        reduce using rule 30 (mientras -> mientras_declaraciones .)
    LEER            reduce using rule 30 (mientras -> mientras_declaraciones .)
    PARA            reduce using rule 30 (mientras -> mientras_declaraciones .)
    SEGUN           reduce using rule 30 (mientras -> mientras_declaraciones .)
    DEFINIR         reduce using rule 30 (mientras -> mientras_declaraciones .)
    SI              reduce using rule 30 (mientras -> mientras_declaraciones .)
    ID              reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_ALGORITMO   reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_SI          reduce using rule 30 (mientras -> mientras_declaraciones .)
    SI_NO           reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_MIENTRAS    reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_SEGUN       reduce using rule 30 (mientras -> mientras_declaraciones .)
    NUMERO          reduce using rule 30 (mientras -> mientras_declaraciones .)
    CADENA          reduce using rule 30 (mientras -> mientras_declaraciones .)
    DE_OTRO_MODO    reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_PARA        reduce using rule 30 (mientras -> mientras_declaraciones .)
    FIN_FUNCION     reduce using rule 30 (mientras -> mientras_declaraciones .)
    RETORNAR        reduce using rule 30 (mientras -> mientras_declaraciones .)
    MIENTRAS        shift and go to state 40

  ! MIENTRAS        [ reduce using rule 30 (mientras -> mientras_declaraciones .) ]

    mientras_declaraciones         shift and go to state 28
    mientras                       shift and go to state 57
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 29

    (69) segun -> SEGUN . ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    ID              shift and go to state 58


state 30

    (74) multiple_si -> si . multiple_si
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI

    SI              shift and go to state 39

    si                             shift and go to state 30
    multiple_si                    shift and go to state 59
    si_no                          shift and go to state 31

state 31

    (75) multiple_si -> si_no .

    ESCRIBIR        reduce using rule 75 (multiple_si -> si_no .)
    LEER            reduce using rule 75 (multiple_si -> si_no .)
    PARA            reduce using rule 75 (multiple_si -> si_no .)
    SEGUN           reduce using rule 75 (multiple_si -> si_no .)
    DEFINIR         reduce using rule 75 (multiple_si -> si_no .)
    SI              reduce using rule 75 (multiple_si -> si_no .)
    ID              reduce using rule 75 (multiple_si -> si_no .)
    MIENTRAS        reduce using rule 75 (multiple_si -> si_no .)
    FIN_ALGORITMO   reduce using rule 75 (multiple_si -> si_no .)
    FIN_SI          reduce using rule 75 (multiple_si -> si_no .)
    SI_NO           reduce using rule 75 (multiple_si -> si_no .)
    FIN_MIENTRAS    reduce using rule 75 (multiple_si -> si_no .)
    FIN_SEGUN       reduce using rule 75 (multiple_si -> si_no .)
    NUMERO          reduce using rule 75 (multiple_si -> si_no .)
    CADENA          reduce using rule 75 (multiple_si -> si_no .)
    DE_OTRO_MODO    reduce using rule 75 (multiple_si -> si_no .)
    FIN_PARA        reduce using rule 75 (multiple_si -> si_no .)
    FIN_FUNCION     reduce using rule 75 (multiple_si -> si_no .)
    RETORNAR        reduce using rule 75 (multiple_si -> si_no .)


state 32

    (107) llamar_funciones -> llamar_funcion . llamar_funciones
    (108) llamar_funciones -> llamar_funcion .
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

  ! shift/reduce conflict for ID resolved as shift
    ESCRIBIR        reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    LEER            reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    PARA            reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    SEGUN           reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    DEFINIR         reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    SI              reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    MIENTRAS        reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_ALGORITMO   reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_SI          reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    SI_NO           reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_MIENTRAS    reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_SEGUN       reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    NUMERO          reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    CADENA          reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    DE_OTRO_MODO    reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_PARA        reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    FIN_FUNCION     reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    RETORNAR        reduce using rule 108 (llamar_funciones -> llamar_funcion .)
    ID              shift and go to state 61

  ! ID              [ reduce using rule 108 (llamar_funciones -> llamar_funcion .) ]

    llamar_funcion                 shift and go to state 32
    llamar_funciones               shift and go to state 60

state 33

    (17) declaracion_variable -> DEFINIR . ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> DEFINIR . ids COMO TIPO_DATO
    (19) ids -> . ID
    (20) ids -> . ID COMA ids

    ID              shift and go to state 62

    ids                            shift and go to state 63

state 34

    (39) asignacion -> asignacion_v1 .

    ID              reduce using rule 39 (asignacion -> asignacion_v1 .)
    ESCRIBIR        reduce using rule 39 (asignacion -> asignacion_v1 .)
    LEER            reduce using rule 39 (asignacion -> asignacion_v1 .)
    PARA            reduce using rule 39 (asignacion -> asignacion_v1 .)
    SEGUN           reduce using rule 39 (asignacion -> asignacion_v1 .)
    DEFINIR         reduce using rule 39 (asignacion -> asignacion_v1 .)
    SI              reduce using rule 39 (asignacion -> asignacion_v1 .)
    MIENTRAS        reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_ALGORITMO   reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_SI          reduce using rule 39 (asignacion -> asignacion_v1 .)
    SI_NO           reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_MIENTRAS    reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_SEGUN       reduce using rule 39 (asignacion -> asignacion_v1 .)
    NUMERO          reduce using rule 39 (asignacion -> asignacion_v1 .)
    CADENA          reduce using rule 39 (asignacion -> asignacion_v1 .)
    DE_OTRO_MODO    reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_PARA        reduce using rule 39 (asignacion -> asignacion_v1 .)
    FIN_FUNCION     reduce using rule 39 (asignacion -> asignacion_v1 .)
    RETORNAR        reduce using rule 39 (asignacion -> asignacion_v1 .)


state 35

    (40) asignacion -> asignacion_con_operacion .

    ID              reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    ESCRIBIR        reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    LEER            reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    PARA            reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    SEGUN           reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    DEFINIR         reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    SI              reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    MIENTRAS        reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_ALGORITMO   reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_SI          reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    SI_NO           reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_MIENTRAS    reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_SEGUN       reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    NUMERO          reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    CADENA          reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    DE_OTRO_MODO    reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_PARA        reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    FIN_FUNCION     reduce using rule 40 (asignacion -> asignacion_con_operacion .)
    RETORNAR        reduce using rule 40 (asignacion -> asignacion_con_operacion .)


state 36

    (31) mientras_declaraciones -> mientras_v1 .

    MIENTRAS        reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    ESCRIBIR        reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    LEER            reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    PARA            reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    SEGUN           reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    DEFINIR         reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    SI              reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    ID              reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_ALGORITMO   reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_SI          reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    SI_NO           reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_MIENTRAS    reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_SEGUN       reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    NUMERO          reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    CADENA          reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    DE_OTRO_MODO    reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_PARA        reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    FIN_FUNCION     reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)
    RETORNAR        reduce using rule 31 (mientras_declaraciones -> mientras_v1 .)


state 37

    (32) mientras_declaraciones -> mientras_v2 .

    MIENTRAS        reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    ESCRIBIR        reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    LEER            reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    PARA            reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    SEGUN           reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    DEFINIR         reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    SI              reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    ID              reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_ALGORITMO   reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_SI          reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    SI_NO           reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_MIENTRAS    reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_SEGUN       reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    NUMERO          reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    CADENA          reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    DE_OTRO_MODO    reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_PARA        reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    FIN_FUNCION     reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)
    RETORNAR        reduce using rule 32 (mientras_declaraciones -> mientras_v2 .)


state 38

    (33) mientras_declaraciones -> mientras_v3 .

    MIENTRAS        reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    ESCRIBIR        reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    LEER            reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    PARA            reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    SEGUN           reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    DEFINIR         reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    SI              reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    ID              reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_ALGORITMO   reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_SI          reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    SI_NO           reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_MIENTRAS    reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_SEGUN       reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    NUMERO          reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    CADENA          reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    DE_OTRO_MODO    reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_PARA        reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    FIN_FUNCION     reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)
    RETORNAR        reduce using rule 33 (mientras_declaraciones -> mientras_v3 .)


state 39

    (76) si -> SI . expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> SI . expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (43) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (44) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    expresion_logica               shift and go to state 64
    tipo_dato_identificador        shift and go to state 65

state 40

    (34) mientras_v1 -> MIENTRAS . expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> MIENTRAS . expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> MIENTRAS . LOGICO HACER sentencias FIN_MIENTRAS
    (43) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (44) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    LOGICO          shift and go to state 72
    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69

    expresion_logica               shift and go to state 71
    tipo_dato_identificador        shift and go to state 65

state 41

    (2) programa -> funciones ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    cuerpo                         shift and go to state 73
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 42

    (94) funciones -> funcion funciones .

    ALGORITMO       reduce using rule 94 (funciones -> funcion funciones .)


state 43

    (102) funcion_sin_retorno -> FUNCION ID . PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (103) funcion_con_retorno -> FUNCION ID . PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (104) funcion_con_parametros_con_retorno -> FUNCION ID . PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 74
    PAR_IZQ         shift and go to state 75


state 44

    (1) programa -> ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 1 (programa -> ALGORITMO cuerpo FIN_ALGORITMO .)


state 45

    (4) sentencias -> sentencia sentencias .

    FIN_ALGORITMO   reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SI          reduce using rule 4 (sentencias -> sentencia sentencias .)
    SI_NO           reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_MIENTRAS    reduce using rule 4 (sentencias -> sentencia sentencias .)
    MIENTRAS        reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SEGUN       reduce using rule 4 (sentencias -> sentencia sentencias .)
    NUMERO          reduce using rule 4 (sentencias -> sentencia sentencias .)
    CADENA          reduce using rule 4 (sentencias -> sentencia sentencias .)
    DE_OTRO_MODO    reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_PARA        reduce using rule 4 (sentencias -> sentencia sentencias .)


state 46

    (21) estructura_escribir -> ESCRIBIR lista_escribir .
    (22) lista_escribir -> lista_escribir . COMA elemento_escribir

    ESCRIBIR        reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    LEER            reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    PARA            reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    SEGUN           reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    DEFINIR         reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    SI              reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    ID              reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    MIENTRAS        reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_ALGORITMO   reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_SI          reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    SI_NO           reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_MIENTRAS    reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_SEGUN       reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    NUMERO          reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    CADENA          reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    DE_OTRO_MODO    reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_PARA        reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    FIN_FUNCION     reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    RETORNAR        reduce using rule 21 (estructura_escribir -> ESCRIBIR lista_escribir .)
    COMA            shift and go to state 76


state 47

    (23) lista_escribir -> elemento_escribir .

    COMA            reduce using rule 23 (lista_escribir -> elemento_escribir .)
    ESCRIBIR        reduce using rule 23 (lista_escribir -> elemento_escribir .)
    LEER            reduce using rule 23 (lista_escribir -> elemento_escribir .)
    PARA            reduce using rule 23 (lista_escribir -> elemento_escribir .)
    SEGUN           reduce using rule 23 (lista_escribir -> elemento_escribir .)
    DEFINIR         reduce using rule 23 (lista_escribir -> elemento_escribir .)
    SI              reduce using rule 23 (lista_escribir -> elemento_escribir .)
    ID              reduce using rule 23 (lista_escribir -> elemento_escribir .)
    MIENTRAS        reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_ALGORITMO   reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_SI          reduce using rule 23 (lista_escribir -> elemento_escribir .)
    SI_NO           reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_MIENTRAS    reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_SEGUN       reduce using rule 23 (lista_escribir -> elemento_escribir .)
    NUMERO          reduce using rule 23 (lista_escribir -> elemento_escribir .)
    CADENA          reduce using rule 23 (lista_escribir -> elemento_escribir .)
    DE_OTRO_MODO    reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_PARA        reduce using rule 23 (lista_escribir -> elemento_escribir .)
    FIN_FUNCION     reduce using rule 23 (lista_escribir -> elemento_escribir .)
    RETORNAR        reduce using rule 23 (lista_escribir -> elemento_escribir .)


state 48

    (24) elemento_escribir -> CADENA .

    COMA            reduce using rule 24 (elemento_escribir -> CADENA .)
    ESCRIBIR        reduce using rule 24 (elemento_escribir -> CADENA .)
    LEER            reduce using rule 24 (elemento_escribir -> CADENA .)
    PARA            reduce using rule 24 (elemento_escribir -> CADENA .)
    SEGUN           reduce using rule 24 (elemento_escribir -> CADENA .)
    DEFINIR         reduce using rule 24 (elemento_escribir -> CADENA .)
    SI              reduce using rule 24 (elemento_escribir -> CADENA .)
    ID              reduce using rule 24 (elemento_escribir -> CADENA .)
    MIENTRAS        reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_ALGORITMO   reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_SI          reduce using rule 24 (elemento_escribir -> CADENA .)
    SI_NO           reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_MIENTRAS    reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_SEGUN       reduce using rule 24 (elemento_escribir -> CADENA .)
    NUMERO          reduce using rule 24 (elemento_escribir -> CADENA .)
    CADENA          reduce using rule 24 (elemento_escribir -> CADENA .)
    DE_OTRO_MODO    reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_PARA        reduce using rule 24 (elemento_escribir -> CADENA .)
    FIN_FUNCION     reduce using rule 24 (elemento_escribir -> CADENA .)
    RETORNAR        reduce using rule 24 (elemento_escribir -> CADENA .)


state 49

    (25) elemento_escribir -> ID .

    COMA            reduce using rule 25 (elemento_escribir -> ID .)
    ESCRIBIR        reduce using rule 25 (elemento_escribir -> ID .)
    LEER            reduce using rule 25 (elemento_escribir -> ID .)
    PARA            reduce using rule 25 (elemento_escribir -> ID .)
    SEGUN           reduce using rule 25 (elemento_escribir -> ID .)
    DEFINIR         reduce using rule 25 (elemento_escribir -> ID .)
    SI              reduce using rule 25 (elemento_escribir -> ID .)
    ID              reduce using rule 25 (elemento_escribir -> ID .)
    MIENTRAS        reduce using rule 25 (elemento_escribir -> ID .)
    FIN_ALGORITMO   reduce using rule 25 (elemento_escribir -> ID .)
    FIN_SI          reduce using rule 25 (elemento_escribir -> ID .)
    SI_NO           reduce using rule 25 (elemento_escribir -> ID .)
    FIN_MIENTRAS    reduce using rule 25 (elemento_escribir -> ID .)
    FIN_SEGUN       reduce using rule 25 (elemento_escribir -> ID .)
    NUMERO          reduce using rule 25 (elemento_escribir -> ID .)
    CADENA          reduce using rule 25 (elemento_escribir -> ID .)
    DE_OTRO_MODO    reduce using rule 25 (elemento_escribir -> ID .)
    FIN_PARA        reduce using rule 25 (elemento_escribir -> ID .)
    FIN_FUNCION     reduce using rule 25 (elemento_escribir -> ID .)
    RETORNAR        reduce using rule 25 (elemento_escribir -> ID .)


state 50

    (26) elemento_escribir -> NUMERO .

    COMA            reduce using rule 26 (elemento_escribir -> NUMERO .)
    ESCRIBIR        reduce using rule 26 (elemento_escribir -> NUMERO .)
    LEER            reduce using rule 26 (elemento_escribir -> NUMERO .)
    PARA            reduce using rule 26 (elemento_escribir -> NUMERO .)
    SEGUN           reduce using rule 26 (elemento_escribir -> NUMERO .)
    DEFINIR         reduce using rule 26 (elemento_escribir -> NUMERO .)
    SI              reduce using rule 26 (elemento_escribir -> NUMERO .)
    ID              reduce using rule 26 (elemento_escribir -> NUMERO .)
    MIENTRAS        reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_ALGORITMO   reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_SI          reduce using rule 26 (elemento_escribir -> NUMERO .)
    SI_NO           reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_MIENTRAS    reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_SEGUN       reduce using rule 26 (elemento_escribir -> NUMERO .)
    NUMERO          reduce using rule 26 (elemento_escribir -> NUMERO .)
    CADENA          reduce using rule 26 (elemento_escribir -> NUMERO .)
    DE_OTRO_MODO    reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_PARA        reduce using rule 26 (elemento_escribir -> NUMERO .)
    FIN_FUNCION     reduce using rule 26 (elemento_escribir -> NUMERO .)
    RETORNAR        reduce using rule 26 (elemento_escribir -> NUMERO .)


state 51

    (27) leer -> LEER ID .

    ESCRIBIR        reduce using rule 27 (leer -> LEER ID .)
    LEER            reduce using rule 27 (leer -> LEER ID .)
    PARA            reduce using rule 27 (leer -> LEER ID .)
    SEGUN           reduce using rule 27 (leer -> LEER ID .)
    DEFINIR         reduce using rule 27 (leer -> LEER ID .)
    SI              reduce using rule 27 (leer -> LEER ID .)
    ID              reduce using rule 27 (leer -> LEER ID .)
    MIENTRAS        reduce using rule 27 (leer -> LEER ID .)
    FIN_ALGORITMO   reduce using rule 27 (leer -> LEER ID .)
    FIN_SI          reduce using rule 27 (leer -> LEER ID .)
    SI_NO           reduce using rule 27 (leer -> LEER ID .)
    FIN_MIENTRAS    reduce using rule 27 (leer -> LEER ID .)
    FIN_SEGUN       reduce using rule 27 (leer -> LEER ID .)
    NUMERO          reduce using rule 27 (leer -> LEER ID .)
    CADENA          reduce using rule 27 (leer -> LEER ID .)
    DE_OTRO_MODO    reduce using rule 27 (leer -> LEER ID .)
    FIN_PARA        reduce using rule 27 (leer -> LEER ID .)
    FIN_FUNCION     reduce using rule 27 (leer -> LEER ID .)
    RETORNAR        reduce using rule 27 (leer -> LEER ID .)


state 52

    (109) llamar_funcion -> ID PAR_IZQ . PAR_DER
    (110) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    PAR_DER         shift and go to state 77
    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 78

state 53

    (41) asignacion_v1 -> ID ASIGNAR . tipo_dato_identificador
    (42) asignacion_con_operacion -> ID ASIGNAR . operaciones_matematicas
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO
    (59) operaciones_matematicas -> . operacion_matematica_v1
    (60) operaciones_matematicas -> . operacion_matematica_v2
    (61) operacion_matematica_v1 -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (62) operacion_matematica_v2 -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 79
    operaciones_matematicas        shift and go to state 80
    operacion_matematica_v1        shift and go to state 81
    operacion_matematica_v2        shift and go to state 82

state 54

    (37) asignaciones -> asignacion asignaciones .

    ESCRIBIR        reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    LEER            reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    PARA            reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    SEGUN           reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    DEFINIR         reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    SI              reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    ID              reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    MIENTRAS        reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_ALGORITMO   reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_SI          reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    SI_NO           reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_MIENTRAS    reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_SEGUN       reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    NUMERO          reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    CADENA          reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    DE_OTRO_MODO    reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_PARA        reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    FIN_FUNCION     reduce using rule 37 (asignaciones -> asignacion asignaciones .)
    RETORNAR        reduce using rule 37 (asignaciones -> asignacion asignaciones .)


state 55

    (41) asignacion_v1 -> ID . ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> ID . ASIGNAR operaciones_matematicas

    ASIGNAR         shift and go to state 53


state 56

    (28) para -> PARA ID . DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    DESDE           shift and go to state 83


state 57

    (29) mientras -> mientras_declaraciones mientras .

    ESCRIBIR        reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    LEER            reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    PARA            reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    SEGUN           reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    DEFINIR         reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    SI              reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    ID              reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    MIENTRAS        reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_ALGORITMO   reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_SI          reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    SI_NO           reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_MIENTRAS    reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_SEGUN       reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    NUMERO          reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    CADENA          reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    DE_OTRO_MODO    reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_PARA        reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    FIN_FUNCION     reduce using rule 29 (mientras -> mientras_declaraciones mientras .)
    RETORNAR        reduce using rule 29 (mientras -> mientras_declaraciones mientras .)


state 58

    (69) segun -> SEGUN ID . HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    HACER           shift and go to state 84


state 59

    (74) multiple_si -> si multiple_si .

    ESCRIBIR        reduce using rule 74 (multiple_si -> si multiple_si .)
    LEER            reduce using rule 74 (multiple_si -> si multiple_si .)
    PARA            reduce using rule 74 (multiple_si -> si multiple_si .)
    SEGUN           reduce using rule 74 (multiple_si -> si multiple_si .)
    DEFINIR         reduce using rule 74 (multiple_si -> si multiple_si .)
    SI              reduce using rule 74 (multiple_si -> si multiple_si .)
    ID              reduce using rule 74 (multiple_si -> si multiple_si .)
    MIENTRAS        reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_ALGORITMO   reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_SI          reduce using rule 74 (multiple_si -> si multiple_si .)
    SI_NO           reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_MIENTRAS    reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_SEGUN       reduce using rule 74 (multiple_si -> si multiple_si .)
    NUMERO          reduce using rule 74 (multiple_si -> si multiple_si .)
    CADENA          reduce using rule 74 (multiple_si -> si multiple_si .)
    DE_OTRO_MODO    reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_PARA        reduce using rule 74 (multiple_si -> si multiple_si .)
    FIN_FUNCION     reduce using rule 74 (multiple_si -> si multiple_si .)
    RETORNAR        reduce using rule 74 (multiple_si -> si multiple_si .)


state 60

    (107) llamar_funciones -> llamar_funcion llamar_funciones .

    ESCRIBIR        reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    LEER            reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    PARA            reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SEGUN           reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DEFINIR         reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI              reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    ID              reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    MIENTRAS        reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SI          reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI_NO           reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SEGUN       reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    NUMERO          reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    CADENA          reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_PARA        reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_FUNCION     reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)
    RETORNAR        reduce using rule 107 (llamar_funciones -> llamar_funcion llamar_funciones .)


state 61

    (109) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (110) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_IZQ         shift and go to state 52


state 62

    (17) declaracion_variable -> DEFINIR ID . COMO TIPO_DATO
    (19) ids -> ID .
    (20) ids -> ID . COMA ids

  ! shift/reduce conflict for COMO resolved as shift
    COMO            shift and go to state 85
    COMA            shift and go to state 86

  ! COMO            [ reduce using rule 19 (ids -> ID .) ]


state 63

    (18) multiple_declaracion_variable -> DEFINIR ids . COMO TIPO_DATO

    COMO            shift and go to state 87


state 64

    (76) si -> SI expresion_logica . ENTONCES sentencias FIN_SI
    (77) si_no -> SI expresion_logica . ENTONCES sentencias SI_NO sentencias FIN_SI
    (44) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

    ENTONCES        shift and go to state 88
    Y               shift and go to state 90
    O               shift and go to state 91
    NO              shift and go to state 92

    operador_logico                shift and go to state 89

state 65

    (43) expresion_logica -> tipo_dato_identificador . operador_relacional tipo_dato_identificador
    (53) operador_relacional -> . ES_MAYOR_QUE
    (54) operador_relacional -> . ES_MENOR_QUE
    (55) operador_relacional -> . ES_IGUAL_QUE
    (56) operador_relacional -> . ES_MAYOR_O_IGUAL_QUE
    (57) operador_relacional -> . ES_MENOR_O_IGUAL_QUE
    (58) operador_relacional -> . ES_DISTINTO_QUE

    ES_MAYOR_QUE    shift and go to state 94
    ES_MENOR_QUE    shift and go to state 95
    ES_IGUAL_QUE    shift and go to state 96
    ES_MAYOR_O_IGUAL_QUE shift and go to state 97
    ES_MENOR_O_IGUAL_QUE shift and go to state 98
    ES_DISTINTO_QUE shift and go to state 99

    operador_relacional            shift and go to state 93

state 66

    (45) tipo_dato_identificador -> ID .

    ES_MAYOR_QUE    reduce using rule 45 (tipo_dato_identificador -> ID .)
    ES_MENOR_QUE    reduce using rule 45 (tipo_dato_identificador -> ID .)
    ES_IGUAL_QUE    reduce using rule 45 (tipo_dato_identificador -> ID .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 45 (tipo_dato_identificador -> ID .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 45 (tipo_dato_identificador -> ID .)
    ES_DISTINTO_QUE reduce using rule 45 (tipo_dato_identificador -> ID .)
    PAR_DER         reduce using rule 45 (tipo_dato_identificador -> ID .)
    COMA            reduce using rule 45 (tipo_dato_identificador -> ID .)
    MAS             reduce using rule 45 (tipo_dato_identificador -> ID .)
    MENOS           reduce using rule 45 (tipo_dato_identificador -> ID .)
    POR             reduce using rule 45 (tipo_dato_identificador -> ID .)
    DIVIDIDO        reduce using rule 45 (tipo_dato_identificador -> ID .)
    ELEVADO_A       reduce using rule 45 (tipo_dato_identificador -> ID .)
    RESIDUO         reduce using rule 45 (tipo_dato_identificador -> ID .)
    ID              reduce using rule 45 (tipo_dato_identificador -> ID .)
    ESCRIBIR        reduce using rule 45 (tipo_dato_identificador -> ID .)
    LEER            reduce using rule 45 (tipo_dato_identificador -> ID .)
    PARA            reduce using rule 45 (tipo_dato_identificador -> ID .)
    SEGUN           reduce using rule 45 (tipo_dato_identificador -> ID .)
    DEFINIR         reduce using rule 45 (tipo_dato_identificador -> ID .)
    SI              reduce using rule 45 (tipo_dato_identificador -> ID .)
    MIENTRAS        reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_ALGORITMO   reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_SI          reduce using rule 45 (tipo_dato_identificador -> ID .)
    SI_NO           reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_MIENTRAS    reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_SEGUN       reduce using rule 45 (tipo_dato_identificador -> ID .)
    NUMERO          reduce using rule 45 (tipo_dato_identificador -> ID .)
    CADENA          reduce using rule 45 (tipo_dato_identificador -> ID .)
    DE_OTRO_MODO    reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_PARA        reduce using rule 45 (tipo_dato_identificador -> ID .)
    FIN_FUNCION     reduce using rule 45 (tipo_dato_identificador -> ID .)
    RETORNAR        reduce using rule 45 (tipo_dato_identificador -> ID .)
    ENTONCES        reduce using rule 45 (tipo_dato_identificador -> ID .)
    Y               reduce using rule 45 (tipo_dato_identificador -> ID .)
    O               reduce using rule 45 (tipo_dato_identificador -> ID .)
    NO              reduce using rule 45 (tipo_dato_identificador -> ID .)
    HACER           reduce using rule 45 (tipo_dato_identificador -> ID .)


state 67

    (46) tipo_dato_identificador -> NUMERO .

    ES_MAYOR_QUE    reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_QUE    reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ES_IGUAL_QUE    reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ES_DISTINTO_QUE reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    PAR_DER         reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    COMA            reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    MAS             reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    MENOS           reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    POR             reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    DIVIDIDO        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ELEVADO_A       reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    RESIDUO         reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ID              reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ESCRIBIR        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    LEER            reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    PARA            reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    SEGUN           reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    DEFINIR         reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    SI              reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    MIENTRAS        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_ALGORITMO   reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_SI          reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    SI_NO           reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_MIENTRAS    reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_SEGUN       reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    NUMERO          reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    CADENA          reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    DE_OTRO_MODO    reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_PARA        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    FIN_FUNCION     reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    RETORNAR        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    ENTONCES        reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    Y               reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    O               reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    NO              reduce using rule 46 (tipo_dato_identificador -> NUMERO .)
    HACER           reduce using rule 46 (tipo_dato_identificador -> NUMERO .)


state 68

    (47) tipo_dato_identificador -> CADENA .

    ES_MAYOR_QUE    reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_QUE    reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ES_IGUAL_QUE    reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ES_DISTINTO_QUE reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    PAR_DER         reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    COMA            reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    MAS             reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    MENOS           reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    POR             reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    DIVIDIDO        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ELEVADO_A       reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    RESIDUO         reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ID              reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ESCRIBIR        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    LEER            reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    PARA            reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    SEGUN           reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    DEFINIR         reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    SI              reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    MIENTRAS        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_ALGORITMO   reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_SI          reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    SI_NO           reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_MIENTRAS    reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_SEGUN       reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    NUMERO          reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    CADENA          reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    DE_OTRO_MODO    reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_PARA        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    FIN_FUNCION     reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    RETORNAR        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    ENTONCES        reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    Y               reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    O               reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    NO              reduce using rule 47 (tipo_dato_identificador -> CADENA .)
    HACER           reduce using rule 47 (tipo_dato_identificador -> CADENA .)


state 69

    (48) tipo_dato_identificador -> REAL .

    ES_MAYOR_QUE    reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ES_MENOR_QUE    reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ES_IGUAL_QUE    reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ES_DISTINTO_QUE reduce using rule 48 (tipo_dato_identificador -> REAL .)
    PAR_DER         reduce using rule 48 (tipo_dato_identificador -> REAL .)
    COMA            reduce using rule 48 (tipo_dato_identificador -> REAL .)
    MAS             reduce using rule 48 (tipo_dato_identificador -> REAL .)
    MENOS           reduce using rule 48 (tipo_dato_identificador -> REAL .)
    POR             reduce using rule 48 (tipo_dato_identificador -> REAL .)
    DIVIDIDO        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ELEVADO_A       reduce using rule 48 (tipo_dato_identificador -> REAL .)
    RESIDUO         reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ID              reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ESCRIBIR        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    LEER            reduce using rule 48 (tipo_dato_identificador -> REAL .)
    PARA            reduce using rule 48 (tipo_dato_identificador -> REAL .)
    SEGUN           reduce using rule 48 (tipo_dato_identificador -> REAL .)
    DEFINIR         reduce using rule 48 (tipo_dato_identificador -> REAL .)
    SI              reduce using rule 48 (tipo_dato_identificador -> REAL .)
    MIENTRAS        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_ALGORITMO   reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_SI          reduce using rule 48 (tipo_dato_identificador -> REAL .)
    SI_NO           reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_MIENTRAS    reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_SEGUN       reduce using rule 48 (tipo_dato_identificador -> REAL .)
    NUMERO          reduce using rule 48 (tipo_dato_identificador -> REAL .)
    CADENA          reduce using rule 48 (tipo_dato_identificador -> REAL .)
    DE_OTRO_MODO    reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_PARA        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    FIN_FUNCION     reduce using rule 48 (tipo_dato_identificador -> REAL .)
    RETORNAR        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    ENTONCES        reduce using rule 48 (tipo_dato_identificador -> REAL .)
    Y               reduce using rule 48 (tipo_dato_identificador -> REAL .)
    O               reduce using rule 48 (tipo_dato_identificador -> REAL .)
    NO              reduce using rule 48 (tipo_dato_identificador -> REAL .)
    HACER           reduce using rule 48 (tipo_dato_identificador -> REAL .)


state 70

    (49) tipo_dato_identificador -> LOGICO .

    ES_MAYOR_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MENOR_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_IGUAL_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_DISTINTO_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    PAR_DER         reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    COMA            reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    MAS             reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    MENOS           reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    POR             reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    DIVIDIDO        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ELEVADO_A       reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    RESIDUO         reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ID              reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ESCRIBIR        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    LEER            reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    PARA            reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    SEGUN           reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    DEFINIR         reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    SI              reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    MIENTRAS        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_ALGORITMO   reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_SI          reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    SI_NO           reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_MIENTRAS    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_SEGUN       reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    NUMERO          reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    CADENA          reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    DE_OTRO_MODO    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_PARA        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    FIN_FUNCION     reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    RETORNAR        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ENTONCES        reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    Y               reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    O               reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    NO              reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    HACER           reduce using rule 49 (tipo_dato_identificador -> LOGICO .)


state 71

    (34) mientras_v1 -> MIENTRAS expresion_logica . HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> MIENTRAS expresion_logica . HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (44) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

    HACER           shift and go to state 100
    Y               shift and go to state 90
    O               shift and go to state 91
    NO              shift and go to state 92

    operador_logico                shift and go to state 89

state 72

    (36) mientras_v3 -> MIENTRAS LOGICO . HACER sentencias FIN_MIENTRAS
    (49) tipo_dato_identificador -> LOGICO .

    HACER           shift and go to state 101
    ES_MAYOR_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MENOR_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_IGUAL_QUE    reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)
    ES_DISTINTO_QUE reduce using rule 49 (tipo_dato_identificador -> LOGICO .)


state 73

    (2) programa -> funciones ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 102


state 74

    (102) funcion_sin_retorno -> FUNCION ID PUN_Y_COM . cuerpo_funcion FIN_FUNCION
    (103) funcion_con_retorno -> FUNCION ID PUN_Y_COM . cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (78) cuerpo_funcion -> . sentencias_funcion
    (79) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (80) sentencias_funcion -> . sentencia_funcion
    (81) sentencia_funcion -> . posible_declaracion_variable_funcion
    (82) sentencia_funcion -> . estructura_escribir
    (83) sentencia_funcion -> . leer
    (84) sentencia_funcion -> . asignaciones
    (85) sentencia_funcion -> . para
    (86) sentencia_funcion -> . mientras
    (87) sentencia_funcion -> . segun
    (88) sentencia_funcion -> . multiple_si
    (89) sentencia_funcion -> . llamar_funciones
    (90) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (91) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (92) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (93) multiple_declaracion_variable_funcion -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 117
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    cuerpo_funcion                 shift and go to state 103
    sentencias_funcion             shift and go to state 104
    sentencia_funcion              shift and go to state 105
    posible_declaracion_variable_funcion shift and go to state 106
    estructura_escribir            shift and go to state 107
    leer                           shift and go to state 108
    asignaciones                   shift and go to state 109
    para                           shift and go to state 110
    mientras                       shift and go to state 111
    segun                          shift and go to state 112
    multiple_si                    shift and go to state 113
    llamar_funciones               shift and go to state 114
    declaracion_variable_funcion   shift and go to state 115
    multiple_declaracion_variable_funcion shift and go to state 116
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 75

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ . parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (105) parametros -> . ID
    (106) parametros -> . ID COMA parametros

    ID              shift and go to state 118

    parametros                     shift and go to state 119

state 76

    (22) lista_escribir -> lista_escribir COMA . elemento_escribir
    (24) elemento_escribir -> . CADENA
    (25) elemento_escribir -> . ID
    (26) elemento_escribir -> . NUMERO

    CADENA          shift and go to state 48
    ID              shift and go to state 49
    NUMERO          shift and go to state 50

    elemento_escribir              shift and go to state 120

state 77

    (109) llamar_funcion -> ID PAR_IZQ PAR_DER .

    ID              reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    ESCRIBIR        reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    LEER            reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    PARA            reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SEGUN           reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DEFINIR         reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI              reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    MIENTRAS        reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_ALGORITMO   reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SI          reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI_NO           reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_MIENTRAS    reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SEGUN       reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    NUMERO          reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    CADENA          reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DE_OTRO_MODO    reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_PARA        reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_FUNCION     reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    RETORNAR        reduce using rule 109 (llamar_funcion -> ID PAR_IZQ PAR_DER .)


state 78

    (110) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . PAR_DER
    (111) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 121
    COMA            shift and go to state 122


state 79

    (41) asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .
    (61) operacion_matematica_v1 -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (62) operacion_matematica_v2 -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (63) operador_aritmetico -> . MAS
    (64) operador_aritmetico -> . MENOS
    (65) operador_aritmetico -> . POR
    (66) operador_aritmetico -> . DIVIDIDO
    (67) operador_aritmetico -> . ELEVADO_A
    (68) operador_aritmetico -> . RESIDUO

    ID              reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    LEER            reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    PARA            reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    SEGUN           reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    DEFINIR         reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    SI              reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    MIENTRAS        reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SI          reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    SI_NO           reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    NUMERO          reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    CADENA          reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_PARA        reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    RETORNAR        reduce using rule 41 (asignacion_v1 -> ID ASIGNAR tipo_dato_identificador .)
    MAS             shift and go to state 124
    MENOS           shift and go to state 125
    POR             shift and go to state 126
    DIVIDIDO        shift and go to state 127
    ELEVADO_A       shift and go to state 128
    RESIDUO         shift and go to state 129

    operador_aritmetico            shift and go to state 123

state 80

    (42) asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .

    ID              reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    ESCRIBIR        reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    LEER            reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    PARA            reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SEGUN           reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DEFINIR         reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI              reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    MIENTRAS        reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_ALGORITMO   reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SI          reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI_NO           reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_MIENTRAS    reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SEGUN       reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    NUMERO          reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    CADENA          reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DE_OTRO_MODO    reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_PARA        reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_FUNCION     reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    RETORNAR        reduce using rule 42 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)


state 81

    (59) operaciones_matematicas -> operacion_matematica_v1 .

    ID              reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    ESCRIBIR        reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    LEER            reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    PARA            reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    SEGUN           reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    DEFINIR         reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    SI              reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    MIENTRAS        reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_ALGORITMO   reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_SI          reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    SI_NO           reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_MIENTRAS    reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_SEGUN       reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    NUMERO          reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    CADENA          reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    DE_OTRO_MODO    reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_PARA        reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    FIN_FUNCION     reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)
    RETORNAR        reduce using rule 59 (operaciones_matematicas -> operacion_matematica_v1 .)


state 82

    (60) operaciones_matematicas -> operacion_matematica_v2 .

    ID              reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    ESCRIBIR        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    LEER            reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    PARA            reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    SEGUN           reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    DEFINIR         reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    SI              reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    MIENTRAS        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_ALGORITMO   reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_SI          reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    SI_NO           reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_MIENTRAS    reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_SEGUN       reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    NUMERO          reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    CADENA          reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    DE_OTRO_MODO    reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_PARA        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    FIN_FUNCION     reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)
    RETORNAR        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_v2 .)


state 83

    (28) para -> PARA ID DESDE . NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 130


state 84

    (69) segun -> SEGUN ID HACER . casos DE_OTRO_MODO sentencias FIN_SEGUN
    (70) casos -> . caso casos
    (71) casos -> . caso
    (72) caso -> . NUMERO DOS_PUN sentencias
    (73) caso -> . CADENA DOS_PUN sentencias

    NUMERO          shift and go to state 133
    CADENA          shift and go to state 134

    casos                          shift and go to state 131
    caso                           shift and go to state 132

state 85

    (17) declaracion_variable -> DEFINIR ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 135


state 86

    (20) ids -> ID COMA . ids
    (19) ids -> . ID
    (20) ids -> . ID COMA ids

    ID              shift and go to state 136

    ids                            shift and go to state 137

state 87

    (18) multiple_declaracion_variable -> DEFINIR ids COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 138


state 88

    (76) si -> SI expresion_logica ENTONCES . sentencias FIN_SI
    (77) si_no -> SI expresion_logica ENTONCES . sentencias SI_NO sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 139
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 89

    (44) expresion_logica -> expresion_logica operador_logico . expresion_logica
    (43) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (44) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    expresion_logica               shift and go to state 140
    tipo_dato_identificador        shift and go to state 65

state 90

    (50) operador_logico -> Y .

    ID              reduce using rule 50 (operador_logico -> Y .)
    NUMERO          reduce using rule 50 (operador_logico -> Y .)
    CADENA          reduce using rule 50 (operador_logico -> Y .)
    REAL            reduce using rule 50 (operador_logico -> Y .)
    LOGICO          reduce using rule 50 (operador_logico -> Y .)


state 91

    (51) operador_logico -> O .

    ID              reduce using rule 51 (operador_logico -> O .)
    NUMERO          reduce using rule 51 (operador_logico -> O .)
    CADENA          reduce using rule 51 (operador_logico -> O .)
    REAL            reduce using rule 51 (operador_logico -> O .)
    LOGICO          reduce using rule 51 (operador_logico -> O .)


state 92

    (52) operador_logico -> NO .

    ID              reduce using rule 52 (operador_logico -> NO .)
    NUMERO          reduce using rule 52 (operador_logico -> NO .)
    CADENA          reduce using rule 52 (operador_logico -> NO .)
    REAL            reduce using rule 52 (operador_logico -> NO .)
    LOGICO          reduce using rule 52 (operador_logico -> NO .)


state 93

    (43) expresion_logica -> tipo_dato_identificador operador_relacional . tipo_dato_identificador
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 141

state 94

    (53) operador_relacional -> ES_MAYOR_QUE .

    ID              reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    NUMERO          reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    CADENA          reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    REAL            reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    LOGICO          reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)


state 95

    (54) operador_relacional -> ES_MENOR_QUE .

    ID              reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    NUMERO          reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    CADENA          reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    REAL            reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    LOGICO          reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)


state 96

    (55) operador_relacional -> ES_IGUAL_QUE .

    ID              reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    NUMERO          reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    CADENA          reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    REAL            reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    LOGICO          reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)


state 97

    (56) operador_relacional -> ES_MAYOR_O_IGUAL_QUE .

    ID              reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    REAL            reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    LOGICO          reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)


state 98

    (57) operador_relacional -> ES_MENOR_O_IGUAL_QUE .

    ID              reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    REAL            reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    LOGICO          reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)


state 99

    (58) operador_relacional -> ES_DISTINTO_QUE .

    ID              reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    NUMERO          reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    CADENA          reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    REAL            reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    LOGICO          reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)


state 100

    (34) mientras_v1 -> MIENTRAS expresion_logica HACER . sentencias FIN_MIENTRAS
    (35) mientras_v2 -> MIENTRAS expresion_logica HACER . sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 142
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 101

    (36) mientras_v3 -> MIENTRAS LOGICO HACER . sentencias FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 143
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 102

    (2) programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 2 (programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .)


state 103

    (102) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion . FIN_FUNCION
    (103) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion . RETORNAR tipo_retorno_funcion FIN_FUNCION

    FIN_FUNCION     shift and go to state 144
    RETORNAR        shift and go to state 145


state 104

    (78) cuerpo_funcion -> sentencias_funcion .

    FIN_FUNCION     reduce using rule 78 (cuerpo_funcion -> sentencias_funcion .)
    RETORNAR        reduce using rule 78 (cuerpo_funcion -> sentencias_funcion .)


state 105

    (79) sentencias_funcion -> sentencia_funcion . sentencias_funcion
    (80) sentencias_funcion -> sentencia_funcion .
    (79) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (80) sentencias_funcion -> . sentencia_funcion
    (81) sentencia_funcion -> . posible_declaracion_variable_funcion
    (82) sentencia_funcion -> . estructura_escribir
    (83) sentencia_funcion -> . leer
    (84) sentencia_funcion -> . asignaciones
    (85) sentencia_funcion -> . para
    (86) sentencia_funcion -> . mientras
    (87) sentencia_funcion -> . segun
    (88) sentencia_funcion -> . multiple_si
    (89) sentencia_funcion -> . llamar_funciones
    (90) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (91) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (92) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (93) multiple_declaracion_variable_funcion -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    FIN_FUNCION     reduce using rule 80 (sentencias_funcion -> sentencia_funcion .)
    RETORNAR        reduce using rule 80 (sentencias_funcion -> sentencia_funcion .)
    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 117
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencia_funcion              shift and go to state 105
    sentencias_funcion             shift and go to state 146
    posible_declaracion_variable_funcion shift and go to state 106
    estructura_escribir            shift and go to state 107
    leer                           shift and go to state 108
    asignaciones                   shift and go to state 109
    para                           shift and go to state 110
    mientras                       shift and go to state 111
    segun                          shift and go to state 112
    multiple_si                    shift and go to state 113
    llamar_funciones               shift and go to state 114
    declaracion_variable_funcion   shift and go to state 115
    multiple_declaracion_variable_funcion shift and go to state 116
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 106

    (81) sentencia_funcion -> posible_declaracion_variable_funcion .

    ESCRIBIR        reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    LEER            reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    PARA            reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    SEGUN           reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    DEFINIR         reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    SI              reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    ID              reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    RETORNAR        reduce using rule 81 (sentencia_funcion -> posible_declaracion_variable_funcion .)


state 107

    (82) sentencia_funcion -> estructura_escribir .

    ESCRIBIR        reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    LEER            reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    PARA            reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    SEGUN           reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    DEFINIR         reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    SI              reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    ID              reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    MIENTRAS        reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    FIN_FUNCION     reduce using rule 82 (sentencia_funcion -> estructura_escribir .)
    RETORNAR        reduce using rule 82 (sentencia_funcion -> estructura_escribir .)


state 108

    (83) sentencia_funcion -> leer .

    ESCRIBIR        reduce using rule 83 (sentencia_funcion -> leer .)
    LEER            reduce using rule 83 (sentencia_funcion -> leer .)
    PARA            reduce using rule 83 (sentencia_funcion -> leer .)
    SEGUN           reduce using rule 83 (sentencia_funcion -> leer .)
    DEFINIR         reduce using rule 83 (sentencia_funcion -> leer .)
    SI              reduce using rule 83 (sentencia_funcion -> leer .)
    ID              reduce using rule 83 (sentencia_funcion -> leer .)
    MIENTRAS        reduce using rule 83 (sentencia_funcion -> leer .)
    FIN_FUNCION     reduce using rule 83 (sentencia_funcion -> leer .)
    RETORNAR        reduce using rule 83 (sentencia_funcion -> leer .)


state 109

    (84) sentencia_funcion -> asignaciones .

    ESCRIBIR        reduce using rule 84 (sentencia_funcion -> asignaciones .)
    LEER            reduce using rule 84 (sentencia_funcion -> asignaciones .)
    PARA            reduce using rule 84 (sentencia_funcion -> asignaciones .)
    SEGUN           reduce using rule 84 (sentencia_funcion -> asignaciones .)
    DEFINIR         reduce using rule 84 (sentencia_funcion -> asignaciones .)
    SI              reduce using rule 84 (sentencia_funcion -> asignaciones .)
    ID              reduce using rule 84 (sentencia_funcion -> asignaciones .)
    MIENTRAS        reduce using rule 84 (sentencia_funcion -> asignaciones .)
    FIN_FUNCION     reduce using rule 84 (sentencia_funcion -> asignaciones .)
    RETORNAR        reduce using rule 84 (sentencia_funcion -> asignaciones .)


state 110

    (85) sentencia_funcion -> para .

    ESCRIBIR        reduce using rule 85 (sentencia_funcion -> para .)
    LEER            reduce using rule 85 (sentencia_funcion -> para .)
    PARA            reduce using rule 85 (sentencia_funcion -> para .)
    SEGUN           reduce using rule 85 (sentencia_funcion -> para .)
    DEFINIR         reduce using rule 85 (sentencia_funcion -> para .)
    SI              reduce using rule 85 (sentencia_funcion -> para .)
    ID              reduce using rule 85 (sentencia_funcion -> para .)
    MIENTRAS        reduce using rule 85 (sentencia_funcion -> para .)
    FIN_FUNCION     reduce using rule 85 (sentencia_funcion -> para .)
    RETORNAR        reduce using rule 85 (sentencia_funcion -> para .)


state 111

    (86) sentencia_funcion -> mientras .

    ESCRIBIR        reduce using rule 86 (sentencia_funcion -> mientras .)
    LEER            reduce using rule 86 (sentencia_funcion -> mientras .)
    PARA            reduce using rule 86 (sentencia_funcion -> mientras .)
    SEGUN           reduce using rule 86 (sentencia_funcion -> mientras .)
    DEFINIR         reduce using rule 86 (sentencia_funcion -> mientras .)
    SI              reduce using rule 86 (sentencia_funcion -> mientras .)
    ID              reduce using rule 86 (sentencia_funcion -> mientras .)
    MIENTRAS        reduce using rule 86 (sentencia_funcion -> mientras .)
    FIN_FUNCION     reduce using rule 86 (sentencia_funcion -> mientras .)
    RETORNAR        reduce using rule 86 (sentencia_funcion -> mientras .)


state 112

    (87) sentencia_funcion -> segun .

    ESCRIBIR        reduce using rule 87 (sentencia_funcion -> segun .)
    LEER            reduce using rule 87 (sentencia_funcion -> segun .)
    PARA            reduce using rule 87 (sentencia_funcion -> segun .)
    SEGUN           reduce using rule 87 (sentencia_funcion -> segun .)
    DEFINIR         reduce using rule 87 (sentencia_funcion -> segun .)
    SI              reduce using rule 87 (sentencia_funcion -> segun .)
    ID              reduce using rule 87 (sentencia_funcion -> segun .)
    MIENTRAS        reduce using rule 87 (sentencia_funcion -> segun .)
    FIN_FUNCION     reduce using rule 87 (sentencia_funcion -> segun .)
    RETORNAR        reduce using rule 87 (sentencia_funcion -> segun .)


state 113

    (88) sentencia_funcion -> multiple_si .

    ESCRIBIR        reduce using rule 88 (sentencia_funcion -> multiple_si .)
    LEER            reduce using rule 88 (sentencia_funcion -> multiple_si .)
    PARA            reduce using rule 88 (sentencia_funcion -> multiple_si .)
    SEGUN           reduce using rule 88 (sentencia_funcion -> multiple_si .)
    DEFINIR         reduce using rule 88 (sentencia_funcion -> multiple_si .)
    SI              reduce using rule 88 (sentencia_funcion -> multiple_si .)
    ID              reduce using rule 88 (sentencia_funcion -> multiple_si .)
    MIENTRAS        reduce using rule 88 (sentencia_funcion -> multiple_si .)
    FIN_FUNCION     reduce using rule 88 (sentencia_funcion -> multiple_si .)
    RETORNAR        reduce using rule 88 (sentencia_funcion -> multiple_si .)


state 114

    (89) sentencia_funcion -> llamar_funciones .

    ESCRIBIR        reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    LEER            reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    PARA            reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    SEGUN           reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    DEFINIR         reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    SI              reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    ID              reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    MIENTRAS        reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    FIN_FUNCION     reduce using rule 89 (sentencia_funcion -> llamar_funciones .)
    RETORNAR        reduce using rule 89 (sentencia_funcion -> llamar_funciones .)


state 115

    (90) posible_declaracion_variable_funcion -> declaracion_variable_funcion .

    ESCRIBIR        reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    LEER            reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    PARA            reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    SEGUN           reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    DEFINIR         reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    SI              reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    ID              reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    RETORNAR        reduce using rule 90 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)


state 116

    (91) posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .

    ESCRIBIR        reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    LEER            reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    PARA            reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    SEGUN           reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    DEFINIR         reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    SI              reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    ID              reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    RETORNAR        reduce using rule 91 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)


state 117

    (92) declaracion_variable_funcion -> DEFINIR . ID COMO TIPO_DATO
    (93) multiple_declaracion_variable_funcion -> DEFINIR . ids COMO TIPO_DATO
    (19) ids -> . ID
    (20) ids -> . ID COMA ids

    ID              shift and go to state 147

    ids                            shift and go to state 148

state 118

    (105) parametros -> ID .
    (106) parametros -> ID . COMA parametros

    PAR_DER         reduce using rule 105 (parametros -> ID .)
    COMA            shift and go to state 149


state 119

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros . PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PAR_DER         shift and go to state 150


state 120

    (22) lista_escribir -> lista_escribir COMA elemento_escribir .

    COMA            reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    ESCRIBIR        reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    LEER            reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    PARA            reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    SEGUN           reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    DEFINIR         reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    SI              reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    ID              reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    MIENTRAS        reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_ALGORITMO   reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_SI          reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    SI_NO           reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_MIENTRAS    reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_SEGUN       reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    NUMERO          reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    CADENA          reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    DE_OTRO_MODO    reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_PARA        reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    FIN_FUNCION     reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)
    RETORNAR        reduce using rule 22 (lista_escribir -> lista_escribir COMA elemento_escribir .)


state 121

    (110) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .

    ID              reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 110 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)


state 122

    (111) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 151

state 123

    (61) operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico . tipo_dato_identificador
    (62) operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 152

state 124

    (63) operador_aritmetico -> MAS .

    ID              reduce using rule 63 (operador_aritmetico -> MAS .)
    NUMERO          reduce using rule 63 (operador_aritmetico -> MAS .)
    CADENA          reduce using rule 63 (operador_aritmetico -> MAS .)
    REAL            reduce using rule 63 (operador_aritmetico -> MAS .)
    LOGICO          reduce using rule 63 (operador_aritmetico -> MAS .)


state 125

    (64) operador_aritmetico -> MENOS .

    ID              reduce using rule 64 (operador_aritmetico -> MENOS .)
    NUMERO          reduce using rule 64 (operador_aritmetico -> MENOS .)
    CADENA          reduce using rule 64 (operador_aritmetico -> MENOS .)
    REAL            reduce using rule 64 (operador_aritmetico -> MENOS .)
    LOGICO          reduce using rule 64 (operador_aritmetico -> MENOS .)


state 126

    (65) operador_aritmetico -> POR .

    ID              reduce using rule 65 (operador_aritmetico -> POR .)
    NUMERO          reduce using rule 65 (operador_aritmetico -> POR .)
    CADENA          reduce using rule 65 (operador_aritmetico -> POR .)
    REAL            reduce using rule 65 (operador_aritmetico -> POR .)
    LOGICO          reduce using rule 65 (operador_aritmetico -> POR .)


state 127

    (66) operador_aritmetico -> DIVIDIDO .

    ID              reduce using rule 66 (operador_aritmetico -> DIVIDIDO .)
    NUMERO          reduce using rule 66 (operador_aritmetico -> DIVIDIDO .)
    CADENA          reduce using rule 66 (operador_aritmetico -> DIVIDIDO .)
    REAL            reduce using rule 66 (operador_aritmetico -> DIVIDIDO .)
    LOGICO          reduce using rule 66 (operador_aritmetico -> DIVIDIDO .)


state 128

    (67) operador_aritmetico -> ELEVADO_A .

    ID              reduce using rule 67 (operador_aritmetico -> ELEVADO_A .)
    NUMERO          reduce using rule 67 (operador_aritmetico -> ELEVADO_A .)
    CADENA          reduce using rule 67 (operador_aritmetico -> ELEVADO_A .)
    REAL            reduce using rule 67 (operador_aritmetico -> ELEVADO_A .)
    LOGICO          reduce using rule 67 (operador_aritmetico -> ELEVADO_A .)


state 129

    (68) operador_aritmetico -> RESIDUO .

    ID              reduce using rule 68 (operador_aritmetico -> RESIDUO .)
    NUMERO          reduce using rule 68 (operador_aritmetico -> RESIDUO .)
    CADENA          reduce using rule 68 (operador_aritmetico -> RESIDUO .)
    REAL            reduce using rule 68 (operador_aritmetico -> RESIDUO .)
    LOGICO          reduce using rule 68 (operador_aritmetico -> RESIDUO .)


state 130

    (28) para -> PARA ID DESDE NUMERO . HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    HASTA           shift and go to state 153


state 131

    (69) segun -> SEGUN ID HACER casos . DE_OTRO_MODO sentencias FIN_SEGUN

    DE_OTRO_MODO    shift and go to state 154


state 132

    (70) casos -> caso . casos
    (71) casos -> caso .
    (70) casos -> . caso casos
    (71) casos -> . caso
    (72) caso -> . NUMERO DOS_PUN sentencias
    (73) caso -> . CADENA DOS_PUN sentencias

    DE_OTRO_MODO    reduce using rule 71 (casos -> caso .)
    NUMERO          shift and go to state 133
    CADENA          shift and go to state 134

    caso                           shift and go to state 132
    casos                          shift and go to state 155

state 133

    (72) caso -> NUMERO . DOS_PUN sentencias

    DOS_PUN         shift and go to state 156


state 134

    (73) caso -> CADENA . DOS_PUN sentencias

    DOS_PUN         shift and go to state 157


state 135

    (17) declaracion_variable -> DEFINIR ID COMO TIPO_DATO .

    ESCRIBIR        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    LEER            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    PARA            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    ID              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    CADENA          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)


state 136

    (19) ids -> ID .
    (20) ids -> ID . COMA ids

    COMO            reduce using rule 19 (ids -> ID .)
    COMA            shift and go to state 86


state 137

    (20) ids -> ID COMA ids .

    COMO            reduce using rule 20 (ids -> ID COMA ids .)


state 138

    (18) multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .

    ESCRIBIR        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    LEER            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    PARA            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    SEGUN           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    DEFINIR         reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    SI              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    ID              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    FIN_SI          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    SI_NO           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    NUMERO          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    CADENA          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ids COMO TIPO_DATO .)


state 139

    (76) si -> SI expresion_logica ENTONCES sentencias . FIN_SI
    (77) si_no -> SI expresion_logica ENTONCES sentencias . SI_NO sentencias FIN_SI

    FIN_SI          shift and go to state 158
    SI_NO           shift and go to state 159


state 140

    (44) expresion_logica -> expresion_logica operador_logico expresion_logica .
    (44) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

  ! shift/reduce conflict for Y resolved as shift
  ! shift/reduce conflict for O resolved as shift
  ! shift/reduce conflict for NO resolved as shift
    ENTONCES        reduce using rule 44 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    HACER           reduce using rule 44 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    Y               shift and go to state 90
    O               shift and go to state 91
    NO              shift and go to state 92

  ! Y               [ reduce using rule 44 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! O               [ reduce using rule 44 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! NO              [ reduce using rule 44 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]

    operador_logico                shift and go to state 89

state 141

    (43) expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .

    ENTONCES        reduce using rule 43 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    Y               reduce using rule 43 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    O               reduce using rule 43 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    NO              reduce using rule 43 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    HACER           reduce using rule 43 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)


state 142

    (34) mientras_v1 -> MIENTRAS expresion_logica HACER sentencias . FIN_MIENTRAS
    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 161
    MIENTRAS        shift and go to state 160


state 143

    (36) mientras_v3 -> MIENTRAS LOGICO HACER sentencias . FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 162


state 144

    (102) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .

    FUNCION         reduce using rule 102 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 102 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .)


state 145

    (103) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (96) tipo_retorno_funcion -> . ID
    (97) tipo_retorno_funcion -> . LOGICO
    (98) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 163
    LOGICO          shift and go to state 165
    CADENA          shift and go to state 166

    tipo_retorno_funcion           shift and go to state 164

state 146

    (79) sentencias_funcion -> sentencia_funcion sentencias_funcion .

    FIN_FUNCION     reduce using rule 79 (sentencias_funcion -> sentencia_funcion sentencias_funcion .)
    RETORNAR        reduce using rule 79 (sentencias_funcion -> sentencia_funcion sentencias_funcion .)


state 147

    (92) declaracion_variable_funcion -> DEFINIR ID . COMO TIPO_DATO
    (19) ids -> ID .
    (20) ids -> ID . COMA ids

  ! shift/reduce conflict for COMO resolved as shift
    COMO            shift and go to state 167
    COMA            shift and go to state 86

  ! COMO            [ reduce using rule 19 (ids -> ID .) ]


state 148

    (93) multiple_declaracion_variable_funcion -> DEFINIR ids . COMO TIPO_DATO

    COMO            shift and go to state 168


state 149

    (106) parametros -> ID COMA . parametros
    (105) parametros -> . ID
    (106) parametros -> . ID COMA parametros

    ID              shift and go to state 118

    parametros                     shift and go to state 169

state 150

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER . PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 170


state 151

    (111) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 172
    COMA            shift and go to state 171


state 152

    (61) operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .
    (62) operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (63) operador_aritmetico -> . MAS
    (64) operador_aritmetico -> . MENOS
    (65) operador_aritmetico -> . POR
    (66) operador_aritmetico -> . DIVIDIDO
    (67) operador_aritmetico -> . ELEVADO_A
    (68) operador_aritmetico -> . RESIDUO

    ID              reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 61 (operacion_matematica_v1 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    MAS             shift and go to state 124
    MENOS           shift and go to state 125
    POR             shift and go to state 126
    DIVIDIDO        shift and go to state 127
    ELEVADO_A       shift and go to state 128
    RESIDUO         shift and go to state 129

    operador_aritmetico            shift and go to state 173

state 153

    (28) para -> PARA ID DESDE NUMERO HASTA . NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 174


state 154

    (69) segun -> SEGUN ID HACER casos DE_OTRO_MODO . sentencias FIN_SEGUN
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 175
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 155

    (70) casos -> caso casos .

    DE_OTRO_MODO    reduce using rule 70 (casos -> caso casos .)


state 156

    (72) caso -> NUMERO DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 176
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 157

    (73) caso -> CADENA DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 177
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 158

    (76) si -> SI expresion_logica ENTONCES sentencias FIN_SI .

    SI              reduce using rule 76 (si -> SI expresion_logica ENTONCES sentencias FIN_SI .)


state 159

    (77) si_no -> SI expresion_logica ENTONCES sentencias SI_NO . sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 178
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 160

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS . expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (43) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (44) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    expresion_logica               shift and go to state 179
    tipo_dato_identificador        shift and go to state 65

state 161

    (34) mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .

    MIENTRAS        reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    LEER            reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 34 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)


state 162

    (36) mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .

    MIENTRAS        reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    LEER            reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 36 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)


state 163

    (96) tipo_retorno_funcion -> ID .

    FIN_FUNCION     reduce using rule 96 (tipo_retorno_funcion -> ID .)


state 164

    (103) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 180


state 165

    (97) tipo_retorno_funcion -> LOGICO .

    FIN_FUNCION     reduce using rule 97 (tipo_retorno_funcion -> LOGICO .)


state 166

    (98) tipo_retorno_funcion -> CADENA .

    FIN_FUNCION     reduce using rule 98 (tipo_retorno_funcion -> CADENA .)


state 167

    (92) declaracion_variable_funcion -> DEFINIR ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 181


state 168

    (93) multiple_declaracion_variable_funcion -> DEFINIR ids COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 182


state 169

    (106) parametros -> ID COMA parametros .

    PAR_DER         reduce using rule 106 (parametros -> ID COMA parametros .)


state 170

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM . cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (78) cuerpo_funcion -> . sentencias_funcion
    (79) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (80) sentencias_funcion -> . sentencia_funcion
    (81) sentencia_funcion -> . posible_declaracion_variable_funcion
    (82) sentencia_funcion -> . estructura_escribir
    (83) sentencia_funcion -> . leer
    (84) sentencia_funcion -> . asignaciones
    (85) sentencia_funcion -> . para
    (86) sentencia_funcion -> . mientras
    (87) sentencia_funcion -> . segun
    (88) sentencia_funcion -> . multiple_si
    (89) sentencia_funcion -> . llamar_funciones
    (90) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (91) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (92) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (93) multiple_declaracion_variable_funcion -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 117
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    cuerpo_funcion                 shift and go to state 183
    sentencias_funcion             shift and go to state 104
    sentencia_funcion              shift and go to state 105
    posible_declaracion_variable_funcion shift and go to state 106
    estructura_escribir            shift and go to state 107
    leer                           shift and go to state 108
    asignaciones                   shift and go to state 109
    para                           shift and go to state 110
    mientras                       shift and go to state 111
    segun                          shift and go to state 112
    multiple_si                    shift and go to state 113
    llamar_funciones               shift and go to state 114
    declaracion_variable_funcion   shift and go to state 115
    multiple_declaracion_variable_funcion shift and go to state 116
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 171

    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 184

state 172

    (111) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 111 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 173

    (62) operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico . tipo_dato_identificador
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 185

state 174

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO . CON_PASO NUMERO HACER sentencias FIN_PARA

    CON_PASO        shift and go to state 186


state 175

    (69) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias . FIN_SEGUN

    FIN_SEGUN       shift and go to state 187


state 176

    (72) caso -> NUMERO DOS_PUN sentencias .

    NUMERO          reduce using rule 72 (caso -> NUMERO DOS_PUN sentencias .)
    CADENA          reduce using rule 72 (caso -> NUMERO DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 72 (caso -> NUMERO DOS_PUN sentencias .)


state 177

    (73) caso -> CADENA DOS_PUN sentencias .

    NUMERO          reduce using rule 73 (caso -> CADENA DOS_PUN sentencias .)
    CADENA          reduce using rule 73 (caso -> CADENA DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 73 (caso -> CADENA DOS_PUN sentencias .)


state 178

    (77) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias . FIN_SI

    FIN_SI          shift and go to state 188


state 179

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica . HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (44) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

    HACER           shift and go to state 189
    Y               shift and go to state 90
    O               shift and go to state 91
    NO              shift and go to state 92

    operador_logico                shift and go to state 89

state 180

    (103) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 103 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 103 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 181

    (92) declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .

    ESCRIBIR        reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    LEER            reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    PARA            reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    SI              reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    ID              reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 92 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)


state 182

    (93) multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .

    ESCRIBIR        reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    LEER            reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    PARA            reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    SEGUN           reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    DEFINIR         reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    SI              reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    ID              reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)
    RETORNAR        reduce using rule 93 (multiple_declaracion_variable_funcion -> DEFINIR ids COMO TIPO_DATO .)


state 183

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion . RETORNAR tipo_retorno_funcion FIN_FUNCION

    RETORNAR        shift and go to state 190


state 184

    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 192
    COMA            shift and go to state 191


state 185

    (62) operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .

    ID              reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 62 (operacion_matematica_v2 -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)


state 186

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO . NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 193


state 187

    (69) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .

    ESCRIBIR        reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    LEER            reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    PARA            reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SEGUN           reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DEFINIR         reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI              reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    ID              reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    MIENTRAS        reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_ALGORITMO   reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SI          reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI_NO           reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_MIENTRAS    reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SEGUN       reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    NUMERO          reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    CADENA          reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DE_OTRO_MODO    reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_PARA        reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_FUNCION     reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    RETORNAR        reduce using rule 69 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)


state 188

    (77) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .

    ESCRIBIR        reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    LEER            reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    PARA            reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SEGUN           reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DEFINIR         reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI              reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    ID              reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    MIENTRAS        reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_ALGORITMO   reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SI          reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI_NO           reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_MIENTRAS    reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SEGUN       reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    NUMERO          reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    CADENA          reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DE_OTRO_MODO    reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_PARA        reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_FUNCION     reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    RETORNAR        reduce using rule 77 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)


state 189

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER . sentencias FIN_MIENTRAS FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 194
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 190

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (96) tipo_retorno_funcion -> . ID
    (97) tipo_retorno_funcion -> . LOGICO
    (98) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 163
    LOGICO          shift and go to state 165
    CADENA          shift and go to state 166

    tipo_retorno_funcion           shift and go to state 195

state 191

    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (45) tipo_dato_identificador -> . ID
    (46) tipo_dato_identificador -> . NUMERO
    (47) tipo_dato_identificador -> . CADENA
    (48) tipo_dato_identificador -> . REAL
    (49) tipo_dato_identificador -> . LOGICO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67
    CADENA          shift and go to state 68
    REAL            shift and go to state 69
    LOGICO          shift and go to state 70

    tipo_dato_identificador        shift and go to state 196

state 192

    (112) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 112 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 193

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO . HACER sentencias FIN_PARA

    HACER           shift and go to state 197


state 194

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias . FIN_MIENTRAS FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 198


state 195

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 199


state 196

    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER

    PAR_DER         shift and go to state 200


state 197

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER . sentencias FIN_PARA
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (21) estructura_escribir -> . ESCRIBIR lista_escribir
    (27) leer -> . LEER ID
    (37) asignaciones -> . asignacion asignaciones
    (38) asignaciones -> . asignacion
    (28) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (29) mientras -> . mientras_declaraciones mientras
    (30) mientras -> . mientras_declaraciones
    (69) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) multiple_si -> . si multiple_si
    (75) multiple_si -> . si_no
    (107) llamar_funciones -> . llamar_funcion llamar_funciones
    (108) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ids COMO TIPO_DATO
    (39) asignacion -> . asignacion_v1
    (40) asignacion -> . asignacion_con_operacion
    (31) mientras_declaraciones -> . mientras_v1
    (32) mientras_declaraciones -> . mientras_v2
    (33) mientras_declaraciones -> . mientras_v3
    (76) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (77) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (109) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (110) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (111) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (112) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (113) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (41) asignacion_v1 -> . ID ASIGNAR tipo_dato_identificador
    (42) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (34) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (35) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS
    (36) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    ESCRIBIR        shift and go to state 23
    LEER            shift and go to state 24
    PARA            shift and go to state 27
    SEGUN           shift and go to state 29
    DEFINIR         shift and go to state 33
    SI              shift and go to state 39
    ID              shift and go to state 25
    MIENTRAS        shift and go to state 40

    sentencias                     shift and go to state 201
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    asignacion                     shift and go to state 26
    mientras_declaraciones         shift and go to state 28
    si                             shift and go to state 30
    si_no                          shift and go to state 31
    llamar_funcion                 shift and go to state 32
    asignacion_v1                  shift and go to state 34
    asignacion_con_operacion       shift and go to state 35
    mientras_v1                    shift and go to state 36
    mientras_v2                    shift and go to state 37
    mientras_v3                    shift and go to state 38

state 198

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS . FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 202


state 199

    (104) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 104 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 104 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 200

    (113) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 113 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 201

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias . FIN_PARA

    FIN_PARA        shift and go to state 203


state 202

    (35) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .

    MIENTRAS        reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    LEER            reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    PARA            reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    SEGUN           reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    DEFINIR         reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    SI              reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    ID              reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_SI          reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    SI_NO           reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    NUMERO          reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    CADENA          reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)
    RETORNAR        reduce using rule 35 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS FIN_MIENTRAS .)


state 203

    (28) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .

    ESCRIBIR        reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    LEER            reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    PARA            reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SEGUN           reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DEFINIR         reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI              reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    ID              reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    MIENTRAS        reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_ALGORITMO   reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SI          reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI_NO           reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_MIENTRAS    reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SEGUN       reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    NUMERO          reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    CADENA          reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DE_OTRO_MODO    reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_PARA        reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_FUNCION     reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    RETORNAR        reduce using rule 28 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MIENTRAS in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 28 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for COMO in state 62 resolved as shift
WARNING: shift/reduce conflict for Y in state 140 resolved as shift
WARNING: shift/reduce conflict for O in state 140 resolved as shift
WARNING: shift/reduce conflict for NO in state 140 resolved as shift
WARNING: shift/reduce conflict for COMO in state 147 resolved as shift
