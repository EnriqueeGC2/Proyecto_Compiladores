Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER
    COMENTARIO
    CONVERTIRANUMERO
    CONVERTIRATEXTO
    COR_DER
    COR_IZQ
    ENTERO
    FIN_PROCEDIMIENTO
    FIN_SI_NO
    IGUAL_A
    LLAVE_DER
    LLAVE_IZQ
    REAL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ALGORITMO cuerpo FIN_ALGORITMO
Rule 2     programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO
Rule 3     cuerpo -> sentencias
Rule 4     sentencias -> sentencia sentencias
Rule 5     sentencias -> sentencia
Rule 6     sentencia -> posible_declaracion_variable
Rule 7     sentencia -> estructura_escribir
Rule 8     sentencia -> leer
Rule 9     sentencia -> asignaciones
Rule 10    sentencia -> para
Rule 11    sentencia -> mientras
Rule 12    sentencia -> segun
Rule 13    sentencia -> multiple_si
Rule 14    sentencia -> llamar_funciones
Rule 15    posible_declaracion_variable -> declaracion_variable
Rule 16    posible_declaracion_variable -> multiple_declaracion_variable
Rule 17    declaracion_variable -> DEFINIR ID COMO TIPO_DATO
Rule 18    multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO
Rule 19    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
Rule 20    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 21    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 22    asignaciones -> asignacion
Rule 23    asignaciones -> asignacion_con_operacion
Rule 24    asignacion -> ID ASIGNAR tipo_dato_identificador
Rule 25    asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas
Rule 26    estructura_escribir -> escribir
Rule 27    estructura_escribir -> escribir_cadena_id
Rule 28    estructura_escribir -> escribir_cadena_id_cadena
Rule 29    estructura_escribir -> escribir_cadena_id_id
Rule 30    escribir -> ESCRIBIR CADENA
Rule 31    escribir -> ESCRIBIR ID
Rule 32    escribir -> ESCRIBIR NUMERO
Rule 33    escribir_cadena_id -> ESCRIBIR CADENA COMA ID
Rule 34    escribir_cadena_id -> ESCRIBIR ID COMA CADENA
Rule 35    escribir_cadena_id -> ESCRIBIR ID COMA ID
Rule 36    escribir_cadena_id -> ESCRIBIR ID COMA NUMERO
Rule 37    escribir_cadena_id -> ESCRIBIR NUMERO COMA ID
Rule 38    escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA
Rule 39    escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID
Rule 40    escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
Rule 41    escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
Rule 42    leer -> LEER ID
Rule 43    para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
Rule 44    mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
Rule 45    expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador
Rule 46    expresion_logica -> expresion_logica operador_logico expresion_logica
Rule 47    tipo_dato_identificador -> ID
Rule 48    tipo_dato_identificador -> NUMERO
Rule 49    tipo_dato_identificador -> CADENA
Rule 50    operador_logico -> Y
Rule 51    operador_logico -> O
Rule 52    operador_logico -> NO
Rule 53    operador_relacional -> ES_MAYOR_QUE
Rule 54    operador_relacional -> ES_MENOR_QUE
Rule 55    operador_relacional -> ES_IGUAL_QUE
Rule 56    operador_relacional -> ES_MAYOR_O_IGUAL_QUE
Rule 57    operador_relacional -> ES_MENOR_O_IGUAL_QUE
Rule 58    operador_relacional -> ES_DISTINTO_QUE
Rule 59    operaciones_matematicas -> operacion_matematica
Rule 60    operaciones_matematicas -> operacion_matematica_parentesis
Rule 61    operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica
Rule 62    operaciones_matematicas -> operacion_matematica operaciones_matematicas
Rule 63    operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador
Rule 64    operador_aritmetico -> MAS
Rule 65    operador_aritmetico -> MENOS
Rule 66    operador_aritmetico -> POR
Rule 67    operador_aritmetico -> DIVIDIDO
Rule 68    operador_aritmetico -> ELEVADO_A
Rule 69    operador_aritmetico -> RESIDUO
Rule 70    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER
Rule 71    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
Rule 72    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER
Rule 73    segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
Rule 74    casos -> caso casos
Rule 75    casos -> caso
Rule 76    caso -> NUMERO DOS_PUN sentencias
Rule 77    caso -> CADENA DOS_PUN sentencias
Rule 78    multiple_si -> si multiple_si
Rule 79    multiple_si -> si_no
Rule 80    si -> SI expresion_logica ENTONCES sentencias FIN_SI
Rule 81    si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
Rule 82    funciones -> funcion funciones
Rule 83    funciones -> funcion
Rule 84    tipo_retorno_funcion -> ID
Rule 85    tipo_retorno_funcion -> LOGICO
Rule 86    tipo_retorno_funcion -> CADENA
Rule 87    funcion -> funcion_sin_retorno
Rule 88    funcion -> funcion_con_retorno
Rule 89    funcion -> funcion_con_parametros_con_retorno
Rule 90    funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION
Rule 91    funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 92    funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 93    parametros -> ID COMO TIPO_DATO
Rule 94    parametros -> ID COMO TIPO_DATO COMA parametros
Rule 95    llamar_funciones -> llamar_funcion llamar_funciones
Rule 96    llamar_funciones -> llamar_funcion
Rule 97    llamar_funcion -> ID PAR_IZQ PAR_DER
Rule 98    llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER
Rule 99    llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 100   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 101   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

Terminals, with rules where they appear

ALGORITMO            : 1 2
ASIGNAR              : 24 25
CADENA               : 30 33 34 38 38 39 40 40 41 41 49 77 86
CARACTER             : 
COMA                 : 18 19 19 20 20 20 21 21 21 21 33 34 35 36 37 38 38 39 39 40 40 40 41 41 41 94 99 100 100 101 101 101
COMENTARIO           : 
COMO                 : 17 18 19 20 21 93 94
CONVERTIRANUMERO     : 
CONVERTIRATEXTO      : 
CON_PASO             : 43
COR_DER              : 
COR_IZQ              : 
DEFINIR              : 17 18 19 20 21
DESDE                : 43
DE_OTRO_MODO         : 73
DIVIDIDO             : 67
DOS_PUN              : 76 77
ELEVADO_A            : 68
ENTERO               : 
ENTONCES             : 80 81
ESCRIBIR             : 30 31 32 33 34 35 36 37 38 39 40 41
ES_DISTINTO_QUE      : 58
ES_IGUAL_QUE         : 55
ES_MAYOR_O_IGUAL_QUE : 56
ES_MAYOR_QUE         : 53
ES_MENOR_O_IGUAL_QUE : 57
ES_MENOR_QUE         : 54
FIN_ALGORITMO        : 1 2
FIN_FUNCION          : 90 91 92
FIN_MIENTRAS         : 44
FIN_PARA             : 43
FIN_PROCEDIMIENTO    : 
FIN_SEGUN            : 73
FIN_SI               : 80 81
FIN_SI_NO            : 
FUNCION              : 90 91 92
HACER                : 43 44 73
HASTA                : 43
ID                   : 17 18 18 19 19 19 20 20 20 20 21 21 21 21 21 24 25 31 33 34 35 35 36 37 38 39 39 40 40 41 41 42 43 47 73 84 90 91 92 93 94 97 98 99 100 101
IGUAL_A              : 
LEER                 : 42
LLAVE_DER            : 
LLAVE_IZQ            : 
LOGICO               : 85
MAS                  : 64
MENOS                : 65
MIENTRAS             : 44
NO                   : 52
NUMERO               : 32 36 37 43 43 43 48 76
O                    : 51
PARA                 : 43
PAR_DER              : 70 71 72 92 97 98 99 100 101
PAR_IZQ              : 70 71 72 92 97 98 99 100 101
POR                  : 66
PUN_Y_COM            : 90 91 92
REAL                 : 
RESIDUO              : 69
RETORNAR             : 91 92
SEGUN                : 73
SI                   : 80 81
SI_NO                : 81
TIPO_DATO            : 17 18 19 20 21 93 94
Y                    : 50
error                : 

Nonterminals, with rules where they appear

asignacion           : 22
asignacion_con_operacion : 23
asignaciones         : 9
caso                 : 74 75
casos                : 73 74
cuerpo               : 1 2 90 91 92
declaracion_variable : 15
escribir             : 26
escribir_cadena_id   : 27
escribir_cadena_id_cadena : 28
escribir_cadena_id_id : 29
estructura_escribir  : 7
expresion_logica     : 44 46 46 80 81
funcion              : 82 83
funcion_con_parametros_con_retorno : 89
funcion_con_retorno  : 88
funcion_sin_retorno  : 87
funciones            : 2 82
leer                 : 8
llamar_funcion       : 95 96
llamar_funciones     : 14 95
mientras             : 11
multiple_declaracion_variable : 16
multiple_si          : 13 78
operacion_matematica : 59 61 62 70 71
operacion_matematica_parentesis : 60 61 72
operaciones_matematicas : 25 62
operador_aritmetico  : 63 71
operador_logico      : 46
operador_relacional  : 45
para                 : 10
parametros           : 92 94
posible_declaracion_variable : 6
programa             : 0
segun                : 12
sentencia            : 4 5
sentencias           : 3 4 43 44 73 76 77 80 81 81
si                   : 78
si_no                : 79
tipo_dato_identificador : 24 45 45 63 63 71 98 99 99 100 100 100 101 101 101 101
tipo_retorno_funcion : 91 92

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ALGORITMO cuerpo FIN_ALGORITMO
    (2) programa -> . funciones ALGORITMO cuerpo FIN_ALGORITMO
    (82) funciones -> . funcion funciones
    (83) funciones -> . funcion
    (87) funcion -> . funcion_sin_retorno
    (88) funcion -> . funcion_con_retorno
    (89) funcion -> . funcion_con_parametros_con_retorno
    (90) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION
    (91) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (92) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       shift and go to state 2
    FUNCION         shift and go to state 8

    programa                       shift and go to state 1
    funciones                      shift and go to state 3
    funcion                        shift and go to state 4
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    cuerpo                         shift and go to state 9
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 3

    (2) programa -> funciones . ALGORITMO cuerpo FIN_ALGORITMO

    ALGORITMO       shift and go to state 40


state 4

    (82) funciones -> funcion . funciones
    (83) funciones -> funcion .
    (82) funciones -> . funcion funciones
    (83) funciones -> . funcion
    (87) funcion -> . funcion_sin_retorno
    (88) funcion -> . funcion_con_retorno
    (89) funcion -> . funcion_con_parametros_con_retorno
    (90) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION
    (91) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (92) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       reduce using rule 83 (funciones -> funcion .)
    FUNCION         shift and go to state 8

    funcion                        shift and go to state 4
    funciones                      shift and go to state 41
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 5

    (87) funcion -> funcion_sin_retorno .

    FUNCION         reduce using rule 87 (funcion -> funcion_sin_retorno .)
    ALGORITMO       reduce using rule 87 (funcion -> funcion_sin_retorno .)


state 6

    (88) funcion -> funcion_con_retorno .

    FUNCION         reduce using rule 88 (funcion -> funcion_con_retorno .)
    ALGORITMO       reduce using rule 88 (funcion -> funcion_con_retorno .)


state 7

    (89) funcion -> funcion_con_parametros_con_retorno .

    FUNCION         reduce using rule 89 (funcion -> funcion_con_parametros_con_retorno .)
    ALGORITMO       reduce using rule 89 (funcion -> funcion_con_parametros_con_retorno .)


state 8

    (90) funcion_sin_retorno -> FUNCION . ID PUN_Y_COM cuerpo FIN_FUNCION
    (91) funcion_con_retorno -> FUNCION . ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (92) funcion_con_parametros_con_retorno -> FUNCION . ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    ID              shift and go to state 42


state 9

    (1) programa -> ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 43


state 10

    (3) cuerpo -> sentencias .

    FIN_ALGORITMO   reduce using rule 3 (cuerpo -> sentencias .)
    FIN_FUNCION     reduce using rule 3 (cuerpo -> sentencias .)
    RETORNAR        reduce using rule 3 (cuerpo -> sentencias .)


state 11

    (4) sentencias -> sentencia . sentencias
    (5) sentencias -> sentencia .
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    FIN_ALGORITMO   reduce using rule 5 (sentencias -> sentencia .)
    FIN_FUNCION     reduce using rule 5 (sentencias -> sentencia .)
    RETORNAR        reduce using rule 5 (sentencias -> sentencia .)
    FIN_MIENTRAS    reduce using rule 5 (sentencias -> sentencia .)
    FIN_SI          reduce using rule 5 (sentencias -> sentencia .)
    SI_NO           reduce using rule 5 (sentencias -> sentencia .)
    FIN_SEGUN       reduce using rule 5 (sentencias -> sentencia .)
    NUMERO          reduce using rule 5 (sentencias -> sentencia .)
    CADENA          reduce using rule 5 (sentencias -> sentencia .)
    DE_OTRO_MODO    reduce using rule 5 (sentencias -> sentencia .)
    FIN_PARA        reduce using rule 5 (sentencias -> sentencia .)
    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencia                      shift and go to state 11
    sentencias                     shift and go to state 44
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 12

    (6) sentencia -> posible_declaracion_variable .

    LEER            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    PARA            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    MIENTRAS        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SEGUN           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DEFINIR         reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    ESCRIBIR        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    ID              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_FUNCION     reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    RETORNAR        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SI          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI_NO           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SEGUN       reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    NUMERO          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    CADENA          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_PARA        reduce using rule 6 (sentencia -> posible_declaracion_variable .)


state 13

    (7) sentencia -> estructura_escribir .

    LEER            reduce using rule 7 (sentencia -> estructura_escribir .)
    PARA            reduce using rule 7 (sentencia -> estructura_escribir .)
    MIENTRAS        reduce using rule 7 (sentencia -> estructura_escribir .)
    SEGUN           reduce using rule 7 (sentencia -> estructura_escribir .)
    DEFINIR         reduce using rule 7 (sentencia -> estructura_escribir .)
    ESCRIBIR        reduce using rule 7 (sentencia -> estructura_escribir .)
    ID              reduce using rule 7 (sentencia -> estructura_escribir .)
    SI              reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_ALGORITMO   reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_FUNCION     reduce using rule 7 (sentencia -> estructura_escribir .)
    RETORNAR        reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_MIENTRAS    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SI          reduce using rule 7 (sentencia -> estructura_escribir .)
    SI_NO           reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SEGUN       reduce using rule 7 (sentencia -> estructura_escribir .)
    NUMERO          reduce using rule 7 (sentencia -> estructura_escribir .)
    CADENA          reduce using rule 7 (sentencia -> estructura_escribir .)
    DE_OTRO_MODO    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_PARA        reduce using rule 7 (sentencia -> estructura_escribir .)


state 14

    (8) sentencia -> leer .

    LEER            reduce using rule 8 (sentencia -> leer .)
    PARA            reduce using rule 8 (sentencia -> leer .)
    MIENTRAS        reduce using rule 8 (sentencia -> leer .)
    SEGUN           reduce using rule 8 (sentencia -> leer .)
    DEFINIR         reduce using rule 8 (sentencia -> leer .)
    ESCRIBIR        reduce using rule 8 (sentencia -> leer .)
    ID              reduce using rule 8 (sentencia -> leer .)
    SI              reduce using rule 8 (sentencia -> leer .)
    FIN_ALGORITMO   reduce using rule 8 (sentencia -> leer .)
    FIN_FUNCION     reduce using rule 8 (sentencia -> leer .)
    RETORNAR        reduce using rule 8 (sentencia -> leer .)
    FIN_MIENTRAS    reduce using rule 8 (sentencia -> leer .)
    FIN_SI          reduce using rule 8 (sentencia -> leer .)
    SI_NO           reduce using rule 8 (sentencia -> leer .)
    FIN_SEGUN       reduce using rule 8 (sentencia -> leer .)
    NUMERO          reduce using rule 8 (sentencia -> leer .)
    CADENA          reduce using rule 8 (sentencia -> leer .)
    DE_OTRO_MODO    reduce using rule 8 (sentencia -> leer .)
    FIN_PARA        reduce using rule 8 (sentencia -> leer .)


state 15

    (9) sentencia -> asignaciones .

    LEER            reduce using rule 9 (sentencia -> asignaciones .)
    PARA            reduce using rule 9 (sentencia -> asignaciones .)
    MIENTRAS        reduce using rule 9 (sentencia -> asignaciones .)
    SEGUN           reduce using rule 9 (sentencia -> asignaciones .)
    DEFINIR         reduce using rule 9 (sentencia -> asignaciones .)
    ESCRIBIR        reduce using rule 9 (sentencia -> asignaciones .)
    ID              reduce using rule 9 (sentencia -> asignaciones .)
    SI              reduce using rule 9 (sentencia -> asignaciones .)
    FIN_ALGORITMO   reduce using rule 9 (sentencia -> asignaciones .)
    FIN_FUNCION     reduce using rule 9 (sentencia -> asignaciones .)
    RETORNAR        reduce using rule 9 (sentencia -> asignaciones .)
    FIN_MIENTRAS    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SI          reduce using rule 9 (sentencia -> asignaciones .)
    SI_NO           reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SEGUN       reduce using rule 9 (sentencia -> asignaciones .)
    NUMERO          reduce using rule 9 (sentencia -> asignaciones .)
    CADENA          reduce using rule 9 (sentencia -> asignaciones .)
    DE_OTRO_MODO    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_PARA        reduce using rule 9 (sentencia -> asignaciones .)


state 16

    (10) sentencia -> para .

    LEER            reduce using rule 10 (sentencia -> para .)
    PARA            reduce using rule 10 (sentencia -> para .)
    MIENTRAS        reduce using rule 10 (sentencia -> para .)
    SEGUN           reduce using rule 10 (sentencia -> para .)
    DEFINIR         reduce using rule 10 (sentencia -> para .)
    ESCRIBIR        reduce using rule 10 (sentencia -> para .)
    ID              reduce using rule 10 (sentencia -> para .)
    SI              reduce using rule 10 (sentencia -> para .)
    FIN_ALGORITMO   reduce using rule 10 (sentencia -> para .)
    FIN_FUNCION     reduce using rule 10 (sentencia -> para .)
    RETORNAR        reduce using rule 10 (sentencia -> para .)
    FIN_MIENTRAS    reduce using rule 10 (sentencia -> para .)
    FIN_SI          reduce using rule 10 (sentencia -> para .)
    SI_NO           reduce using rule 10 (sentencia -> para .)
    FIN_SEGUN       reduce using rule 10 (sentencia -> para .)
    NUMERO          reduce using rule 10 (sentencia -> para .)
    CADENA          reduce using rule 10 (sentencia -> para .)
    DE_OTRO_MODO    reduce using rule 10 (sentencia -> para .)
    FIN_PARA        reduce using rule 10 (sentencia -> para .)


state 17

    (11) sentencia -> mientras .

    LEER            reduce using rule 11 (sentencia -> mientras .)
    PARA            reduce using rule 11 (sentencia -> mientras .)
    MIENTRAS        reduce using rule 11 (sentencia -> mientras .)
    SEGUN           reduce using rule 11 (sentencia -> mientras .)
    DEFINIR         reduce using rule 11 (sentencia -> mientras .)
    ESCRIBIR        reduce using rule 11 (sentencia -> mientras .)
    ID              reduce using rule 11 (sentencia -> mientras .)
    SI              reduce using rule 11 (sentencia -> mientras .)
    FIN_ALGORITMO   reduce using rule 11 (sentencia -> mientras .)
    FIN_FUNCION     reduce using rule 11 (sentencia -> mientras .)
    RETORNAR        reduce using rule 11 (sentencia -> mientras .)
    FIN_MIENTRAS    reduce using rule 11 (sentencia -> mientras .)
    FIN_SI          reduce using rule 11 (sentencia -> mientras .)
    SI_NO           reduce using rule 11 (sentencia -> mientras .)
    FIN_SEGUN       reduce using rule 11 (sentencia -> mientras .)
    NUMERO          reduce using rule 11 (sentencia -> mientras .)
    CADENA          reduce using rule 11 (sentencia -> mientras .)
    DE_OTRO_MODO    reduce using rule 11 (sentencia -> mientras .)
    FIN_PARA        reduce using rule 11 (sentencia -> mientras .)


state 18

    (12) sentencia -> segun .

    LEER            reduce using rule 12 (sentencia -> segun .)
    PARA            reduce using rule 12 (sentencia -> segun .)
    MIENTRAS        reduce using rule 12 (sentencia -> segun .)
    SEGUN           reduce using rule 12 (sentencia -> segun .)
    DEFINIR         reduce using rule 12 (sentencia -> segun .)
    ESCRIBIR        reduce using rule 12 (sentencia -> segun .)
    ID              reduce using rule 12 (sentencia -> segun .)
    SI              reduce using rule 12 (sentencia -> segun .)
    FIN_ALGORITMO   reduce using rule 12 (sentencia -> segun .)
    FIN_FUNCION     reduce using rule 12 (sentencia -> segun .)
    RETORNAR        reduce using rule 12 (sentencia -> segun .)
    FIN_MIENTRAS    reduce using rule 12 (sentencia -> segun .)
    FIN_SI          reduce using rule 12 (sentencia -> segun .)
    SI_NO           reduce using rule 12 (sentencia -> segun .)
    FIN_SEGUN       reduce using rule 12 (sentencia -> segun .)
    NUMERO          reduce using rule 12 (sentencia -> segun .)
    CADENA          reduce using rule 12 (sentencia -> segun .)
    DE_OTRO_MODO    reduce using rule 12 (sentencia -> segun .)
    FIN_PARA        reduce using rule 12 (sentencia -> segun .)


state 19

    (13) sentencia -> multiple_si .

    LEER            reduce using rule 13 (sentencia -> multiple_si .)
    PARA            reduce using rule 13 (sentencia -> multiple_si .)
    MIENTRAS        reduce using rule 13 (sentencia -> multiple_si .)
    SEGUN           reduce using rule 13 (sentencia -> multiple_si .)
    DEFINIR         reduce using rule 13 (sentencia -> multiple_si .)
    ESCRIBIR        reduce using rule 13 (sentencia -> multiple_si .)
    ID              reduce using rule 13 (sentencia -> multiple_si .)
    SI              reduce using rule 13 (sentencia -> multiple_si .)
    FIN_ALGORITMO   reduce using rule 13 (sentencia -> multiple_si .)
    FIN_FUNCION     reduce using rule 13 (sentencia -> multiple_si .)
    RETORNAR        reduce using rule 13 (sentencia -> multiple_si .)
    FIN_MIENTRAS    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SI          reduce using rule 13 (sentencia -> multiple_si .)
    SI_NO           reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SEGUN       reduce using rule 13 (sentencia -> multiple_si .)
    NUMERO          reduce using rule 13 (sentencia -> multiple_si .)
    CADENA          reduce using rule 13 (sentencia -> multiple_si .)
    DE_OTRO_MODO    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_PARA        reduce using rule 13 (sentencia -> multiple_si .)


state 20

    (14) sentencia -> llamar_funciones .

    LEER            reduce using rule 14 (sentencia -> llamar_funciones .)
    PARA            reduce using rule 14 (sentencia -> llamar_funciones .)
    MIENTRAS        reduce using rule 14 (sentencia -> llamar_funciones .)
    SEGUN           reduce using rule 14 (sentencia -> llamar_funciones .)
    DEFINIR         reduce using rule 14 (sentencia -> llamar_funciones .)
    ESCRIBIR        reduce using rule 14 (sentencia -> llamar_funciones .)
    ID              reduce using rule 14 (sentencia -> llamar_funciones .)
    SI              reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_FUNCION     reduce using rule 14 (sentencia -> llamar_funciones .)
    RETORNAR        reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SI          reduce using rule 14 (sentencia -> llamar_funciones .)
    SI_NO           reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SEGUN       reduce using rule 14 (sentencia -> llamar_funciones .)
    NUMERO          reduce using rule 14 (sentencia -> llamar_funciones .)
    CADENA          reduce using rule 14 (sentencia -> llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_PARA        reduce using rule 14 (sentencia -> llamar_funciones .)


state 21

    (15) posible_declaracion_variable -> declaracion_variable .

    LEER            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    PARA            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    MIENTRAS        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SEGUN           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DEFINIR         reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    ESCRIBIR        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    ID              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_FUNCION     reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    RETORNAR        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SI          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI_NO           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SEGUN       reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    NUMERO          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    CADENA          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_PARA        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)


state 22

    (16) posible_declaracion_variable -> multiple_declaracion_variable .

    LEER            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    PARA            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    MIENTRAS        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SEGUN           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DEFINIR         reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    ESCRIBIR        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    ID              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_FUNCION     reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    RETORNAR        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SI          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI_NO           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SEGUN       reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    NUMERO          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    CADENA          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_PARA        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)


state 23

    (26) estructura_escribir -> escribir .

    LEER            reduce using rule 26 (estructura_escribir -> escribir .)
    PARA            reduce using rule 26 (estructura_escribir -> escribir .)
    MIENTRAS        reduce using rule 26 (estructura_escribir -> escribir .)
    SEGUN           reduce using rule 26 (estructura_escribir -> escribir .)
    DEFINIR         reduce using rule 26 (estructura_escribir -> escribir .)
    ESCRIBIR        reduce using rule 26 (estructura_escribir -> escribir .)
    ID              reduce using rule 26 (estructura_escribir -> escribir .)
    SI              reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_ALGORITMO   reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_FUNCION     reduce using rule 26 (estructura_escribir -> escribir .)
    RETORNAR        reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_MIENTRAS    reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_SI          reduce using rule 26 (estructura_escribir -> escribir .)
    SI_NO           reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_SEGUN       reduce using rule 26 (estructura_escribir -> escribir .)
    NUMERO          reduce using rule 26 (estructura_escribir -> escribir .)
    CADENA          reduce using rule 26 (estructura_escribir -> escribir .)
    DE_OTRO_MODO    reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_PARA        reduce using rule 26 (estructura_escribir -> escribir .)


state 24

    (27) estructura_escribir -> escribir_cadena_id .

    LEER            reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    PARA            reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    MIENTRAS        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SEGUN           reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    DEFINIR         reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    ESCRIBIR        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    ID              reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SI              reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_ALGORITMO   reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_FUNCION     reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    RETORNAR        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_MIENTRAS    reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_SI          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SI_NO           reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_SEGUN       reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    NUMERO          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    CADENA          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    DE_OTRO_MODO    reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_PARA        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)


state 25

    (28) estructura_escribir -> escribir_cadena_id_cadena .

    LEER            reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    PARA            reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    MIENTRAS        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SEGUN           reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    DEFINIR         reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    ESCRIBIR        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    ID              reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SI              reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_ALGORITMO   reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_FUNCION     reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    RETORNAR        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_MIENTRAS    reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_SI          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SI_NO           reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_SEGUN       reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    NUMERO          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    CADENA          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    DE_OTRO_MODO    reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_PARA        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)


state 26

    (29) estructura_escribir -> escribir_cadena_id_id .

    LEER            reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    PARA            reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    MIENTRAS        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SEGUN           reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    DEFINIR         reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    ESCRIBIR        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    ID              reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SI              reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_ALGORITMO   reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_FUNCION     reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    RETORNAR        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_MIENTRAS    reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_SI          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SI_NO           reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_SEGUN       reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    NUMERO          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    CADENA          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    DE_OTRO_MODO    reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_PARA        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)


state 27

    (42) leer -> LEER . ID

    ID              shift and go to state 45


state 28

    (24) asignacion -> ID . ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> ID . ASIGNAR operaciones_matematicas
    (97) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (98) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    ASIGNAR         shift and go to state 46
    PAR_IZQ         shift and go to state 47


state 29

    (22) asignaciones -> asignacion .

    LEER            reduce using rule 22 (asignaciones -> asignacion .)
    PARA            reduce using rule 22 (asignaciones -> asignacion .)
    MIENTRAS        reduce using rule 22 (asignaciones -> asignacion .)
    SEGUN           reduce using rule 22 (asignaciones -> asignacion .)
    DEFINIR         reduce using rule 22 (asignaciones -> asignacion .)
    ESCRIBIR        reduce using rule 22 (asignaciones -> asignacion .)
    ID              reduce using rule 22 (asignaciones -> asignacion .)
    SI              reduce using rule 22 (asignaciones -> asignacion .)
    FIN_ALGORITMO   reduce using rule 22 (asignaciones -> asignacion .)
    FIN_FUNCION     reduce using rule 22 (asignaciones -> asignacion .)
    RETORNAR        reduce using rule 22 (asignaciones -> asignacion .)
    FIN_MIENTRAS    reduce using rule 22 (asignaciones -> asignacion .)
    FIN_SI          reduce using rule 22 (asignaciones -> asignacion .)
    SI_NO           reduce using rule 22 (asignaciones -> asignacion .)
    FIN_SEGUN       reduce using rule 22 (asignaciones -> asignacion .)
    NUMERO          reduce using rule 22 (asignaciones -> asignacion .)
    CADENA          reduce using rule 22 (asignaciones -> asignacion .)
    DE_OTRO_MODO    reduce using rule 22 (asignaciones -> asignacion .)
    FIN_PARA        reduce using rule 22 (asignaciones -> asignacion .)


state 30

    (23) asignaciones -> asignacion_con_operacion .

    LEER            reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    PARA            reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    MIENTRAS        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SEGUN           reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    DEFINIR         reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    ESCRIBIR        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    ID              reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SI              reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_ALGORITMO   reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_FUNCION     reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    RETORNAR        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_MIENTRAS    reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_SI          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SI_NO           reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_SEGUN       reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    NUMERO          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    CADENA          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    DE_OTRO_MODO    reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_PARA        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)


state 31

    (43) para -> PARA . ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    ID              shift and go to state 48


state 32

    (44) mientras -> MIENTRAS . expresion_logica HACER sentencias FIN_MIENTRAS
    (45) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (46) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    expresion_logica               shift and go to state 49
    tipo_dato_identificador        shift and go to state 50

state 33

    (73) segun -> SEGUN . ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    ID              shift and go to state 54


state 34

    (78) multiple_si -> si . multiple_si
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI

    SI              shift and go to state 39

    si                             shift and go to state 34
    multiple_si                    shift and go to state 55
    si_no                          shift and go to state 35

state 35

    (79) multiple_si -> si_no .

    LEER            reduce using rule 79 (multiple_si -> si_no .)
    PARA            reduce using rule 79 (multiple_si -> si_no .)
    MIENTRAS        reduce using rule 79 (multiple_si -> si_no .)
    SEGUN           reduce using rule 79 (multiple_si -> si_no .)
    DEFINIR         reduce using rule 79 (multiple_si -> si_no .)
    ESCRIBIR        reduce using rule 79 (multiple_si -> si_no .)
    ID              reduce using rule 79 (multiple_si -> si_no .)
    SI              reduce using rule 79 (multiple_si -> si_no .)
    FIN_ALGORITMO   reduce using rule 79 (multiple_si -> si_no .)
    FIN_FUNCION     reduce using rule 79 (multiple_si -> si_no .)
    RETORNAR        reduce using rule 79 (multiple_si -> si_no .)
    FIN_MIENTRAS    reduce using rule 79 (multiple_si -> si_no .)
    FIN_SI          reduce using rule 79 (multiple_si -> si_no .)
    SI_NO           reduce using rule 79 (multiple_si -> si_no .)
    FIN_SEGUN       reduce using rule 79 (multiple_si -> si_no .)
    NUMERO          reduce using rule 79 (multiple_si -> si_no .)
    CADENA          reduce using rule 79 (multiple_si -> si_no .)
    DE_OTRO_MODO    reduce using rule 79 (multiple_si -> si_no .)
    FIN_PARA        reduce using rule 79 (multiple_si -> si_no .)


state 36

    (95) llamar_funciones -> llamar_funcion . llamar_funciones
    (96) llamar_funciones -> llamar_funcion .
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

  ! shift/reduce conflict for ID resolved as shift
    LEER            reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    PARA            reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    MIENTRAS        reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    SEGUN           reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    DEFINIR         reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    ESCRIBIR        reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    SI              reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_ALGORITMO   reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_FUNCION     reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    RETORNAR        reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_MIENTRAS    reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_SI          reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    SI_NO           reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_SEGUN       reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    NUMERO          reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    CADENA          reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    DE_OTRO_MODO    reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    FIN_PARA        reduce using rule 96 (llamar_funciones -> llamar_funcion .)
    ID              shift and go to state 57

  ! ID              [ reduce using rule 96 (llamar_funciones -> llamar_funcion .) ]

    llamar_funcion                 shift and go to state 36
    llamar_funciones               shift and go to state 56

state 37

    (17) declaracion_variable -> DEFINIR . ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 58


state 38

    (30) escribir -> ESCRIBIR . CADENA
    (31) escribir -> ESCRIBIR . ID
    (32) escribir -> ESCRIBIR . NUMERO
    (33) escribir_cadena_id -> ESCRIBIR . CADENA COMA ID
    (34) escribir_cadena_id -> ESCRIBIR . ID COMA CADENA
    (35) escribir_cadena_id -> ESCRIBIR . ID COMA ID
    (36) escribir_cadena_id -> ESCRIBIR . ID COMA NUMERO
    (37) escribir_cadena_id -> ESCRIBIR . NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR . CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> ESCRIBIR . ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> ESCRIBIR . CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR . ID COMA CADENA COMA ID COMA CADENA

    CADENA          shift and go to state 59
    ID              shift and go to state 60
    NUMERO          shift and go to state 61


state 39

    (80) si -> SI . expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> SI . expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (45) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (46) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    expresion_logica               shift and go to state 62
    tipo_dato_identificador        shift and go to state 50

state 40

    (2) programa -> funciones ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    cuerpo                         shift and go to state 63
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 41

    (82) funciones -> funcion funciones .

    ALGORITMO       reduce using rule 82 (funciones -> funcion funciones .)


state 42

    (90) funcion_sin_retorno -> FUNCION ID . PUN_Y_COM cuerpo FIN_FUNCION
    (91) funcion_con_retorno -> FUNCION ID . PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (92) funcion_con_parametros_con_retorno -> FUNCION ID . PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 64
    PAR_IZQ         shift and go to state 65


state 43

    (1) programa -> ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 1 (programa -> ALGORITMO cuerpo FIN_ALGORITMO .)


state 44

    (4) sentencias -> sentencia sentencias .

    FIN_ALGORITMO   reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_FUNCION     reduce using rule 4 (sentencias -> sentencia sentencias .)
    RETORNAR        reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_MIENTRAS    reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SI          reduce using rule 4 (sentencias -> sentencia sentencias .)
    SI_NO           reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SEGUN       reduce using rule 4 (sentencias -> sentencia sentencias .)
    NUMERO          reduce using rule 4 (sentencias -> sentencia sentencias .)
    CADENA          reduce using rule 4 (sentencias -> sentencia sentencias .)
    DE_OTRO_MODO    reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_PARA        reduce using rule 4 (sentencias -> sentencia sentencias .)


state 45

    (42) leer -> LEER ID .

    LEER            reduce using rule 42 (leer -> LEER ID .)
    PARA            reduce using rule 42 (leer -> LEER ID .)
    MIENTRAS        reduce using rule 42 (leer -> LEER ID .)
    SEGUN           reduce using rule 42 (leer -> LEER ID .)
    DEFINIR         reduce using rule 42 (leer -> LEER ID .)
    ESCRIBIR        reduce using rule 42 (leer -> LEER ID .)
    ID              reduce using rule 42 (leer -> LEER ID .)
    SI              reduce using rule 42 (leer -> LEER ID .)
    FIN_ALGORITMO   reduce using rule 42 (leer -> LEER ID .)
    FIN_FUNCION     reduce using rule 42 (leer -> LEER ID .)
    RETORNAR        reduce using rule 42 (leer -> LEER ID .)
    FIN_MIENTRAS    reduce using rule 42 (leer -> LEER ID .)
    FIN_SI          reduce using rule 42 (leer -> LEER ID .)
    SI_NO           reduce using rule 42 (leer -> LEER ID .)
    FIN_SEGUN       reduce using rule 42 (leer -> LEER ID .)
    NUMERO          reduce using rule 42 (leer -> LEER ID .)
    CADENA          reduce using rule 42 (leer -> LEER ID .)
    DE_OTRO_MODO    reduce using rule 42 (leer -> LEER ID .)
    FIN_PARA        reduce using rule 42 (leer -> LEER ID .)


state 46

    (24) asignacion -> ID ASIGNAR . tipo_dato_identificador
    (25) asignacion_con_operacion -> ID ASIGNAR . operaciones_matematicas
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA
    (59) operaciones_matematicas -> . operacion_matematica
    (60) operaciones_matematicas -> . operacion_matematica_parentesis
    (61) operaciones_matematicas -> . operacion_matematica_parentesis operacion_matematica
    (62) operaciones_matematicas -> . operacion_matematica operaciones_matematicas
    (63) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (70) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (71) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (72) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53
    PAR_IZQ         shift and go to state 70

    tipo_dato_identificador        shift and go to state 66
    operaciones_matematicas        shift and go to state 67
    operacion_matematica           shift and go to state 68
    operacion_matematica_parentesis shift and go to state 69

state 47

    (97) llamar_funcion -> ID PAR_IZQ . PAR_DER
    (98) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    PAR_DER         shift and go to state 71
    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 72

state 48

    (43) para -> PARA ID . DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    DESDE           shift and go to state 73


state 49

    (44) mientras -> MIENTRAS expresion_logica . HACER sentencias FIN_MIENTRAS
    (46) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

    HACER           shift and go to state 74
    Y               shift and go to state 76
    O               shift and go to state 77
    NO              shift and go to state 78

    operador_logico                shift and go to state 75

state 50

    (45) expresion_logica -> tipo_dato_identificador . operador_relacional tipo_dato_identificador
    (53) operador_relacional -> . ES_MAYOR_QUE
    (54) operador_relacional -> . ES_MENOR_QUE
    (55) operador_relacional -> . ES_IGUAL_QUE
    (56) operador_relacional -> . ES_MAYOR_O_IGUAL_QUE
    (57) operador_relacional -> . ES_MENOR_O_IGUAL_QUE
    (58) operador_relacional -> . ES_DISTINTO_QUE

    ES_MAYOR_QUE    shift and go to state 80
    ES_MENOR_QUE    shift and go to state 81
    ES_IGUAL_QUE    shift and go to state 82
    ES_MAYOR_O_IGUAL_QUE shift and go to state 83
    ES_MENOR_O_IGUAL_QUE shift and go to state 84
    ES_DISTINTO_QUE shift and go to state 85

    operador_relacional            shift and go to state 79

state 51

    (47) tipo_dato_identificador -> ID .

    ES_MAYOR_QUE    reduce using rule 47 (tipo_dato_identificador -> ID .)
    ES_MENOR_QUE    reduce using rule 47 (tipo_dato_identificador -> ID .)
    ES_IGUAL_QUE    reduce using rule 47 (tipo_dato_identificador -> ID .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 47 (tipo_dato_identificador -> ID .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 47 (tipo_dato_identificador -> ID .)
    ES_DISTINTO_QUE reduce using rule 47 (tipo_dato_identificador -> ID .)
    MAS             reduce using rule 47 (tipo_dato_identificador -> ID .)
    MENOS           reduce using rule 47 (tipo_dato_identificador -> ID .)
    POR             reduce using rule 47 (tipo_dato_identificador -> ID .)
    DIVIDIDO        reduce using rule 47 (tipo_dato_identificador -> ID .)
    ELEVADO_A       reduce using rule 47 (tipo_dato_identificador -> ID .)
    RESIDUO         reduce using rule 47 (tipo_dato_identificador -> ID .)
    LEER            reduce using rule 47 (tipo_dato_identificador -> ID .)
    PARA            reduce using rule 47 (tipo_dato_identificador -> ID .)
    MIENTRAS        reduce using rule 47 (tipo_dato_identificador -> ID .)
    SEGUN           reduce using rule 47 (tipo_dato_identificador -> ID .)
    DEFINIR         reduce using rule 47 (tipo_dato_identificador -> ID .)
    ESCRIBIR        reduce using rule 47 (tipo_dato_identificador -> ID .)
    ID              reduce using rule 47 (tipo_dato_identificador -> ID .)
    SI              reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_ALGORITMO   reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_FUNCION     reduce using rule 47 (tipo_dato_identificador -> ID .)
    RETORNAR        reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_MIENTRAS    reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_SI          reduce using rule 47 (tipo_dato_identificador -> ID .)
    SI_NO           reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_SEGUN       reduce using rule 47 (tipo_dato_identificador -> ID .)
    NUMERO          reduce using rule 47 (tipo_dato_identificador -> ID .)
    CADENA          reduce using rule 47 (tipo_dato_identificador -> ID .)
    DE_OTRO_MODO    reduce using rule 47 (tipo_dato_identificador -> ID .)
    FIN_PARA        reduce using rule 47 (tipo_dato_identificador -> ID .)
    PAR_DER         reduce using rule 47 (tipo_dato_identificador -> ID .)
    COMA            reduce using rule 47 (tipo_dato_identificador -> ID .)
    HACER           reduce using rule 47 (tipo_dato_identificador -> ID .)
    Y               reduce using rule 47 (tipo_dato_identificador -> ID .)
    O               reduce using rule 47 (tipo_dato_identificador -> ID .)
    NO              reduce using rule 47 (tipo_dato_identificador -> ID .)
    ENTONCES        reduce using rule 47 (tipo_dato_identificador -> ID .)
    PAR_IZQ         reduce using rule 47 (tipo_dato_identificador -> ID .)


state 52

    (48) tipo_dato_identificador -> NUMERO .

    ES_MAYOR_QUE    reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_QUE    reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ES_IGUAL_QUE    reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ES_DISTINTO_QUE reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    MAS             reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    MENOS           reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    POR             reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    DIVIDIDO        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ELEVADO_A       reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    RESIDUO         reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    LEER            reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    PARA            reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    MIENTRAS        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    SEGUN           reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    DEFINIR         reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ESCRIBIR        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ID              reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    SI              reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_ALGORITMO   reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_FUNCION     reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    RETORNAR        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_MIENTRAS    reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_SI          reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    SI_NO           reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_SEGUN       reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    NUMERO          reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    CADENA          reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    DE_OTRO_MODO    reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    FIN_PARA        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    PAR_DER         reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    COMA            reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    HACER           reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    Y               reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    O               reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    NO              reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    ENTONCES        reduce using rule 48 (tipo_dato_identificador -> NUMERO .)
    PAR_IZQ         reduce using rule 48 (tipo_dato_identificador -> NUMERO .)


state 53

    (49) tipo_dato_identificador -> CADENA .

    ES_MAYOR_QUE    reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_QUE    reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ES_IGUAL_QUE    reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ES_DISTINTO_QUE reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    MAS             reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    MENOS           reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    POR             reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    DIVIDIDO        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ELEVADO_A       reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    RESIDUO         reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    LEER            reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    PARA            reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    MIENTRAS        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    SEGUN           reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    DEFINIR         reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ESCRIBIR        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ID              reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    SI              reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_ALGORITMO   reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_FUNCION     reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    RETORNAR        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_MIENTRAS    reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_SI          reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    SI_NO           reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_SEGUN       reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    NUMERO          reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    CADENA          reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    DE_OTRO_MODO    reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    FIN_PARA        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    PAR_DER         reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    COMA            reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    HACER           reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    Y               reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    O               reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    NO              reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    ENTONCES        reduce using rule 49 (tipo_dato_identificador -> CADENA .)
    PAR_IZQ         reduce using rule 49 (tipo_dato_identificador -> CADENA .)


state 54

    (73) segun -> SEGUN ID . HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    HACER           shift and go to state 86


state 55

    (78) multiple_si -> si multiple_si .

    LEER            reduce using rule 78 (multiple_si -> si multiple_si .)
    PARA            reduce using rule 78 (multiple_si -> si multiple_si .)
    MIENTRAS        reduce using rule 78 (multiple_si -> si multiple_si .)
    SEGUN           reduce using rule 78 (multiple_si -> si multiple_si .)
    DEFINIR         reduce using rule 78 (multiple_si -> si multiple_si .)
    ESCRIBIR        reduce using rule 78 (multiple_si -> si multiple_si .)
    ID              reduce using rule 78 (multiple_si -> si multiple_si .)
    SI              reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_ALGORITMO   reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_FUNCION     reduce using rule 78 (multiple_si -> si multiple_si .)
    RETORNAR        reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_MIENTRAS    reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_SI          reduce using rule 78 (multiple_si -> si multiple_si .)
    SI_NO           reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_SEGUN       reduce using rule 78 (multiple_si -> si multiple_si .)
    NUMERO          reduce using rule 78 (multiple_si -> si multiple_si .)
    CADENA          reduce using rule 78 (multiple_si -> si multiple_si .)
    DE_OTRO_MODO    reduce using rule 78 (multiple_si -> si multiple_si .)
    FIN_PARA        reduce using rule 78 (multiple_si -> si multiple_si .)


state 56

    (95) llamar_funciones -> llamar_funcion llamar_funciones .

    LEER            reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    PARA            reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    MIENTRAS        reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SEGUN           reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DEFINIR         reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    ESCRIBIR        reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    ID              reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI              reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_FUNCION     reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    RETORNAR        reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SI          reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI_NO           reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SEGUN       reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    NUMERO          reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    CADENA          reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_PARA        reduce using rule 95 (llamar_funciones -> llamar_funcion llamar_funciones .)


state 57

    (97) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (98) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_IZQ         shift and go to state 47


state 58

    (17) declaracion_variable -> DEFINIR ID . COMO TIPO_DATO
    (18) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 87
    COMA            shift and go to state 88


state 59

    (30) escribir -> ESCRIBIR CADENA .
    (33) escribir_cadena_id -> ESCRIBIR CADENA . COMA ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA . COMA ID COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA . COMA ID COMA CADENA COMA ID

    LEER            reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    PARA            reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    MIENTRAS        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SEGUN           reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    DEFINIR         reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    ESCRIBIR        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    ID              reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SI              reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_ALGORITMO   reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_FUNCION     reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    RETORNAR        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_MIENTRAS    reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_SI          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SI_NO           reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_SEGUN       reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    NUMERO          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    CADENA          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    DE_OTRO_MODO    reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_PARA        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    COMA            shift and go to state 89


state 60

    (31) escribir -> ESCRIBIR ID .
    (34) escribir_cadena_id -> ESCRIBIR ID . COMA CADENA
    (35) escribir_cadena_id -> ESCRIBIR ID . COMA ID
    (36) escribir_cadena_id -> ESCRIBIR ID . COMA NUMERO
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID . COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID . COMA CADENA COMA ID COMA CADENA

    LEER            reduce using rule 31 (escribir -> ESCRIBIR ID .)
    PARA            reduce using rule 31 (escribir -> ESCRIBIR ID .)
    MIENTRAS        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SEGUN           reduce using rule 31 (escribir -> ESCRIBIR ID .)
    DEFINIR         reduce using rule 31 (escribir -> ESCRIBIR ID .)
    ESCRIBIR        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    ID              reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SI              reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_ALGORITMO   reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_FUNCION     reduce using rule 31 (escribir -> ESCRIBIR ID .)
    RETORNAR        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_MIENTRAS    reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_SI          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SI_NO           reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_SEGUN       reduce using rule 31 (escribir -> ESCRIBIR ID .)
    NUMERO          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    CADENA          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    DE_OTRO_MODO    reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_PARA        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    COMA            shift and go to state 90


state 61

    (32) escribir -> ESCRIBIR NUMERO .
    (37) escribir_cadena_id -> ESCRIBIR NUMERO . COMA ID

    LEER            reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    PARA            reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    MIENTRAS        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SEGUN           reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    DEFINIR         reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    ESCRIBIR        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    ID              reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SI              reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_ALGORITMO   reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_FUNCION     reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    RETORNAR        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_MIENTRAS    reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_SI          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SI_NO           reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_SEGUN       reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    NUMERO          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    CADENA          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    DE_OTRO_MODO    reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_PARA        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    COMA            shift and go to state 91


state 62

    (80) si -> SI expresion_logica . ENTONCES sentencias FIN_SI
    (81) si_no -> SI expresion_logica . ENTONCES sentencias SI_NO sentencias FIN_SI
    (46) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

    ENTONCES        shift and go to state 92
    Y               shift and go to state 76
    O               shift and go to state 77
    NO              shift and go to state 78

    operador_logico                shift and go to state 75

state 63

    (2) programa -> funciones ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 93


state 64

    (90) funcion_sin_retorno -> FUNCION ID PUN_Y_COM . cuerpo FIN_FUNCION
    (91) funcion_con_retorno -> FUNCION ID PUN_Y_COM . cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    cuerpo                         shift and go to state 94
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 65

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ . parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (93) parametros -> . ID COMO TIPO_DATO
    (94) parametros -> . ID COMO TIPO_DATO COMA parametros

    ID              shift and go to state 95

    parametros                     shift and go to state 96

state 66

    (24) asignacion -> ID ASIGNAR tipo_dato_identificador .
    (63) operacion_matematica -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (64) operador_aritmetico -> . MAS
    (65) operador_aritmetico -> . MENOS
    (66) operador_aritmetico -> . POR
    (67) operador_aritmetico -> . DIVIDIDO
    (68) operador_aritmetico -> . ELEVADO_A
    (69) operador_aritmetico -> . RESIDUO

    LEER            reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    PARA            reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    MIENTRAS        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SEGUN           reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    DEFINIR         reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    ID              reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SI              reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    RETORNAR        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SI          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SI_NO           reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    NUMERO          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    CADENA          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_PARA        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    MAS             shift and go to state 98
    MENOS           shift and go to state 99
    POR             shift and go to state 100
    DIVIDIDO        shift and go to state 101
    ELEVADO_A       shift and go to state 102
    RESIDUO         shift and go to state 103

    operador_aritmetico            shift and go to state 97

state 67

    (25) asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .

    LEER            reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    PARA            reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    MIENTRAS        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SEGUN           reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DEFINIR         reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    ESCRIBIR        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    ID              reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI              reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_ALGORITMO   reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_FUNCION     reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    RETORNAR        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_MIENTRAS    reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SI          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI_NO           reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SEGUN       reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    NUMERO          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    CADENA          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DE_OTRO_MODO    reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_PARA        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)


state 68

    (59) operaciones_matematicas -> operacion_matematica .
    (62) operaciones_matematicas -> operacion_matematica . operaciones_matematicas
    (59) operaciones_matematicas -> . operacion_matematica
    (60) operaciones_matematicas -> . operacion_matematica_parentesis
    (61) operaciones_matematicas -> . operacion_matematica_parentesis operacion_matematica
    (62) operaciones_matematicas -> . operacion_matematica operaciones_matematicas
    (63) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (70) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (71) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (72) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    LEER            reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    PARA            reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    MIENTRAS        reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    SEGUN           reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    DEFINIR         reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    ESCRIBIR        reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    SI              reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_ALGORITMO   reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_FUNCION     reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    RETORNAR        reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_MIENTRAS    reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_SI          reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    SI_NO           reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_SEGUN       reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    DE_OTRO_MODO    reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    FIN_PARA        reduce using rule 59 (operaciones_matematicas -> operacion_matematica .)
    PAR_IZQ         shift and go to state 70
    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

  ! ID              [ reduce using rule 59 (operaciones_matematicas -> operacion_matematica .) ]
  ! NUMERO          [ reduce using rule 59 (operaciones_matematicas -> operacion_matematica .) ]
  ! CADENA          [ reduce using rule 59 (operaciones_matematicas -> operacion_matematica .) ]

    operacion_matematica           shift and go to state 68
    operaciones_matematicas        shift and go to state 104
    operacion_matematica_parentesis shift and go to state 69
    tipo_dato_identificador        shift and go to state 105

state 69

    (60) operaciones_matematicas -> operacion_matematica_parentesis .
    (61) operaciones_matematicas -> operacion_matematica_parentesis . operacion_matematica
    (63) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    LEER            reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    PARA            reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    MIENTRAS        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SEGUN           reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    DEFINIR         reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    ESCRIBIR        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SI              reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_ALGORITMO   reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_FUNCION     reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    RETORNAR        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_MIENTRAS    reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_SI          reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SI_NO           reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_SEGUN       reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    DE_OTRO_MODO    reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_PARA        reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .)
    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

  ! ID              [ reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .) ]
  ! NUMERO          [ reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .) ]
  ! CADENA          [ reduce using rule 60 (operaciones_matematicas -> operacion_matematica_parentesis .) ]

    operacion_matematica           shift and go to state 106
    tipo_dato_identificador        shift and go to state 105

state 70

    (70) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica PAR_DER
    (71) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (72) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica_parentesis PAR_DER
    (63) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (70) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (71) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (72) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    PAR_IZQ         shift and go to state 70
    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    operacion_matematica           shift and go to state 107
    tipo_dato_identificador        shift and go to state 105
    operacion_matematica_parentesis shift and go to state 108

state 71

    (97) llamar_funcion -> ID PAR_IZQ PAR_DER .

    ID              reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    LEER            reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    PARA            reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    MIENTRAS        reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SEGUN           reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DEFINIR         reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    ESCRIBIR        reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI              reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_ALGORITMO   reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_FUNCION     reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    RETORNAR        reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_MIENTRAS    reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SI          reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI_NO           reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SEGUN       reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    NUMERO          reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    CADENA          reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DE_OTRO_MODO    reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_PARA        reduce using rule 97 (llamar_funcion -> ID PAR_IZQ PAR_DER .)


state 72

    (98) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . PAR_DER
    (99) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 109
    COMA            shift and go to state 110


state 73

    (43) para -> PARA ID DESDE . NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 111


state 74

    (44) mientras -> MIENTRAS expresion_logica HACER . sentencias FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 112
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 75

    (46) expresion_logica -> expresion_logica operador_logico . expresion_logica
    (45) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (46) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    expresion_logica               shift and go to state 113
    tipo_dato_identificador        shift and go to state 50

state 76

    (50) operador_logico -> Y .

    ID              reduce using rule 50 (operador_logico -> Y .)
    NUMERO          reduce using rule 50 (operador_logico -> Y .)
    CADENA          reduce using rule 50 (operador_logico -> Y .)


state 77

    (51) operador_logico -> O .

    ID              reduce using rule 51 (operador_logico -> O .)
    NUMERO          reduce using rule 51 (operador_logico -> O .)
    CADENA          reduce using rule 51 (operador_logico -> O .)


state 78

    (52) operador_logico -> NO .

    ID              reduce using rule 52 (operador_logico -> NO .)
    NUMERO          reduce using rule 52 (operador_logico -> NO .)
    CADENA          reduce using rule 52 (operador_logico -> NO .)


state 79

    (45) expresion_logica -> tipo_dato_identificador operador_relacional . tipo_dato_identificador
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 114

state 80

    (53) operador_relacional -> ES_MAYOR_QUE .

    ID              reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    NUMERO          reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)
    CADENA          reduce using rule 53 (operador_relacional -> ES_MAYOR_QUE .)


state 81

    (54) operador_relacional -> ES_MENOR_QUE .

    ID              reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    NUMERO          reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)
    CADENA          reduce using rule 54 (operador_relacional -> ES_MENOR_QUE .)


state 82

    (55) operador_relacional -> ES_IGUAL_QUE .

    ID              reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    NUMERO          reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)
    CADENA          reduce using rule 55 (operador_relacional -> ES_IGUAL_QUE .)


state 83

    (56) operador_relacional -> ES_MAYOR_O_IGUAL_QUE .

    ID              reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 56 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)


state 84

    (57) operador_relacional -> ES_MENOR_O_IGUAL_QUE .

    ID              reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 57 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)


state 85

    (58) operador_relacional -> ES_DISTINTO_QUE .

    ID              reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    NUMERO          reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)
    CADENA          reduce using rule 58 (operador_relacional -> ES_DISTINTO_QUE .)


state 86

    (73) segun -> SEGUN ID HACER . casos DE_OTRO_MODO sentencias FIN_SEGUN
    (74) casos -> . caso casos
    (75) casos -> . caso
    (76) caso -> . NUMERO DOS_PUN sentencias
    (77) caso -> . CADENA DOS_PUN sentencias

    NUMERO          shift and go to state 117
    CADENA          shift and go to state 118

    casos                          shift and go to state 115
    caso                           shift and go to state 116

state 87

    (17) declaracion_variable -> DEFINIR ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 119


state 88

    (18) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 120


state 89

    (33) escribir_cadena_id -> ESCRIBIR CADENA COMA . ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA . ID COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA . ID COMA CADENA COMA ID

    ID              shift and go to state 121


state 90

    (34) escribir_cadena_id -> ESCRIBIR ID COMA . CADENA
    (35) escribir_cadena_id -> ESCRIBIR ID COMA . ID
    (36) escribir_cadena_id -> ESCRIBIR ID COMA . NUMERO
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA . CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA . CADENA COMA ID COMA CADENA

    CADENA          shift and go to state 123
    ID              shift and go to state 122
    NUMERO          shift and go to state 124


state 91

    (37) escribir_cadena_id -> ESCRIBIR NUMERO COMA . ID

    ID              shift and go to state 125


state 92

    (80) si -> SI expresion_logica ENTONCES . sentencias FIN_SI
    (81) si_no -> SI expresion_logica ENTONCES . sentencias SI_NO sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 126
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 93

    (2) programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 2 (programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .)


state 94

    (90) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo . FIN_FUNCION
    (91) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo . RETORNAR tipo_retorno_funcion FIN_FUNCION

    FIN_FUNCION     shift and go to state 127
    RETORNAR        shift and go to state 128


state 95

    (93) parametros -> ID . COMO TIPO_DATO
    (94) parametros -> ID . COMO TIPO_DATO COMA parametros

    COMO            shift and go to state 129


state 96

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros . PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    PAR_DER         shift and go to state 130


state 97

    (63) operacion_matematica -> tipo_dato_identificador operador_aritmetico . tipo_dato_identificador
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 131

state 98

    (64) operador_aritmetico -> MAS .

    ID              reduce using rule 64 (operador_aritmetico -> MAS .)
    NUMERO          reduce using rule 64 (operador_aritmetico -> MAS .)
    CADENA          reduce using rule 64 (operador_aritmetico -> MAS .)


state 99

    (65) operador_aritmetico -> MENOS .

    ID              reduce using rule 65 (operador_aritmetico -> MENOS .)
    NUMERO          reduce using rule 65 (operador_aritmetico -> MENOS .)
    CADENA          reduce using rule 65 (operador_aritmetico -> MENOS .)


state 100

    (66) operador_aritmetico -> POR .

    ID              reduce using rule 66 (operador_aritmetico -> POR .)
    NUMERO          reduce using rule 66 (operador_aritmetico -> POR .)
    CADENA          reduce using rule 66 (operador_aritmetico -> POR .)


state 101

    (67) operador_aritmetico -> DIVIDIDO .

    ID              reduce using rule 67 (operador_aritmetico -> DIVIDIDO .)
    NUMERO          reduce using rule 67 (operador_aritmetico -> DIVIDIDO .)
    CADENA          reduce using rule 67 (operador_aritmetico -> DIVIDIDO .)


state 102

    (68) operador_aritmetico -> ELEVADO_A .

    ID              reduce using rule 68 (operador_aritmetico -> ELEVADO_A .)
    NUMERO          reduce using rule 68 (operador_aritmetico -> ELEVADO_A .)
    CADENA          reduce using rule 68 (operador_aritmetico -> ELEVADO_A .)


state 103

    (69) operador_aritmetico -> RESIDUO .

    ID              reduce using rule 69 (operador_aritmetico -> RESIDUO .)
    NUMERO          reduce using rule 69 (operador_aritmetico -> RESIDUO .)
    CADENA          reduce using rule 69 (operador_aritmetico -> RESIDUO .)


state 104

    (62) operaciones_matematicas -> operacion_matematica operaciones_matematicas .

    LEER            reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    PARA            reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    MIENTRAS        reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SEGUN           reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    DEFINIR         reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    ESCRIBIR        reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    ID              reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SI              reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_ALGORITMO   reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_FUNCION     reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    RETORNAR        reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_MIENTRAS    reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_SI          reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SI_NO           reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_SEGUN       reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    NUMERO          reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    CADENA          reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    DE_OTRO_MODO    reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_PARA        reduce using rule 62 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)


state 105

    (63) operacion_matematica -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (64) operador_aritmetico -> . MAS
    (65) operador_aritmetico -> . MENOS
    (66) operador_aritmetico -> . POR
    (67) operador_aritmetico -> . DIVIDIDO
    (68) operador_aritmetico -> . ELEVADO_A
    (69) operador_aritmetico -> . RESIDUO

    MAS             shift and go to state 98
    MENOS           shift and go to state 99
    POR             shift and go to state 100
    DIVIDIDO        shift and go to state 101
    ELEVADO_A       shift and go to state 102
    RESIDUO         shift and go to state 103

    operador_aritmetico            shift and go to state 97

state 106

    (61) operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .

    LEER            reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    PARA            reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    MIENTRAS        reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SEGUN           reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    DEFINIR         reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    ESCRIBIR        reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    ID              reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SI              reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_ALGORITMO   reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_FUNCION     reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    RETORNAR        reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_MIENTRAS    reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_SI          reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SI_NO           reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_SEGUN       reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    NUMERO          reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    CADENA          reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    DE_OTRO_MODO    reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_PARA        reduce using rule 61 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)


state 107

    (70) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica . PAR_DER
    (71) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica . PAR_DER operador_aritmetico tipo_dato_identificador

    PAR_DER         shift and go to state 132


state 108

    (72) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis . PAR_DER

    PAR_DER         shift and go to state 133


state 109

    (98) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .

    ID              reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 98 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)


state 110

    (99) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 134

state 111

    (43) para -> PARA ID DESDE NUMERO . HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    HASTA           shift and go to state 135


state 112

    (44) mientras -> MIENTRAS expresion_logica HACER sentencias . FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 136


state 113

    (46) expresion_logica -> expresion_logica operador_logico expresion_logica .
    (46) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (50) operador_logico -> . Y
    (51) operador_logico -> . O
    (52) operador_logico -> . NO

  ! shift/reduce conflict for Y resolved as shift
  ! shift/reduce conflict for O resolved as shift
  ! shift/reduce conflict for NO resolved as shift
    HACER           reduce using rule 46 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    ENTONCES        reduce using rule 46 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    Y               shift and go to state 76
    O               shift and go to state 77
    NO              shift and go to state 78

  ! Y               [ reduce using rule 46 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! O               [ reduce using rule 46 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! NO              [ reduce using rule 46 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]

    operador_logico                shift and go to state 75

state 114

    (45) expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .

    HACER           reduce using rule 45 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    Y               reduce using rule 45 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    O               reduce using rule 45 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    NO              reduce using rule 45 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    ENTONCES        reduce using rule 45 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)


state 115

    (73) segun -> SEGUN ID HACER casos . DE_OTRO_MODO sentencias FIN_SEGUN

    DE_OTRO_MODO    shift and go to state 137


state 116

    (74) casos -> caso . casos
    (75) casos -> caso .
    (74) casos -> . caso casos
    (75) casos -> . caso
    (76) caso -> . NUMERO DOS_PUN sentencias
    (77) caso -> . CADENA DOS_PUN sentencias

    DE_OTRO_MODO    reduce using rule 75 (casos -> caso .)
    NUMERO          shift and go to state 117
    CADENA          shift and go to state 118

    caso                           shift and go to state 116
    casos                          shift and go to state 138

state 117

    (76) caso -> NUMERO . DOS_PUN sentencias

    DOS_PUN         shift and go to state 139


state 118

    (77) caso -> CADENA . DOS_PUN sentencias

    DOS_PUN         shift and go to state 140


state 119

    (17) declaracion_variable -> DEFINIR ID COMO TIPO_DATO .

    LEER            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    PARA            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    ID              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    CADENA          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)


state 120

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 142
    COMA            shift and go to state 141


state 121

    (33) escribir_cadena_id -> ESCRIBIR CADENA COMA ID .
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID . COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID . COMA CADENA COMA ID

    LEER            reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    PARA            reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    MIENTRAS        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SEGUN           reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    DEFINIR         reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    ESCRIBIR        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    ID              reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SI              reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    RETORNAR        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_SI          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SI_NO           reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    NUMERO          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    CADENA          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_PARA        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    COMA            shift and go to state 143


state 122

    (35) escribir_cadena_id -> ESCRIBIR ID COMA ID .

    LEER            reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    PARA            reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    MIENTRAS        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SEGUN           reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    DEFINIR         reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    ESCRIBIR        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    ID              reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SI              reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_ALGORITMO   reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_FUNCION     reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    RETORNAR        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_MIENTRAS    reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_SI          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SI_NO           reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_SEGUN       reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    NUMERO          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    CADENA          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    DE_OTRO_MODO    reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_PARA        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)


state 123

    (34) escribir_cadena_id -> ESCRIBIR ID COMA CADENA .
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA . COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA . COMA ID COMA CADENA

    LEER            reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    PARA            reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    MIENTRAS        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SEGUN           reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    DEFINIR         reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    ESCRIBIR        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    ID              reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SI              reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    RETORNAR        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_SI          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SI_NO           reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    NUMERO          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    CADENA          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_PARA        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    COMA            shift and go to state 144


state 124

    (36) escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .

    LEER            reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    PARA            reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    MIENTRAS        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SEGUN           reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    DEFINIR         reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    ESCRIBIR        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    ID              reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SI              reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_ALGORITMO   reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_FUNCION     reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    RETORNAR        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_MIENTRAS    reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_SI          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SI_NO           reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_SEGUN       reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    NUMERO          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    CADENA          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    DE_OTRO_MODO    reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_PARA        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)


state 125

    (37) escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .

    LEER            reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    PARA            reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    MIENTRAS        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SEGUN           reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    DEFINIR         reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    ESCRIBIR        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    ID              reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SI              reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_ALGORITMO   reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_FUNCION     reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    RETORNAR        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_MIENTRAS    reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_SI          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SI_NO           reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_SEGUN       reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    NUMERO          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    CADENA          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    DE_OTRO_MODO    reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_PARA        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)


state 126

    (80) si -> SI expresion_logica ENTONCES sentencias . FIN_SI
    (81) si_no -> SI expresion_logica ENTONCES sentencias . SI_NO sentencias FIN_SI

    FIN_SI          shift and go to state 145
    SI_NO           shift and go to state 146


state 127

    (90) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION .

    FUNCION         reduce using rule 90 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION .)
    ALGORITMO       reduce using rule 90 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo FIN_FUNCION .)


state 128

    (91) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (84) tipo_retorno_funcion -> . ID
    (85) tipo_retorno_funcion -> . LOGICO
    (86) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 147
    LOGICO          shift and go to state 149
    CADENA          shift and go to state 150

    tipo_retorno_funcion           shift and go to state 148

state 129

    (93) parametros -> ID COMO . TIPO_DATO
    (94) parametros -> ID COMO . TIPO_DATO COMA parametros

    TIPO_DATO       shift and go to state 151


state 130

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER . PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 152


state 131

    (63) operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .

    PAR_IZQ         reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ID              reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PAR_DER         reduce using rule 63 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)


state 132

    (70) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .
    (71) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER . operador_aritmetico tipo_dato_identificador
    (64) operador_aritmetico -> . MAS
    (65) operador_aritmetico -> . MENOS
    (66) operador_aritmetico -> . POR
    (67) operador_aritmetico -> . DIVIDIDO
    (68) operador_aritmetico -> . ELEVADO_A
    (69) operador_aritmetico -> . RESIDUO

    ID              reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    NUMERO          reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    CADENA          reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    LEER            reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    PARA            reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    MIENTRAS        reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SEGUN           reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    DEFINIR         reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    ESCRIBIR        reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SI              reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_ALGORITMO   reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_FUNCION     reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    RETORNAR        reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_MIENTRAS    reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_SI          reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SI_NO           reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_SEGUN       reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    DE_OTRO_MODO    reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_PARA        reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    PAR_DER         reduce using rule 70 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    MAS             shift and go to state 98
    MENOS           shift and go to state 99
    POR             shift and go to state 100
    DIVIDIDO        shift and go to state 101
    ELEVADO_A       shift and go to state 102
    RESIDUO         shift and go to state 103

    operador_aritmetico            shift and go to state 153

state 133

    (72) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .

    ID              reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    NUMERO          reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    CADENA          reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    LEER            reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    PARA            reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    MIENTRAS        reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SEGUN           reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    DEFINIR         reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    ESCRIBIR        reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SI              reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_ALGORITMO   reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_FUNCION     reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    RETORNAR        reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_MIENTRAS    reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_SI          reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SI_NO           reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_SEGUN       reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    DE_OTRO_MODO    reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_PARA        reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    PAR_DER         reduce using rule 72 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)


state 134

    (99) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 155
    COMA            shift and go to state 154


state 135

    (43) para -> PARA ID DESDE NUMERO HASTA . NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 156


state 136

    (44) mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .

    LEER            reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    MIENTRAS        reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 44 (mientras -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)


state 137

    (73) segun -> SEGUN ID HACER casos DE_OTRO_MODO . sentencias FIN_SEGUN
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 157
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 138

    (74) casos -> caso casos .

    DE_OTRO_MODO    reduce using rule 74 (casos -> caso casos .)


state 139

    (76) caso -> NUMERO DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 158
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 140

    (77) caso -> CADENA DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 159
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 141

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 160


state 142

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 161


state 143

    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA . CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA . CADENA COMA ID

    CADENA          shift and go to state 162


state 144

    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA . ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA . ID COMA CADENA

    ID              shift and go to state 163


state 145

    (80) si -> SI expresion_logica ENTONCES sentencias FIN_SI .

    SI              reduce using rule 80 (si -> SI expresion_logica ENTONCES sentencias FIN_SI .)


state 146

    (81) si_no -> SI expresion_logica ENTONCES sentencias SI_NO . sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 164
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 147

    (84) tipo_retorno_funcion -> ID .

    FIN_FUNCION     reduce using rule 84 (tipo_retorno_funcion -> ID .)


state 148

    (91) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 165


state 149

    (85) tipo_retorno_funcion -> LOGICO .

    FIN_FUNCION     reduce using rule 85 (tipo_retorno_funcion -> LOGICO .)


state 150

    (86) tipo_retorno_funcion -> CADENA .

    FIN_FUNCION     reduce using rule 86 (tipo_retorno_funcion -> CADENA .)


state 151

    (93) parametros -> ID COMO TIPO_DATO .
    (94) parametros -> ID COMO TIPO_DATO . COMA parametros

    PAR_DER         reduce using rule 93 (parametros -> ID COMO TIPO_DATO .)
    COMA            shift and go to state 166


state 152

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM . cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    cuerpo                         shift and go to state 167
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 153

    (71) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico . tipo_dato_identificador
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 168

state 154

    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 169

state 155

    (99) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 99 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 156

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO . CON_PASO NUMERO HACER sentencias FIN_PARA

    CON_PASO        shift and go to state 170


state 157

    (73) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias . FIN_SEGUN

    FIN_SEGUN       shift and go to state 171


state 158

    (76) caso -> NUMERO DOS_PUN sentencias .

    NUMERO          reduce using rule 76 (caso -> NUMERO DOS_PUN sentencias .)
    CADENA          reduce using rule 76 (caso -> NUMERO DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 76 (caso -> NUMERO DOS_PUN sentencias .)


state 159

    (77) caso -> CADENA DOS_PUN sentencias .

    NUMERO          reduce using rule 77 (caso -> CADENA DOS_PUN sentencias .)
    CADENA          reduce using rule 77 (caso -> CADENA DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 77 (caso -> CADENA DOS_PUN sentencias .)


state 160

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 173
    COMA            shift and go to state 172


state 161

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)


state 162

    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA . COMA ID

    LEER            reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    PARA            reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    MIENTRAS        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SEGUN           reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    DEFINIR         reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    ESCRIBIR        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    ID              reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SI              reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    RETORNAR        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_SI          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SI_NO           reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    NUMERO          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    CADENA          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_PARA        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    COMA            shift and go to state 174


state 163

    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID . COMA CADENA

    LEER            reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    PARA            reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    MIENTRAS        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SEGUN           reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    DEFINIR         reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    ESCRIBIR        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    ID              reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SI              reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    RETORNAR        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_SI          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SI_NO           reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    NUMERO          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    CADENA          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_PARA        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    COMA            shift and go to state 175


state 164

    (81) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias . FIN_SI

    FIN_SI          shift and go to state 176


state 165

    (91) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 91 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 91 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 166

    (94) parametros -> ID COMO TIPO_DATO COMA . parametros
    (93) parametros -> . ID COMO TIPO_DATO
    (94) parametros -> . ID COMO TIPO_DATO COMA parametros

    ID              shift and go to state 95

    parametros                     shift and go to state 177

state 167

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo . RETORNAR tipo_retorno_funcion FIN_FUNCION

    RETORNAR        shift and go to state 178


state 168

    (71) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .

    ID              reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    PAR_DER         reduce using rule 71 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)


state 169

    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 180
    COMA            shift and go to state 179


state 170

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO . NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 181


state 171

    (73) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .

    LEER            reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    PARA            reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    MIENTRAS        reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SEGUN           reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DEFINIR         reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    ESCRIBIR        reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    ID              reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI              reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_ALGORITMO   reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_FUNCION     reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    RETORNAR        reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_MIENTRAS    reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SI          reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI_NO           reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SEGUN       reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    NUMERO          reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    CADENA          reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DE_OTRO_MODO    reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_PARA        reduce using rule 73 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)


state 172

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA . ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA . ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 182


state 173

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 183


state 174

    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA . ID

    ID              shift and go to state 184


state 175

    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA . CADENA

    CADENA          shift and go to state 185


state 176

    (81) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .

    LEER            reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    PARA            reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    MIENTRAS        reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SEGUN           reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DEFINIR         reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    ESCRIBIR        reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    ID              reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI              reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_ALGORITMO   reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_FUNCION     reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    RETORNAR        reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_MIENTRAS    reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SI          reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI_NO           reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SEGUN       reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    NUMERO          reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    CADENA          reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DE_OTRO_MODO    reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_PARA        reduce using rule 81 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)


state 177

    (94) parametros -> ID COMO TIPO_DATO COMA parametros .

    PAR_DER         reduce using rule 94 (parametros -> ID COMO TIPO_DATO COMA parametros .)


state 178

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (84) tipo_retorno_funcion -> . ID
    (85) tipo_retorno_funcion -> . LOGICO
    (86) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 147
    LOGICO          shift and go to state 149
    CADENA          shift and go to state 150

    tipo_retorno_funcion           shift and go to state 186

state 179

    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (47) tipo_dato_identificador -> . ID
    (48) tipo_dato_identificador -> . NUMERO
    (49) tipo_dato_identificador -> . CADENA

    ID              shift and go to state 51
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 53

    tipo_dato_identificador        shift and go to state 187

state 180

    (100) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 100 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 181

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO . HACER sentencias FIN_PARA

    HACER           shift and go to state 188


state 182

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID . COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID . COMA ID COMO TIPO_DATO

    COMO            shift and go to state 190
    COMA            shift and go to state 189


state 183

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)


state 184

    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .

    LEER            reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    PARA            reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    MIENTRAS        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SEGUN           reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    DEFINIR         reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    ESCRIBIR        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    ID              reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SI              reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    RETORNAR        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_SI          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SI_NO           reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    NUMERO          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    CADENA          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_PARA        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)


state 185

    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .

    LEER            reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    PARA            reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    MIENTRAS        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SEGUN           reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    DEFINIR         reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    ESCRIBIR        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    ID              reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SI              reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    RETORNAR        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_SI          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SI_NO           reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    NUMERO          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    CADENA          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_PARA        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)


state 186

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 191


state 187

    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER

    PAR_DER         shift and go to state 192


state 188

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER . sentencias FIN_PARA
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (73) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (78) multiple_si -> . si multiple_si
    (79) multiple_si -> . si_no
    (95) llamar_funciones -> . llamar_funcion llamar_funciones
    (96) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (80) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (81) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (97) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (98) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (99) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (100) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (101) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    MIENTRAS        shift and go to state 32
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 39

    sentencias                     shift and go to state 193
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36

state 189

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA . ID COMO TIPO_DATO

    ID              shift and go to state 194


state 190

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 195


state 191

    (92) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 92 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 92 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 192

    (101) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 101 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 193

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias . FIN_PARA

    FIN_PARA        shift and go to state 196


state 194

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID . COMO TIPO_DATO

    COMO            shift and go to state 197


state 195

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)


state 196

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .

    LEER            reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    PARA            reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    MIENTRAS        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SEGUN           reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DEFINIR         reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    ESCRIBIR        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    ID              reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI              reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_ALGORITMO   reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_FUNCION     reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    RETORNAR        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_MIENTRAS    reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SI          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI_NO           reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SEGUN       reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    NUMERO          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    CADENA          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DE_OTRO_MODO    reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_PARA        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)


state 197

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 198


state 198

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 68 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 69 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 69 resolved as shift
WARNING: shift/reduce conflict for Y in state 113 resolved as shift
WARNING: shift/reduce conflict for O in state 113 resolved as shift
WARNING: shift/reduce conflict for NO in state 113 resolved as shift
