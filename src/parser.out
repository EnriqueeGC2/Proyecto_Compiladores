Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER
    COMMENT
    CONVERTIRANUMERO
    CONVERTIRATEXTO
    COR_DER
    COR_IZQ
    ENTERO
    FALSE
    FIN_PROCEDIMIENTO
    FIN_SI_NO
    IGUAL_A
    LLAVE_DER
    LLAVE_IZQ
    TRUE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ALGORITMO cuerpo FIN_ALGORITMO
Rule 2     programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO
Rule 3     cuerpo -> sentencias
Rule 4     sentencias -> sentencia sentencias
Rule 5     sentencias -> sentencia
Rule 6     sentencia -> posible_declaracion_variable
Rule 7     sentencia -> estructura_escribir
Rule 8     sentencia -> leer
Rule 9     sentencia -> asignaciones
Rule 10    sentencia -> para
Rule 11    sentencia -> mientras
Rule 12    sentencia -> segun
Rule 13    sentencia -> multiple_si
Rule 14    sentencia -> llamar_funciones
Rule 15    posible_declaracion_variable -> declaracion_variable
Rule 16    posible_declaracion_variable -> multiple_declaracion_variable
Rule 17    declaracion_variable -> DEFINIR ID COMO TIPO_DATO
Rule 18    multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO
Rule 19    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
Rule 20    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 21    multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 22    asignaciones -> asignacion
Rule 23    asignaciones -> asignacion_con_operacion
Rule 24    asignacion -> ID ASIGNAR tipo_dato_identificador
Rule 25    asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas
Rule 26    estructura_escribir -> escribir
Rule 27    estructura_escribir -> escribir_cadena_id
Rule 28    estructura_escribir -> escribir_cadena_id_cadena
Rule 29    estructura_escribir -> escribir_cadena_id_id
Rule 30    escribir -> ESCRIBIR CADENA
Rule 31    escribir -> ESCRIBIR ID
Rule 32    escribir -> ESCRIBIR NUMERO
Rule 33    escribir_cadena_id -> ESCRIBIR CADENA COMA ID
Rule 34    escribir_cadena_id -> ESCRIBIR ID COMA CADENA
Rule 35    escribir_cadena_id -> ESCRIBIR ID COMA ID
Rule 36    escribir_cadena_id -> ESCRIBIR ID COMA NUMERO
Rule 37    escribir_cadena_id -> ESCRIBIR NUMERO COMA ID
Rule 38    escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA
Rule 39    escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID
Rule 40    escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
Rule 41    escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
Rule 42    leer -> LEER ID
Rule 43    para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
Rule 44    mientras -> mientras_declaraciones mientras
Rule 45    mientras -> mientras_declaraciones
Rule 46    mientras_declaraciones -> mientras_v1
Rule 47    mientras_declaraciones -> mientras_v2
Rule 48    mientras_declaraciones -> mientras_v3
Rule 49    mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
Rule 50    mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
Rule 51    mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS
Rule 52    expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador
Rule 53    expresion_logica -> expresion_logica operador_logico expresion_logica
Rule 54    tipo_dato_identificador -> ID
Rule 55    tipo_dato_identificador -> NUMERO
Rule 56    tipo_dato_identificador -> CADENA
Rule 57    tipo_dato_identificador -> REAL
Rule 58    operador_logico -> Y
Rule 59    operador_logico -> O
Rule 60    operador_logico -> NO
Rule 61    operador_relacional -> ES_MAYOR_QUE
Rule 62    operador_relacional -> ES_MENOR_QUE
Rule 63    operador_relacional -> ES_IGUAL_QUE
Rule 64    operador_relacional -> ES_MAYOR_O_IGUAL_QUE
Rule 65    operador_relacional -> ES_MENOR_O_IGUAL_QUE
Rule 66    operador_relacional -> ES_DISTINTO_QUE
Rule 67    operaciones_matematicas -> operacion_matematica
Rule 68    operaciones_matematicas -> operacion_matematica_parentesis
Rule 69    operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica
Rule 70    operaciones_matematicas -> operacion_matematica operaciones_matematicas
Rule 71    operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador
Rule 72    operador_aritmetico -> MAS
Rule 73    operador_aritmetico -> MENOS
Rule 74    operador_aritmetico -> POR
Rule 75    operador_aritmetico -> DIVIDIDO
Rule 76    operador_aritmetico -> ELEVADO_A
Rule 77    operador_aritmetico -> RESIDUO
Rule 78    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER
Rule 79    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
Rule 80    operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER
Rule 81    segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
Rule 82    casos -> caso casos
Rule 83    casos -> caso
Rule 84    caso -> NUMERO DOS_PUN sentencias
Rule 85    caso -> CADENA DOS_PUN sentencias
Rule 86    multiple_si -> si multiple_si
Rule 87    multiple_si -> si_no
Rule 88    si -> SI expresion_logica ENTONCES sentencias FIN_SI
Rule 89    si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
Rule 90    cuerpo_funcion -> sentencias_funcion
Rule 91    sentencias_funcion -> sentencia_funcion sentencias_funcion
Rule 92    sentencias_funcion -> sentencia_funcion
Rule 93    sentencia_funcion -> posible_declaracion_variable_funcion
Rule 94    sentencia_funcion -> estructura_escribir
Rule 95    sentencia_funcion -> leer
Rule 96    sentencia_funcion -> asignaciones
Rule 97    sentencia_funcion -> para
Rule 98    sentencia_funcion -> mientras
Rule 99    sentencia_funcion -> segun
Rule 100   sentencia_funcion -> multiple_si
Rule 101   sentencia_funcion -> llamar_funciones
Rule 102   posible_declaracion_variable_funcion -> declaracion_variable_funcion
Rule 103   posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion
Rule 104   declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO
Rule 105   multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO
Rule 106   multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
Rule 107   multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 108   multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
Rule 109   funciones -> funcion funciones
Rule 110   funciones -> funcion
Rule 111   tipo_retorno_funcion -> ID
Rule 112   tipo_retorno_funcion -> LOGICO
Rule 113   tipo_retorno_funcion -> CADENA
Rule 114   funcion -> funcion_sin_retorno
Rule 115   funcion -> funcion_con_retorno
Rule 116   funcion -> funcion_con_parametros_con_retorno
Rule 117   funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
Rule 118   funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 119   funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
Rule 120   parametros -> ID
Rule 121   parametros -> ID COMA parametros
Rule 122   llamar_funciones -> llamar_funcion llamar_funciones
Rule 123   llamar_funciones -> llamar_funcion
Rule 124   llamar_funcion -> ID PAR_IZQ PAR_DER
Rule 125   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER
Rule 126   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 127   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
Rule 128   llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

Terminals, with rules where they appear

ALGORITMO            : 1 2
ASIGNAR              : 24 25
CADENA               : 30 33 34 38 38 39 40 40 41 41 56 85 113
CARACTER             : 
COMA                 : 18 19 19 20 20 20 21 21 21 21 33 34 35 36 37 38 38 39 39 40 40 40 41 41 41 105 106 106 107 107 107 108 108 108 108 121 126 127 127 128 128 128
COMMENT              : 
COMO                 : 17 18 19 20 21 104 105 106 107 108
CONVERTIRANUMERO     : 
CONVERTIRATEXTO      : 
CON_PASO             : 43
COR_DER              : 
COR_IZQ              : 
DEFINIR              : 17 18 19 20 21 104 105 106 107 108
DESDE                : 43
DE_OTRO_MODO         : 81
DIVIDIDO             : 75
DOS_PUN              : 84 85
ELEVADO_A            : 76
ENTERO               : 
ENTONCES             : 88 89
ESCRIBIR             : 30 31 32 33 34 35 36 37 38 39 40 41
ES_DISTINTO_QUE      : 66
ES_IGUAL_QUE         : 63
ES_MAYOR_O_IGUAL_QUE : 64
ES_MAYOR_QUE         : 61
ES_MENOR_O_IGUAL_QUE : 65
ES_MENOR_QUE         : 62
FALSE                : 
FIN_ALGORITMO        : 1 2
FIN_FUNCION          : 117 118 119
FIN_MIENTRAS         : 49 50 51
FIN_PARA             : 43
FIN_PROCEDIMIENTO    : 
FIN_SEGUN            : 81
FIN_SI               : 88 89
FIN_SI_NO            : 
FUNCION              : 117 118 119
HACER                : 43 49 50 50 51 81
HASTA                : 43
ID                   : 17 18 18 19 19 19 20 20 20 20 21 21 21 21 21 24 25 31 33 34 35 35 36 37 38 39 39 40 40 41 41 42 43 54 81 104 105 105 106 106 106 107 107 107 107 108 108 108 108 108 111 117 118 119 120 121 124 125 126 127 128
IGUAL_A              : 
LEER                 : 42
LLAVE_DER            : 
LLAVE_IZQ            : 
LOGICO               : 51 112
MAS                  : 72
MENOS                : 73
MIENTRAS             : 49 50 50 51
NO                   : 60
NUMERO               : 32 36 37 43 43 43 55 84
O                    : 59
PARA                 : 43
PAR_DER              : 78 79 80 119 124 125 126 127 128
PAR_IZQ              : 78 79 80 119 124 125 126 127 128
POR                  : 74
PUN_Y_COM            : 117 118 119
REAL                 : 57
RESIDUO              : 77
RETORNAR             : 118 119
SEGUN                : 81
SI                   : 88 89
SI_NO                : 89
TIPO_DATO            : 17 18 19 20 21 104 105 106 107 108
TRUE                 : 
Y                    : 58
error                : 

Nonterminals, with rules where they appear

asignacion           : 22
asignacion_con_operacion : 23
asignaciones         : 9 96
caso                 : 82 83
casos                : 81 82
cuerpo               : 1 2
cuerpo_funcion       : 117 118 119
declaracion_variable : 15
declaracion_variable_funcion : 102
escribir             : 26
escribir_cadena_id   : 27
escribir_cadena_id_cadena : 28
escribir_cadena_id_id : 29
estructura_escribir  : 7 94
expresion_logica     : 49 50 50 53 53 88 89
funcion              : 109 110
funcion_con_parametros_con_retorno : 116
funcion_con_retorno  : 115
funcion_sin_retorno  : 114
funciones            : 2 109
leer                 : 8 95
llamar_funcion       : 122 123
llamar_funciones     : 14 101 122
mientras             : 11 44 98
mientras_declaraciones : 44 45
mientras_v1          : 46
mientras_v2          : 47
mientras_v3          : 48
multiple_declaracion_variable : 16
multiple_declaracion_variable_funcion : 103
multiple_si          : 13 86 100
operacion_matematica : 67 69 70 78 79
operacion_matematica_parentesis : 68 69 80
operaciones_matematicas : 25 70
operador_aritmetico  : 71 79
operador_logico      : 53
operador_relacional  : 52
para                 : 10 97
parametros           : 119 121
posible_declaracion_variable : 6
posible_declaracion_variable_funcion : 93
programa             : 0
segun                : 12 99
sentencia            : 4 5
sentencia_funcion    : 91 92
sentencias           : 3 4 43 49 50 50 51 81 84 85 88 89 89
sentencias_funcion   : 90 91
si                   : 86
si_no                : 87
tipo_dato_identificador : 24 52 52 71 71 79 125 126 126 127 127 127 128 128 128 128
tipo_retorno_funcion : 118 119

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ALGORITMO cuerpo FIN_ALGORITMO
    (2) programa -> . funciones ALGORITMO cuerpo FIN_ALGORITMO
    (109) funciones -> . funcion funciones
    (110) funciones -> . funcion
    (114) funcion -> . funcion_sin_retorno
    (115) funcion -> . funcion_con_retorno
    (116) funcion -> . funcion_con_parametros_con_retorno
    (117) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (118) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (119) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       shift and go to state 2
    FUNCION         shift and go to state 8

    programa                       shift and go to state 1
    funciones                      shift and go to state 3
    funcion                        shift and go to state 4
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    cuerpo                         shift and go to state 9
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 3

    (2) programa -> funciones . ALGORITMO cuerpo FIN_ALGORITMO

    ALGORITMO       shift and go to state 44


state 4

    (109) funciones -> funcion . funciones
    (110) funciones -> funcion .
    (109) funciones -> . funcion funciones
    (110) funciones -> . funcion
    (114) funcion -> . funcion_sin_retorno
    (115) funcion -> . funcion_con_retorno
    (116) funcion -> . funcion_con_parametros_con_retorno
    (117) funcion_sin_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (118) funcion_con_retorno -> . FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (119) funcion_con_parametros_con_retorno -> . FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ALGORITMO       reduce using rule 110 (funciones -> funcion .)
    FUNCION         shift and go to state 8

    funcion                        shift and go to state 4
    funciones                      shift and go to state 45
    funcion_sin_retorno            shift and go to state 5
    funcion_con_retorno            shift and go to state 6
    funcion_con_parametros_con_retorno shift and go to state 7

state 5

    (114) funcion -> funcion_sin_retorno .

    FUNCION         reduce using rule 114 (funcion -> funcion_sin_retorno .)
    ALGORITMO       reduce using rule 114 (funcion -> funcion_sin_retorno .)


state 6

    (115) funcion -> funcion_con_retorno .

    FUNCION         reduce using rule 115 (funcion -> funcion_con_retorno .)
    ALGORITMO       reduce using rule 115 (funcion -> funcion_con_retorno .)


state 7

    (116) funcion -> funcion_con_parametros_con_retorno .

    FUNCION         reduce using rule 116 (funcion -> funcion_con_parametros_con_retorno .)
    ALGORITMO       reduce using rule 116 (funcion -> funcion_con_parametros_con_retorno .)


state 8

    (117) funcion_sin_retorno -> FUNCION . ID PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (118) funcion_con_retorno -> FUNCION . ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (119) funcion_con_parametros_con_retorno -> FUNCION . ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    ID              shift and go to state 46


state 9

    (1) programa -> ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 47


state 10

    (3) cuerpo -> sentencias .

    FIN_ALGORITMO   reduce using rule 3 (cuerpo -> sentencias .)


state 11

    (4) sentencias -> sentencia . sentencias
    (5) sentencias -> sentencia .
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

  ! shift/reduce conflict for MIENTRAS resolved as shift
    FIN_ALGORITMO   reduce using rule 5 (sentencias -> sentencia .)
    FIN_SI          reduce using rule 5 (sentencias -> sentencia .)
    SI_NO           reduce using rule 5 (sentencias -> sentencia .)
    FIN_MIENTRAS    reduce using rule 5 (sentencias -> sentencia .)
    FIN_SEGUN       reduce using rule 5 (sentencias -> sentencia .)
    NUMERO          reduce using rule 5 (sentencias -> sentencia .)
    CADENA          reduce using rule 5 (sentencias -> sentencia .)
    DE_OTRO_MODO    reduce using rule 5 (sentencias -> sentencia .)
    FIN_PARA        reduce using rule 5 (sentencias -> sentencia .)
    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

  ! MIENTRAS        [ reduce using rule 5 (sentencias -> sentencia .) ]

    sentencia                      shift and go to state 11
    sentencias                     shift and go to state 48
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 12

    (6) sentencia -> posible_declaracion_variable .

    LEER            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    PARA            reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SEGUN           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DEFINIR         reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    ESCRIBIR        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    ID              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI              reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    MIENTRAS        reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SI          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    SI_NO           reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_SEGUN       reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    NUMERO          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    CADENA          reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 6 (sentencia -> posible_declaracion_variable .)
    FIN_PARA        reduce using rule 6 (sentencia -> posible_declaracion_variable .)


state 13

    (7) sentencia -> estructura_escribir .

    LEER            reduce using rule 7 (sentencia -> estructura_escribir .)
    PARA            reduce using rule 7 (sentencia -> estructura_escribir .)
    SEGUN           reduce using rule 7 (sentencia -> estructura_escribir .)
    DEFINIR         reduce using rule 7 (sentencia -> estructura_escribir .)
    ESCRIBIR        reduce using rule 7 (sentencia -> estructura_escribir .)
    ID              reduce using rule 7 (sentencia -> estructura_escribir .)
    SI              reduce using rule 7 (sentencia -> estructura_escribir .)
    MIENTRAS        reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_ALGORITMO   reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SI          reduce using rule 7 (sentencia -> estructura_escribir .)
    SI_NO           reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_MIENTRAS    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_SEGUN       reduce using rule 7 (sentencia -> estructura_escribir .)
    NUMERO          reduce using rule 7 (sentencia -> estructura_escribir .)
    CADENA          reduce using rule 7 (sentencia -> estructura_escribir .)
    DE_OTRO_MODO    reduce using rule 7 (sentencia -> estructura_escribir .)
    FIN_PARA        reduce using rule 7 (sentencia -> estructura_escribir .)


state 14

    (8) sentencia -> leer .

    LEER            reduce using rule 8 (sentencia -> leer .)
    PARA            reduce using rule 8 (sentencia -> leer .)
    SEGUN           reduce using rule 8 (sentencia -> leer .)
    DEFINIR         reduce using rule 8 (sentencia -> leer .)
    ESCRIBIR        reduce using rule 8 (sentencia -> leer .)
    ID              reduce using rule 8 (sentencia -> leer .)
    SI              reduce using rule 8 (sentencia -> leer .)
    MIENTRAS        reduce using rule 8 (sentencia -> leer .)
    FIN_ALGORITMO   reduce using rule 8 (sentencia -> leer .)
    FIN_SI          reduce using rule 8 (sentencia -> leer .)
    SI_NO           reduce using rule 8 (sentencia -> leer .)
    FIN_MIENTRAS    reduce using rule 8 (sentencia -> leer .)
    FIN_SEGUN       reduce using rule 8 (sentencia -> leer .)
    NUMERO          reduce using rule 8 (sentencia -> leer .)
    CADENA          reduce using rule 8 (sentencia -> leer .)
    DE_OTRO_MODO    reduce using rule 8 (sentencia -> leer .)
    FIN_PARA        reduce using rule 8 (sentencia -> leer .)


state 15

    (9) sentencia -> asignaciones .

    LEER            reduce using rule 9 (sentencia -> asignaciones .)
    PARA            reduce using rule 9 (sentencia -> asignaciones .)
    SEGUN           reduce using rule 9 (sentencia -> asignaciones .)
    DEFINIR         reduce using rule 9 (sentencia -> asignaciones .)
    ESCRIBIR        reduce using rule 9 (sentencia -> asignaciones .)
    ID              reduce using rule 9 (sentencia -> asignaciones .)
    SI              reduce using rule 9 (sentencia -> asignaciones .)
    MIENTRAS        reduce using rule 9 (sentencia -> asignaciones .)
    FIN_ALGORITMO   reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SI          reduce using rule 9 (sentencia -> asignaciones .)
    SI_NO           reduce using rule 9 (sentencia -> asignaciones .)
    FIN_MIENTRAS    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_SEGUN       reduce using rule 9 (sentencia -> asignaciones .)
    NUMERO          reduce using rule 9 (sentencia -> asignaciones .)
    CADENA          reduce using rule 9 (sentencia -> asignaciones .)
    DE_OTRO_MODO    reduce using rule 9 (sentencia -> asignaciones .)
    FIN_PARA        reduce using rule 9 (sentencia -> asignaciones .)


state 16

    (10) sentencia -> para .

    LEER            reduce using rule 10 (sentencia -> para .)
    PARA            reduce using rule 10 (sentencia -> para .)
    SEGUN           reduce using rule 10 (sentencia -> para .)
    DEFINIR         reduce using rule 10 (sentencia -> para .)
    ESCRIBIR        reduce using rule 10 (sentencia -> para .)
    ID              reduce using rule 10 (sentencia -> para .)
    SI              reduce using rule 10 (sentencia -> para .)
    MIENTRAS        reduce using rule 10 (sentencia -> para .)
    FIN_ALGORITMO   reduce using rule 10 (sentencia -> para .)
    FIN_SI          reduce using rule 10 (sentencia -> para .)
    SI_NO           reduce using rule 10 (sentencia -> para .)
    FIN_MIENTRAS    reduce using rule 10 (sentencia -> para .)
    FIN_SEGUN       reduce using rule 10 (sentencia -> para .)
    NUMERO          reduce using rule 10 (sentencia -> para .)
    CADENA          reduce using rule 10 (sentencia -> para .)
    DE_OTRO_MODO    reduce using rule 10 (sentencia -> para .)
    FIN_PARA        reduce using rule 10 (sentencia -> para .)


state 17

    (11) sentencia -> mientras .

    LEER            reduce using rule 11 (sentencia -> mientras .)
    PARA            reduce using rule 11 (sentencia -> mientras .)
    SEGUN           reduce using rule 11 (sentencia -> mientras .)
    DEFINIR         reduce using rule 11 (sentencia -> mientras .)
    ESCRIBIR        reduce using rule 11 (sentencia -> mientras .)
    ID              reduce using rule 11 (sentencia -> mientras .)
    SI              reduce using rule 11 (sentencia -> mientras .)
    MIENTRAS        reduce using rule 11 (sentencia -> mientras .)
    FIN_ALGORITMO   reduce using rule 11 (sentencia -> mientras .)
    FIN_SI          reduce using rule 11 (sentencia -> mientras .)
    SI_NO           reduce using rule 11 (sentencia -> mientras .)
    FIN_MIENTRAS    reduce using rule 11 (sentencia -> mientras .)
    FIN_SEGUN       reduce using rule 11 (sentencia -> mientras .)
    NUMERO          reduce using rule 11 (sentencia -> mientras .)
    CADENA          reduce using rule 11 (sentencia -> mientras .)
    DE_OTRO_MODO    reduce using rule 11 (sentencia -> mientras .)
    FIN_PARA        reduce using rule 11 (sentencia -> mientras .)


state 18

    (12) sentencia -> segun .

    LEER            reduce using rule 12 (sentencia -> segun .)
    PARA            reduce using rule 12 (sentencia -> segun .)
    SEGUN           reduce using rule 12 (sentencia -> segun .)
    DEFINIR         reduce using rule 12 (sentencia -> segun .)
    ESCRIBIR        reduce using rule 12 (sentencia -> segun .)
    ID              reduce using rule 12 (sentencia -> segun .)
    SI              reduce using rule 12 (sentencia -> segun .)
    MIENTRAS        reduce using rule 12 (sentencia -> segun .)
    FIN_ALGORITMO   reduce using rule 12 (sentencia -> segun .)
    FIN_SI          reduce using rule 12 (sentencia -> segun .)
    SI_NO           reduce using rule 12 (sentencia -> segun .)
    FIN_MIENTRAS    reduce using rule 12 (sentencia -> segun .)
    FIN_SEGUN       reduce using rule 12 (sentencia -> segun .)
    NUMERO          reduce using rule 12 (sentencia -> segun .)
    CADENA          reduce using rule 12 (sentencia -> segun .)
    DE_OTRO_MODO    reduce using rule 12 (sentencia -> segun .)
    FIN_PARA        reduce using rule 12 (sentencia -> segun .)


state 19

    (13) sentencia -> multiple_si .

    LEER            reduce using rule 13 (sentencia -> multiple_si .)
    PARA            reduce using rule 13 (sentencia -> multiple_si .)
    SEGUN           reduce using rule 13 (sentencia -> multiple_si .)
    DEFINIR         reduce using rule 13 (sentencia -> multiple_si .)
    ESCRIBIR        reduce using rule 13 (sentencia -> multiple_si .)
    ID              reduce using rule 13 (sentencia -> multiple_si .)
    SI              reduce using rule 13 (sentencia -> multiple_si .)
    MIENTRAS        reduce using rule 13 (sentencia -> multiple_si .)
    FIN_ALGORITMO   reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SI          reduce using rule 13 (sentencia -> multiple_si .)
    SI_NO           reduce using rule 13 (sentencia -> multiple_si .)
    FIN_MIENTRAS    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_SEGUN       reduce using rule 13 (sentencia -> multiple_si .)
    NUMERO          reduce using rule 13 (sentencia -> multiple_si .)
    CADENA          reduce using rule 13 (sentencia -> multiple_si .)
    DE_OTRO_MODO    reduce using rule 13 (sentencia -> multiple_si .)
    FIN_PARA        reduce using rule 13 (sentencia -> multiple_si .)


state 20

    (14) sentencia -> llamar_funciones .

    LEER            reduce using rule 14 (sentencia -> llamar_funciones .)
    PARA            reduce using rule 14 (sentencia -> llamar_funciones .)
    SEGUN           reduce using rule 14 (sentencia -> llamar_funciones .)
    DEFINIR         reduce using rule 14 (sentencia -> llamar_funciones .)
    ESCRIBIR        reduce using rule 14 (sentencia -> llamar_funciones .)
    ID              reduce using rule 14 (sentencia -> llamar_funciones .)
    SI              reduce using rule 14 (sentencia -> llamar_funciones .)
    MIENTRAS        reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SI          reduce using rule 14 (sentencia -> llamar_funciones .)
    SI_NO           reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_SEGUN       reduce using rule 14 (sentencia -> llamar_funciones .)
    NUMERO          reduce using rule 14 (sentencia -> llamar_funciones .)
    CADENA          reduce using rule 14 (sentencia -> llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 14 (sentencia -> llamar_funciones .)
    FIN_PARA        reduce using rule 14 (sentencia -> llamar_funciones .)


state 21

    (15) posible_declaracion_variable -> declaracion_variable .

    LEER            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    PARA            reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SEGUN           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DEFINIR         reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    ESCRIBIR        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    ID              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI              reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    MIENTRAS        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SI          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    SI_NO           reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_SEGUN       reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    NUMERO          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    CADENA          reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)
    FIN_PARA        reduce using rule 15 (posible_declaracion_variable -> declaracion_variable .)


state 22

    (16) posible_declaracion_variable -> multiple_declaracion_variable .

    LEER            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    PARA            reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SEGUN           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DEFINIR         reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    ESCRIBIR        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    ID              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI              reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    MIENTRAS        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_ALGORITMO   reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SI          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    SI_NO           reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_MIENTRAS    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_SEGUN       reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    NUMERO          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    CADENA          reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    DE_OTRO_MODO    reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)
    FIN_PARA        reduce using rule 16 (posible_declaracion_variable -> multiple_declaracion_variable .)


state 23

    (26) estructura_escribir -> escribir .

    LEER            reduce using rule 26 (estructura_escribir -> escribir .)
    PARA            reduce using rule 26 (estructura_escribir -> escribir .)
    SEGUN           reduce using rule 26 (estructura_escribir -> escribir .)
    DEFINIR         reduce using rule 26 (estructura_escribir -> escribir .)
    ESCRIBIR        reduce using rule 26 (estructura_escribir -> escribir .)
    ID              reduce using rule 26 (estructura_escribir -> escribir .)
    SI              reduce using rule 26 (estructura_escribir -> escribir .)
    MIENTRAS        reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_ALGORITMO   reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_SI          reduce using rule 26 (estructura_escribir -> escribir .)
    SI_NO           reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_MIENTRAS    reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_SEGUN       reduce using rule 26 (estructura_escribir -> escribir .)
    NUMERO          reduce using rule 26 (estructura_escribir -> escribir .)
    CADENA          reduce using rule 26 (estructura_escribir -> escribir .)
    DE_OTRO_MODO    reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_PARA        reduce using rule 26 (estructura_escribir -> escribir .)
    FIN_FUNCION     reduce using rule 26 (estructura_escribir -> escribir .)
    RETORNAR        reduce using rule 26 (estructura_escribir -> escribir .)


state 24

    (27) estructura_escribir -> escribir_cadena_id .

    LEER            reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    PARA            reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SEGUN           reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    DEFINIR         reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    ESCRIBIR        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    ID              reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SI              reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    MIENTRAS        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_ALGORITMO   reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_SI          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    SI_NO           reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_MIENTRAS    reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_SEGUN       reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    NUMERO          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    CADENA          reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    DE_OTRO_MODO    reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_PARA        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    FIN_FUNCION     reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)
    RETORNAR        reduce using rule 27 (estructura_escribir -> escribir_cadena_id .)


state 25

    (28) estructura_escribir -> escribir_cadena_id_cadena .

    LEER            reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    PARA            reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SEGUN           reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    DEFINIR         reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    ESCRIBIR        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    ID              reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SI              reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    MIENTRAS        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_ALGORITMO   reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_SI          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    SI_NO           reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_MIENTRAS    reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_SEGUN       reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    NUMERO          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    CADENA          reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    DE_OTRO_MODO    reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_PARA        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    FIN_FUNCION     reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)
    RETORNAR        reduce using rule 28 (estructura_escribir -> escribir_cadena_id_cadena .)


state 26

    (29) estructura_escribir -> escribir_cadena_id_id .

    LEER            reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    PARA            reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SEGUN           reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    DEFINIR         reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    ESCRIBIR        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    ID              reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SI              reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    MIENTRAS        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_ALGORITMO   reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_SI          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    SI_NO           reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_MIENTRAS    reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_SEGUN       reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    NUMERO          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    CADENA          reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    DE_OTRO_MODO    reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_PARA        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    FIN_FUNCION     reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)
    RETORNAR        reduce using rule 29 (estructura_escribir -> escribir_cadena_id_id .)


state 27

    (42) leer -> LEER . ID

    ID              shift and go to state 49


state 28

    (24) asignacion -> ID . ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> ID . ASIGNAR operaciones_matematicas
    (124) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (125) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    ASIGNAR         shift and go to state 50
    PAR_IZQ         shift and go to state 51


state 29

    (22) asignaciones -> asignacion .

    LEER            reduce using rule 22 (asignaciones -> asignacion .)
    PARA            reduce using rule 22 (asignaciones -> asignacion .)
    SEGUN           reduce using rule 22 (asignaciones -> asignacion .)
    DEFINIR         reduce using rule 22 (asignaciones -> asignacion .)
    ESCRIBIR        reduce using rule 22 (asignaciones -> asignacion .)
    ID              reduce using rule 22 (asignaciones -> asignacion .)
    SI              reduce using rule 22 (asignaciones -> asignacion .)
    MIENTRAS        reduce using rule 22 (asignaciones -> asignacion .)
    FIN_ALGORITMO   reduce using rule 22 (asignaciones -> asignacion .)
    FIN_SI          reduce using rule 22 (asignaciones -> asignacion .)
    SI_NO           reduce using rule 22 (asignaciones -> asignacion .)
    FIN_MIENTRAS    reduce using rule 22 (asignaciones -> asignacion .)
    FIN_SEGUN       reduce using rule 22 (asignaciones -> asignacion .)
    NUMERO          reduce using rule 22 (asignaciones -> asignacion .)
    CADENA          reduce using rule 22 (asignaciones -> asignacion .)
    DE_OTRO_MODO    reduce using rule 22 (asignaciones -> asignacion .)
    FIN_PARA        reduce using rule 22 (asignaciones -> asignacion .)
    FIN_FUNCION     reduce using rule 22 (asignaciones -> asignacion .)
    RETORNAR        reduce using rule 22 (asignaciones -> asignacion .)


state 30

    (23) asignaciones -> asignacion_con_operacion .

    LEER            reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    PARA            reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SEGUN           reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    DEFINIR         reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    ESCRIBIR        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    ID              reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SI              reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    MIENTRAS        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_ALGORITMO   reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_SI          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    SI_NO           reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_MIENTRAS    reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_SEGUN       reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    NUMERO          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    CADENA          reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    DE_OTRO_MODO    reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_PARA        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    FIN_FUNCION     reduce using rule 23 (asignaciones -> asignacion_con_operacion .)
    RETORNAR        reduce using rule 23 (asignaciones -> asignacion_con_operacion .)


state 31

    (43) para -> PARA . ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    ID              shift and go to state 52


state 32

    (44) mientras -> mientras_declaraciones . mientras
    (45) mientras -> mientras_declaraciones .
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

  ! shift/reduce conflict for MIENTRAS resolved as shift
    LEER            reduce using rule 45 (mientras -> mientras_declaraciones .)
    PARA            reduce using rule 45 (mientras -> mientras_declaraciones .)
    SEGUN           reduce using rule 45 (mientras -> mientras_declaraciones .)
    DEFINIR         reduce using rule 45 (mientras -> mientras_declaraciones .)
    ESCRIBIR        reduce using rule 45 (mientras -> mientras_declaraciones .)
    ID              reduce using rule 45 (mientras -> mientras_declaraciones .)
    SI              reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_ALGORITMO   reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_SI          reduce using rule 45 (mientras -> mientras_declaraciones .)
    SI_NO           reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_MIENTRAS    reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_SEGUN       reduce using rule 45 (mientras -> mientras_declaraciones .)
    NUMERO          reduce using rule 45 (mientras -> mientras_declaraciones .)
    CADENA          reduce using rule 45 (mientras -> mientras_declaraciones .)
    DE_OTRO_MODO    reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_PARA        reduce using rule 45 (mientras -> mientras_declaraciones .)
    FIN_FUNCION     reduce using rule 45 (mientras -> mientras_declaraciones .)
    RETORNAR        reduce using rule 45 (mientras -> mientras_declaraciones .)
    MIENTRAS        shift and go to state 43

  ! MIENTRAS        [ reduce using rule 45 (mientras -> mientras_declaraciones .) ]

    mientras_declaraciones         shift and go to state 32
    mientras                       shift and go to state 53
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 33

    (81) segun -> SEGUN . ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    ID              shift and go to state 54


state 34

    (86) multiple_si -> si . multiple_si
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI

    SI              shift and go to state 42

    si                             shift and go to state 34
    multiple_si                    shift and go to state 55
    si_no                          shift and go to state 35

state 35

    (87) multiple_si -> si_no .

    LEER            reduce using rule 87 (multiple_si -> si_no .)
    PARA            reduce using rule 87 (multiple_si -> si_no .)
    SEGUN           reduce using rule 87 (multiple_si -> si_no .)
    DEFINIR         reduce using rule 87 (multiple_si -> si_no .)
    ESCRIBIR        reduce using rule 87 (multiple_si -> si_no .)
    ID              reduce using rule 87 (multiple_si -> si_no .)
    SI              reduce using rule 87 (multiple_si -> si_no .)
    MIENTRAS        reduce using rule 87 (multiple_si -> si_no .)
    FIN_ALGORITMO   reduce using rule 87 (multiple_si -> si_no .)
    FIN_SI          reduce using rule 87 (multiple_si -> si_no .)
    SI_NO           reduce using rule 87 (multiple_si -> si_no .)
    FIN_MIENTRAS    reduce using rule 87 (multiple_si -> si_no .)
    FIN_SEGUN       reduce using rule 87 (multiple_si -> si_no .)
    NUMERO          reduce using rule 87 (multiple_si -> si_no .)
    CADENA          reduce using rule 87 (multiple_si -> si_no .)
    DE_OTRO_MODO    reduce using rule 87 (multiple_si -> si_no .)
    FIN_PARA        reduce using rule 87 (multiple_si -> si_no .)
    FIN_FUNCION     reduce using rule 87 (multiple_si -> si_no .)
    RETORNAR        reduce using rule 87 (multiple_si -> si_no .)


state 36

    (122) llamar_funciones -> llamar_funcion . llamar_funciones
    (123) llamar_funciones -> llamar_funcion .
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

  ! shift/reduce conflict for ID resolved as shift
    LEER            reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    PARA            reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    SEGUN           reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    DEFINIR         reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    ESCRIBIR        reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    SI              reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    MIENTRAS        reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_ALGORITMO   reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_SI          reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    SI_NO           reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_MIENTRAS    reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_SEGUN       reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    NUMERO          reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    CADENA          reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    DE_OTRO_MODO    reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_PARA        reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    FIN_FUNCION     reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    RETORNAR        reduce using rule 123 (llamar_funciones -> llamar_funcion .)
    ID              shift and go to state 57

  ! ID              [ reduce using rule 123 (llamar_funciones -> llamar_funcion .) ]

    llamar_funcion                 shift and go to state 36
    llamar_funciones               shift and go to state 56

state 37

    (17) declaracion_variable -> DEFINIR . ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR . ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 58


state 38

    (30) escribir -> ESCRIBIR . CADENA
    (31) escribir -> ESCRIBIR . ID
    (32) escribir -> ESCRIBIR . NUMERO
    (33) escribir_cadena_id -> ESCRIBIR . CADENA COMA ID
    (34) escribir_cadena_id -> ESCRIBIR . ID COMA CADENA
    (35) escribir_cadena_id -> ESCRIBIR . ID COMA ID
    (36) escribir_cadena_id -> ESCRIBIR . ID COMA NUMERO
    (37) escribir_cadena_id -> ESCRIBIR . NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR . CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> ESCRIBIR . ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> ESCRIBIR . CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR . ID COMA CADENA COMA ID COMA CADENA

    CADENA          shift and go to state 59
    ID              shift and go to state 60
    NUMERO          shift and go to state 61


state 39

    (46) mientras_declaraciones -> mientras_v1 .

    MIENTRAS        reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    LEER            reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    PARA            reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    SEGUN           reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    DEFINIR         reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    ESCRIBIR        reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    ID              reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    SI              reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_ALGORITMO   reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_SI          reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    SI_NO           reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_MIENTRAS    reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_SEGUN       reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    NUMERO          reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    CADENA          reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    DE_OTRO_MODO    reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_PARA        reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    FIN_FUNCION     reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)
    RETORNAR        reduce using rule 46 (mientras_declaraciones -> mientras_v1 .)


state 40

    (47) mientras_declaraciones -> mientras_v2 .

    MIENTRAS        reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    LEER            reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    PARA            reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    SEGUN           reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    DEFINIR         reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    ESCRIBIR        reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    ID              reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    SI              reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_ALGORITMO   reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_SI          reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    SI_NO           reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_MIENTRAS    reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_SEGUN       reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    NUMERO          reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    CADENA          reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    DE_OTRO_MODO    reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_PARA        reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    FIN_FUNCION     reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)
    RETORNAR        reduce using rule 47 (mientras_declaraciones -> mientras_v2 .)


state 41

    (48) mientras_declaraciones -> mientras_v3 .

    MIENTRAS        reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    LEER            reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    PARA            reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    SEGUN           reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    DEFINIR         reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    ESCRIBIR        reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    ID              reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    SI              reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_ALGORITMO   reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_SI          reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    SI_NO           reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_MIENTRAS    reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_SEGUN       reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    NUMERO          reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    CADENA          reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    DE_OTRO_MODO    reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_PARA        reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    FIN_FUNCION     reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)
    RETORNAR        reduce using rule 48 (mientras_declaraciones -> mientras_v3 .)


state 42

    (88) si -> SI . expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> SI . expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (52) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (53) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    expresion_logica               shift and go to state 62
    tipo_dato_identificador        shift and go to state 63

state 43

    (49) mientras_v1 -> MIENTRAS . expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> MIENTRAS . expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> MIENTRAS . LOGICO HACER sentencias FIN_MIENTRAS
    (52) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (53) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    LOGICO          shift and go to state 69
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    expresion_logica               shift and go to state 68
    tipo_dato_identificador        shift and go to state 63

state 44

    (2) programa -> funciones ALGORITMO . cuerpo FIN_ALGORITMO
    (3) cuerpo -> . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    cuerpo                         shift and go to state 70
    sentencias                     shift and go to state 10
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 45

    (109) funciones -> funcion funciones .

    ALGORITMO       reduce using rule 109 (funciones -> funcion funciones .)


state 46

    (117) funcion_sin_retorno -> FUNCION ID . PUN_Y_COM cuerpo_funcion FIN_FUNCION
    (118) funcion_con_retorno -> FUNCION ID . PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (119) funcion_con_parametros_con_retorno -> FUNCION ID . PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 71
    PAR_IZQ         shift and go to state 72


state 47

    (1) programa -> ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 1 (programa -> ALGORITMO cuerpo FIN_ALGORITMO .)


state 48

    (4) sentencias -> sentencia sentencias .

    FIN_ALGORITMO   reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SI          reduce using rule 4 (sentencias -> sentencia sentencias .)
    SI_NO           reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_MIENTRAS    reduce using rule 4 (sentencias -> sentencia sentencias .)
    MIENTRAS        reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_SEGUN       reduce using rule 4 (sentencias -> sentencia sentencias .)
    NUMERO          reduce using rule 4 (sentencias -> sentencia sentencias .)
    CADENA          reduce using rule 4 (sentencias -> sentencia sentencias .)
    DE_OTRO_MODO    reduce using rule 4 (sentencias -> sentencia sentencias .)
    FIN_PARA        reduce using rule 4 (sentencias -> sentencia sentencias .)


state 49

    (42) leer -> LEER ID .

    LEER            reduce using rule 42 (leer -> LEER ID .)
    PARA            reduce using rule 42 (leer -> LEER ID .)
    SEGUN           reduce using rule 42 (leer -> LEER ID .)
    DEFINIR         reduce using rule 42 (leer -> LEER ID .)
    ESCRIBIR        reduce using rule 42 (leer -> LEER ID .)
    ID              reduce using rule 42 (leer -> LEER ID .)
    SI              reduce using rule 42 (leer -> LEER ID .)
    MIENTRAS        reduce using rule 42 (leer -> LEER ID .)
    FIN_ALGORITMO   reduce using rule 42 (leer -> LEER ID .)
    FIN_SI          reduce using rule 42 (leer -> LEER ID .)
    SI_NO           reduce using rule 42 (leer -> LEER ID .)
    FIN_MIENTRAS    reduce using rule 42 (leer -> LEER ID .)
    FIN_SEGUN       reduce using rule 42 (leer -> LEER ID .)
    NUMERO          reduce using rule 42 (leer -> LEER ID .)
    CADENA          reduce using rule 42 (leer -> LEER ID .)
    DE_OTRO_MODO    reduce using rule 42 (leer -> LEER ID .)
    FIN_PARA        reduce using rule 42 (leer -> LEER ID .)
    FIN_FUNCION     reduce using rule 42 (leer -> LEER ID .)
    RETORNAR        reduce using rule 42 (leer -> LEER ID .)


state 50

    (24) asignacion -> ID ASIGNAR . tipo_dato_identificador
    (25) asignacion_con_operacion -> ID ASIGNAR . operaciones_matematicas
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL
    (67) operaciones_matematicas -> . operacion_matematica
    (68) operaciones_matematicas -> . operacion_matematica_parentesis
    (69) operaciones_matematicas -> . operacion_matematica_parentesis operacion_matematica
    (70) operaciones_matematicas -> . operacion_matematica operaciones_matematicas
    (71) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (78) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (79) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (80) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67
    PAR_IZQ         shift and go to state 77

    tipo_dato_identificador        shift and go to state 73
    operaciones_matematicas        shift and go to state 74
    operacion_matematica           shift and go to state 75
    operacion_matematica_parentesis shift and go to state 76

state 51

    (124) llamar_funcion -> ID PAR_IZQ . PAR_DER
    (125) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    PAR_DER         shift and go to state 78
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 79

state 52

    (43) para -> PARA ID . DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    DESDE           shift and go to state 80


state 53

    (44) mientras -> mientras_declaraciones mientras .

    LEER            reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    PARA            reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    SEGUN           reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    DEFINIR         reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    ESCRIBIR        reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    ID              reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    SI              reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    MIENTRAS        reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_ALGORITMO   reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_SI          reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    SI_NO           reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_MIENTRAS    reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_SEGUN       reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    NUMERO          reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    CADENA          reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    DE_OTRO_MODO    reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_PARA        reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    FIN_FUNCION     reduce using rule 44 (mientras -> mientras_declaraciones mientras .)
    RETORNAR        reduce using rule 44 (mientras -> mientras_declaraciones mientras .)


state 54

    (81) segun -> SEGUN ID . HACER casos DE_OTRO_MODO sentencias FIN_SEGUN

    HACER           shift and go to state 81


state 55

    (86) multiple_si -> si multiple_si .

    LEER            reduce using rule 86 (multiple_si -> si multiple_si .)
    PARA            reduce using rule 86 (multiple_si -> si multiple_si .)
    SEGUN           reduce using rule 86 (multiple_si -> si multiple_si .)
    DEFINIR         reduce using rule 86 (multiple_si -> si multiple_si .)
    ESCRIBIR        reduce using rule 86 (multiple_si -> si multiple_si .)
    ID              reduce using rule 86 (multiple_si -> si multiple_si .)
    SI              reduce using rule 86 (multiple_si -> si multiple_si .)
    MIENTRAS        reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_ALGORITMO   reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_SI          reduce using rule 86 (multiple_si -> si multiple_si .)
    SI_NO           reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_MIENTRAS    reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_SEGUN       reduce using rule 86 (multiple_si -> si multiple_si .)
    NUMERO          reduce using rule 86 (multiple_si -> si multiple_si .)
    CADENA          reduce using rule 86 (multiple_si -> si multiple_si .)
    DE_OTRO_MODO    reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_PARA        reduce using rule 86 (multiple_si -> si multiple_si .)
    FIN_FUNCION     reduce using rule 86 (multiple_si -> si multiple_si .)
    RETORNAR        reduce using rule 86 (multiple_si -> si multiple_si .)


state 56

    (122) llamar_funciones -> llamar_funcion llamar_funciones .

    LEER            reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    PARA            reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SEGUN           reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DEFINIR         reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    ESCRIBIR        reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    ID              reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI              reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    MIENTRAS        reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_ALGORITMO   reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SI          reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    SI_NO           reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_MIENTRAS    reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_SEGUN       reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    NUMERO          reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    CADENA          reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    DE_OTRO_MODO    reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_PARA        reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    FIN_FUNCION     reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)
    RETORNAR        reduce using rule 122 (llamar_funciones -> llamar_funcion llamar_funciones .)


state 57

    (124) llamar_funcion -> ID . PAR_IZQ PAR_DER
    (125) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID . PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_IZQ         shift and go to state 51


state 58

    (17) declaracion_variable -> DEFINIR ID . COMO TIPO_DATO
    (18) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID . COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 82
    COMA            shift and go to state 83


state 59

    (30) escribir -> ESCRIBIR CADENA .
    (33) escribir_cadena_id -> ESCRIBIR CADENA . COMA ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA . COMA ID COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA . COMA ID COMA CADENA COMA ID

    LEER            reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    PARA            reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SEGUN           reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    DEFINIR         reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    ESCRIBIR        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    ID              reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SI              reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    MIENTRAS        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_ALGORITMO   reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_SI          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    SI_NO           reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_MIENTRAS    reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_SEGUN       reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    NUMERO          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    CADENA          reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    DE_OTRO_MODO    reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_PARA        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    FIN_FUNCION     reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    RETORNAR        reduce using rule 30 (escribir -> ESCRIBIR CADENA .)
    COMA            shift and go to state 84


state 60

    (31) escribir -> ESCRIBIR ID .
    (34) escribir_cadena_id -> ESCRIBIR ID . COMA CADENA
    (35) escribir_cadena_id -> ESCRIBIR ID . COMA ID
    (36) escribir_cadena_id -> ESCRIBIR ID . COMA NUMERO
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID . COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID . COMA CADENA COMA ID COMA CADENA

    LEER            reduce using rule 31 (escribir -> ESCRIBIR ID .)
    PARA            reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SEGUN           reduce using rule 31 (escribir -> ESCRIBIR ID .)
    DEFINIR         reduce using rule 31 (escribir -> ESCRIBIR ID .)
    ESCRIBIR        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    ID              reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SI              reduce using rule 31 (escribir -> ESCRIBIR ID .)
    MIENTRAS        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_ALGORITMO   reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_SI          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    SI_NO           reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_MIENTRAS    reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_SEGUN       reduce using rule 31 (escribir -> ESCRIBIR ID .)
    NUMERO          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    CADENA          reduce using rule 31 (escribir -> ESCRIBIR ID .)
    DE_OTRO_MODO    reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_PARA        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    FIN_FUNCION     reduce using rule 31 (escribir -> ESCRIBIR ID .)
    RETORNAR        reduce using rule 31 (escribir -> ESCRIBIR ID .)
    COMA            shift and go to state 85


state 61

    (32) escribir -> ESCRIBIR NUMERO .
    (37) escribir_cadena_id -> ESCRIBIR NUMERO . COMA ID

    LEER            reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    PARA            reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SEGUN           reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    DEFINIR         reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    ESCRIBIR        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    ID              reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SI              reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    MIENTRAS        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_ALGORITMO   reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_SI          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    SI_NO           reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_MIENTRAS    reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_SEGUN       reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    NUMERO          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    CADENA          reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    DE_OTRO_MODO    reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_PARA        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    FIN_FUNCION     reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    RETORNAR        reduce using rule 32 (escribir -> ESCRIBIR NUMERO .)
    COMA            shift and go to state 86


state 62

    (88) si -> SI expresion_logica . ENTONCES sentencias FIN_SI
    (89) si_no -> SI expresion_logica . ENTONCES sentencias SI_NO sentencias FIN_SI
    (53) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (58) operador_logico -> . Y
    (59) operador_logico -> . O
    (60) operador_logico -> . NO

    ENTONCES        shift and go to state 87
    Y               shift and go to state 89
    O               shift and go to state 90
    NO              shift and go to state 91

    operador_logico                shift and go to state 88

state 63

    (52) expresion_logica -> tipo_dato_identificador . operador_relacional tipo_dato_identificador
    (61) operador_relacional -> . ES_MAYOR_QUE
    (62) operador_relacional -> . ES_MENOR_QUE
    (63) operador_relacional -> . ES_IGUAL_QUE
    (64) operador_relacional -> . ES_MAYOR_O_IGUAL_QUE
    (65) operador_relacional -> . ES_MENOR_O_IGUAL_QUE
    (66) operador_relacional -> . ES_DISTINTO_QUE

    ES_MAYOR_QUE    shift and go to state 93
    ES_MENOR_QUE    shift and go to state 94
    ES_IGUAL_QUE    shift and go to state 95
    ES_MAYOR_O_IGUAL_QUE shift and go to state 96
    ES_MENOR_O_IGUAL_QUE shift and go to state 97
    ES_DISTINTO_QUE shift and go to state 98

    operador_relacional            shift and go to state 92

state 64

    (54) tipo_dato_identificador -> ID .

    ES_MAYOR_QUE    reduce using rule 54 (tipo_dato_identificador -> ID .)
    ES_MENOR_QUE    reduce using rule 54 (tipo_dato_identificador -> ID .)
    ES_IGUAL_QUE    reduce using rule 54 (tipo_dato_identificador -> ID .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 54 (tipo_dato_identificador -> ID .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 54 (tipo_dato_identificador -> ID .)
    ES_DISTINTO_QUE reduce using rule 54 (tipo_dato_identificador -> ID .)
    MAS             reduce using rule 54 (tipo_dato_identificador -> ID .)
    MENOS           reduce using rule 54 (tipo_dato_identificador -> ID .)
    POR             reduce using rule 54 (tipo_dato_identificador -> ID .)
    DIVIDIDO        reduce using rule 54 (tipo_dato_identificador -> ID .)
    ELEVADO_A       reduce using rule 54 (tipo_dato_identificador -> ID .)
    RESIDUO         reduce using rule 54 (tipo_dato_identificador -> ID .)
    LEER            reduce using rule 54 (tipo_dato_identificador -> ID .)
    PARA            reduce using rule 54 (tipo_dato_identificador -> ID .)
    SEGUN           reduce using rule 54 (tipo_dato_identificador -> ID .)
    DEFINIR         reduce using rule 54 (tipo_dato_identificador -> ID .)
    ESCRIBIR        reduce using rule 54 (tipo_dato_identificador -> ID .)
    ID              reduce using rule 54 (tipo_dato_identificador -> ID .)
    SI              reduce using rule 54 (tipo_dato_identificador -> ID .)
    MIENTRAS        reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_ALGORITMO   reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_SI          reduce using rule 54 (tipo_dato_identificador -> ID .)
    SI_NO           reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_MIENTRAS    reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_SEGUN       reduce using rule 54 (tipo_dato_identificador -> ID .)
    NUMERO          reduce using rule 54 (tipo_dato_identificador -> ID .)
    CADENA          reduce using rule 54 (tipo_dato_identificador -> ID .)
    DE_OTRO_MODO    reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_PARA        reduce using rule 54 (tipo_dato_identificador -> ID .)
    FIN_FUNCION     reduce using rule 54 (tipo_dato_identificador -> ID .)
    RETORNAR        reduce using rule 54 (tipo_dato_identificador -> ID .)
    PAR_DER         reduce using rule 54 (tipo_dato_identificador -> ID .)
    COMA            reduce using rule 54 (tipo_dato_identificador -> ID .)
    ENTONCES        reduce using rule 54 (tipo_dato_identificador -> ID .)
    Y               reduce using rule 54 (tipo_dato_identificador -> ID .)
    O               reduce using rule 54 (tipo_dato_identificador -> ID .)
    NO              reduce using rule 54 (tipo_dato_identificador -> ID .)
    HACER           reduce using rule 54 (tipo_dato_identificador -> ID .)
    PAR_IZQ         reduce using rule 54 (tipo_dato_identificador -> ID .)
    REAL            reduce using rule 54 (tipo_dato_identificador -> ID .)


state 65

    (55) tipo_dato_identificador -> NUMERO .

    ES_MAYOR_QUE    reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_QUE    reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ES_IGUAL_QUE    reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ES_DISTINTO_QUE reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    MAS             reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    MENOS           reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    POR             reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    DIVIDIDO        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ELEVADO_A       reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    RESIDUO         reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    LEER            reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    PARA            reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    SEGUN           reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    DEFINIR         reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ESCRIBIR        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ID              reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    SI              reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    MIENTRAS        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_ALGORITMO   reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_SI          reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    SI_NO           reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_MIENTRAS    reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_SEGUN       reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    NUMERO          reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    CADENA          reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    DE_OTRO_MODO    reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_PARA        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    FIN_FUNCION     reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    RETORNAR        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    PAR_DER         reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    COMA            reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    ENTONCES        reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    Y               reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    O               reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    NO              reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    HACER           reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    PAR_IZQ         reduce using rule 55 (tipo_dato_identificador -> NUMERO .)
    REAL            reduce using rule 55 (tipo_dato_identificador -> NUMERO .)


state 66

    (56) tipo_dato_identificador -> CADENA .

    ES_MAYOR_QUE    reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_QUE    reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ES_IGUAL_QUE    reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ES_DISTINTO_QUE reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    MAS             reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    MENOS           reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    POR             reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    DIVIDIDO        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ELEVADO_A       reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    RESIDUO         reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    LEER            reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    PARA            reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    SEGUN           reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    DEFINIR         reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ESCRIBIR        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ID              reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    SI              reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    MIENTRAS        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_ALGORITMO   reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_SI          reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    SI_NO           reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_MIENTRAS    reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_SEGUN       reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    NUMERO          reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    CADENA          reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    DE_OTRO_MODO    reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_PARA        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    FIN_FUNCION     reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    RETORNAR        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    PAR_DER         reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    COMA            reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    ENTONCES        reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    Y               reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    O               reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    NO              reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    HACER           reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    PAR_IZQ         reduce using rule 56 (tipo_dato_identificador -> CADENA .)
    REAL            reduce using rule 56 (tipo_dato_identificador -> CADENA .)


state 67

    (57) tipo_dato_identificador -> REAL .

    ES_MAYOR_QUE    reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ES_MENOR_QUE    reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ES_IGUAL_QUE    reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ES_MAYOR_O_IGUAL_QUE reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ES_MENOR_O_IGUAL_QUE reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ES_DISTINTO_QUE reduce using rule 57 (tipo_dato_identificador -> REAL .)
    MAS             reduce using rule 57 (tipo_dato_identificador -> REAL .)
    MENOS           reduce using rule 57 (tipo_dato_identificador -> REAL .)
    POR             reduce using rule 57 (tipo_dato_identificador -> REAL .)
    DIVIDIDO        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ELEVADO_A       reduce using rule 57 (tipo_dato_identificador -> REAL .)
    RESIDUO         reduce using rule 57 (tipo_dato_identificador -> REAL .)
    LEER            reduce using rule 57 (tipo_dato_identificador -> REAL .)
    PARA            reduce using rule 57 (tipo_dato_identificador -> REAL .)
    SEGUN           reduce using rule 57 (tipo_dato_identificador -> REAL .)
    DEFINIR         reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ESCRIBIR        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ID              reduce using rule 57 (tipo_dato_identificador -> REAL .)
    SI              reduce using rule 57 (tipo_dato_identificador -> REAL .)
    MIENTRAS        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_ALGORITMO   reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_SI          reduce using rule 57 (tipo_dato_identificador -> REAL .)
    SI_NO           reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_MIENTRAS    reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_SEGUN       reduce using rule 57 (tipo_dato_identificador -> REAL .)
    NUMERO          reduce using rule 57 (tipo_dato_identificador -> REAL .)
    CADENA          reduce using rule 57 (tipo_dato_identificador -> REAL .)
    DE_OTRO_MODO    reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_PARA        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    FIN_FUNCION     reduce using rule 57 (tipo_dato_identificador -> REAL .)
    RETORNAR        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    PAR_DER         reduce using rule 57 (tipo_dato_identificador -> REAL .)
    COMA            reduce using rule 57 (tipo_dato_identificador -> REAL .)
    ENTONCES        reduce using rule 57 (tipo_dato_identificador -> REAL .)
    Y               reduce using rule 57 (tipo_dato_identificador -> REAL .)
    O               reduce using rule 57 (tipo_dato_identificador -> REAL .)
    NO              reduce using rule 57 (tipo_dato_identificador -> REAL .)
    HACER           reduce using rule 57 (tipo_dato_identificador -> REAL .)
    PAR_IZQ         reduce using rule 57 (tipo_dato_identificador -> REAL .)
    REAL            reduce using rule 57 (tipo_dato_identificador -> REAL .)


state 68

    (49) mientras_v1 -> MIENTRAS expresion_logica . HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> MIENTRAS expresion_logica . HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (53) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (58) operador_logico -> . Y
    (59) operador_logico -> . O
    (60) operador_logico -> . NO

    HACER           shift and go to state 99
    Y               shift and go to state 89
    O               shift and go to state 90
    NO              shift and go to state 91

    operador_logico                shift and go to state 88

state 69

    (51) mientras_v3 -> MIENTRAS LOGICO . HACER sentencias FIN_MIENTRAS

    HACER           shift and go to state 100


state 70

    (2) programa -> funciones ALGORITMO cuerpo . FIN_ALGORITMO

    FIN_ALGORITMO   shift and go to state 101


state 71

    (117) funcion_sin_retorno -> FUNCION ID PUN_Y_COM . cuerpo_funcion FIN_FUNCION
    (118) funcion_con_retorno -> FUNCION ID PUN_Y_COM . cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (90) cuerpo_funcion -> . sentencias_funcion
    (91) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (92) sentencias_funcion -> . sentencia_funcion
    (93) sentencia_funcion -> . posible_declaracion_variable_funcion
    (94) sentencia_funcion -> . estructura_escribir
    (95) sentencia_funcion -> . leer
    (96) sentencia_funcion -> . asignaciones
    (97) sentencia_funcion -> . para
    (98) sentencia_funcion -> . mientras
    (99) sentencia_funcion -> . segun
    (100) sentencia_funcion -> . multiple_si
    (101) sentencia_funcion -> . llamar_funciones
    (102) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (103) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (104) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (105) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 116
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    cuerpo_funcion                 shift and go to state 102
    sentencias_funcion             shift and go to state 103
    sentencia_funcion              shift and go to state 104
    posible_declaracion_variable_funcion shift and go to state 105
    estructura_escribir            shift and go to state 106
    leer                           shift and go to state 107
    asignaciones                   shift and go to state 108
    para                           shift and go to state 109
    mientras                       shift and go to state 110
    segun                          shift and go to state 111
    multiple_si                    shift and go to state 112
    llamar_funciones               shift and go to state 113
    declaracion_variable_funcion   shift and go to state 114
    multiple_declaracion_variable_funcion shift and go to state 115
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 72

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ . parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (120) parametros -> . ID
    (121) parametros -> . ID COMA parametros

    ID              shift and go to state 117

    parametros                     shift and go to state 118

state 73

    (24) asignacion -> ID ASIGNAR tipo_dato_identificador .
    (71) operacion_matematica -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (72) operador_aritmetico -> . MAS
    (73) operador_aritmetico -> . MENOS
    (74) operador_aritmetico -> . POR
    (75) operador_aritmetico -> . DIVIDIDO
    (76) operador_aritmetico -> . ELEVADO_A
    (77) operador_aritmetico -> . RESIDUO

    LEER            reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    PARA            reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SEGUN           reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    DEFINIR         reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    ID              reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SI              reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    MIENTRAS        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SI          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    SI_NO           reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    NUMERO          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    CADENA          reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_PARA        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    RETORNAR        reduce using rule 24 (asignacion -> ID ASIGNAR tipo_dato_identificador .)
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    POR             shift and go to state 122
    DIVIDIDO        shift and go to state 123
    ELEVADO_A       shift and go to state 124
    RESIDUO         shift and go to state 125

    operador_aritmetico            shift and go to state 119

state 74

    (25) asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .

    LEER            reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    PARA            reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SEGUN           reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DEFINIR         reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    ESCRIBIR        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    ID              reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI              reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    MIENTRAS        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_ALGORITMO   reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SI          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    SI_NO           reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_MIENTRAS    reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_SEGUN       reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    NUMERO          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    CADENA          reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    DE_OTRO_MODO    reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_PARA        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    FIN_FUNCION     reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)
    RETORNAR        reduce using rule 25 (asignacion_con_operacion -> ID ASIGNAR operaciones_matematicas .)


state 75

    (67) operaciones_matematicas -> operacion_matematica .
    (70) operaciones_matematicas -> operacion_matematica . operaciones_matematicas
    (67) operaciones_matematicas -> . operacion_matematica
    (68) operaciones_matematicas -> . operacion_matematica_parentesis
    (69) operaciones_matematicas -> . operacion_matematica_parentesis operacion_matematica
    (70) operaciones_matematicas -> . operacion_matematica operaciones_matematicas
    (71) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (78) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (79) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (80) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    LEER            reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    PARA            reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    SEGUN           reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    DEFINIR         reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    ESCRIBIR        reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    SI              reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    MIENTRAS        reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_ALGORITMO   reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_SI          reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    SI_NO           reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_MIENTRAS    reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_SEGUN       reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    DE_OTRO_MODO    reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_PARA        reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    FIN_FUNCION     reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    RETORNAR        reduce using rule 67 (operaciones_matematicas -> operacion_matematica .)
    PAR_IZQ         shift and go to state 77
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

  ! ID              [ reduce using rule 67 (operaciones_matematicas -> operacion_matematica .) ]
  ! NUMERO          [ reduce using rule 67 (operaciones_matematicas -> operacion_matematica .) ]
  ! CADENA          [ reduce using rule 67 (operaciones_matematicas -> operacion_matematica .) ]

    operacion_matematica           shift and go to state 75
    operaciones_matematicas        shift and go to state 126
    operacion_matematica_parentesis shift and go to state 76
    tipo_dato_identificador        shift and go to state 127

state 76

    (68) operaciones_matematicas -> operacion_matematica_parentesis .
    (69) operaciones_matematicas -> operacion_matematica_parentesis . operacion_matematica
    (71) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    LEER            reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    PARA            reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SEGUN           reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    DEFINIR         reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    ESCRIBIR        reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SI              reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    MIENTRAS        reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_ALGORITMO   reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_SI          reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    SI_NO           reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_MIENTRAS    reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_SEGUN       reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    DE_OTRO_MODO    reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_PARA        reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    FIN_FUNCION     reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    RETORNAR        reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .)
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

  ! ID              [ reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .) ]
  ! NUMERO          [ reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .) ]
  ! CADENA          [ reduce using rule 68 (operaciones_matematicas -> operacion_matematica_parentesis .) ]

    operacion_matematica           shift and go to state 128
    tipo_dato_identificador        shift and go to state 127

state 77

    (78) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica PAR_DER
    (79) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (80) operacion_matematica_parentesis -> PAR_IZQ . operacion_matematica_parentesis PAR_DER
    (71) operacion_matematica -> . tipo_dato_identificador operador_aritmetico tipo_dato_identificador
    (78) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER
    (79) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador
    (80) operacion_matematica_parentesis -> . PAR_IZQ operacion_matematica_parentesis PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    PAR_IZQ         shift and go to state 77
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    operacion_matematica           shift and go to state 129
    tipo_dato_identificador        shift and go to state 127
    operacion_matematica_parentesis shift and go to state 130

state 78

    (124) llamar_funcion -> ID PAR_IZQ PAR_DER .

    ID              reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    LEER            reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    PARA            reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SEGUN           reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DEFINIR         reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    ESCRIBIR        reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI              reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    MIENTRAS        reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_ALGORITMO   reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SI          reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    SI_NO           reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_MIENTRAS    reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_SEGUN       reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    NUMERO          reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    CADENA          reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    DE_OTRO_MODO    reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_PARA        reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    FIN_FUNCION     reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)
    RETORNAR        reduce using rule 124 (llamar_funcion -> ID PAR_IZQ PAR_DER .)


state 79

    (125) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . PAR_DER
    (126) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 131
    COMA            shift and go to state 132


state 80

    (43) para -> PARA ID DESDE . NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 133


state 81

    (81) segun -> SEGUN ID HACER . casos DE_OTRO_MODO sentencias FIN_SEGUN
    (82) casos -> . caso casos
    (83) casos -> . caso
    (84) caso -> . NUMERO DOS_PUN sentencias
    (85) caso -> . CADENA DOS_PUN sentencias

    NUMERO          shift and go to state 136
    CADENA          shift and go to state 137

    casos                          shift and go to state 134
    caso                           shift and go to state 135

state 82

    (17) declaracion_variable -> DEFINIR ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 138


state 83

    (18) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA . ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 139


state 84

    (33) escribir_cadena_id -> ESCRIBIR CADENA COMA . ID
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA . ID COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA . ID COMA CADENA COMA ID

    ID              shift and go to state 140


state 85

    (34) escribir_cadena_id -> ESCRIBIR ID COMA . CADENA
    (35) escribir_cadena_id -> ESCRIBIR ID COMA . ID
    (36) escribir_cadena_id -> ESCRIBIR ID COMA . NUMERO
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA . CADENA COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA . CADENA COMA ID COMA CADENA

    CADENA          shift and go to state 142
    ID              shift and go to state 141
    NUMERO          shift and go to state 143


state 86

    (37) escribir_cadena_id -> ESCRIBIR NUMERO COMA . ID

    ID              shift and go to state 144


state 87

    (88) si -> SI expresion_logica ENTONCES . sentencias FIN_SI
    (89) si_no -> SI expresion_logica ENTONCES . sentencias SI_NO sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 145
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 88

    (53) expresion_logica -> expresion_logica operador_logico . expresion_logica
    (52) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (53) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    expresion_logica               shift and go to state 146
    tipo_dato_identificador        shift and go to state 63

state 89

    (58) operador_logico -> Y .

    ID              reduce using rule 58 (operador_logico -> Y .)
    NUMERO          reduce using rule 58 (operador_logico -> Y .)
    CADENA          reduce using rule 58 (operador_logico -> Y .)
    REAL            reduce using rule 58 (operador_logico -> Y .)


state 90

    (59) operador_logico -> O .

    ID              reduce using rule 59 (operador_logico -> O .)
    NUMERO          reduce using rule 59 (operador_logico -> O .)
    CADENA          reduce using rule 59 (operador_logico -> O .)
    REAL            reduce using rule 59 (operador_logico -> O .)


state 91

    (60) operador_logico -> NO .

    ID              reduce using rule 60 (operador_logico -> NO .)
    NUMERO          reduce using rule 60 (operador_logico -> NO .)
    CADENA          reduce using rule 60 (operador_logico -> NO .)
    REAL            reduce using rule 60 (operador_logico -> NO .)


state 92

    (52) expresion_logica -> tipo_dato_identificador operador_relacional . tipo_dato_identificador
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 147

state 93

    (61) operador_relacional -> ES_MAYOR_QUE .

    ID              reduce using rule 61 (operador_relacional -> ES_MAYOR_QUE .)
    NUMERO          reduce using rule 61 (operador_relacional -> ES_MAYOR_QUE .)
    CADENA          reduce using rule 61 (operador_relacional -> ES_MAYOR_QUE .)
    REAL            reduce using rule 61 (operador_relacional -> ES_MAYOR_QUE .)


state 94

    (62) operador_relacional -> ES_MENOR_QUE .

    ID              reduce using rule 62 (operador_relacional -> ES_MENOR_QUE .)
    NUMERO          reduce using rule 62 (operador_relacional -> ES_MENOR_QUE .)
    CADENA          reduce using rule 62 (operador_relacional -> ES_MENOR_QUE .)
    REAL            reduce using rule 62 (operador_relacional -> ES_MENOR_QUE .)


state 95

    (63) operador_relacional -> ES_IGUAL_QUE .

    ID              reduce using rule 63 (operador_relacional -> ES_IGUAL_QUE .)
    NUMERO          reduce using rule 63 (operador_relacional -> ES_IGUAL_QUE .)
    CADENA          reduce using rule 63 (operador_relacional -> ES_IGUAL_QUE .)
    REAL            reduce using rule 63 (operador_relacional -> ES_IGUAL_QUE .)


state 96

    (64) operador_relacional -> ES_MAYOR_O_IGUAL_QUE .

    ID              reduce using rule 64 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 64 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 64 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)
    REAL            reduce using rule 64 (operador_relacional -> ES_MAYOR_O_IGUAL_QUE .)


state 97

    (65) operador_relacional -> ES_MENOR_O_IGUAL_QUE .

    ID              reduce using rule 65 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    NUMERO          reduce using rule 65 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    CADENA          reduce using rule 65 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)
    REAL            reduce using rule 65 (operador_relacional -> ES_MENOR_O_IGUAL_QUE .)


state 98

    (66) operador_relacional -> ES_DISTINTO_QUE .

    ID              reduce using rule 66 (operador_relacional -> ES_DISTINTO_QUE .)
    NUMERO          reduce using rule 66 (operador_relacional -> ES_DISTINTO_QUE .)
    CADENA          reduce using rule 66 (operador_relacional -> ES_DISTINTO_QUE .)
    REAL            reduce using rule 66 (operador_relacional -> ES_DISTINTO_QUE .)


state 99

    (49) mientras_v1 -> MIENTRAS expresion_logica HACER . sentencias FIN_MIENTRAS
    (50) mientras_v2 -> MIENTRAS expresion_logica HACER . sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 148
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 100

    (51) mientras_v3 -> MIENTRAS LOGICO HACER . sentencias FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 149
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 101

    (2) programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .

    $end            reduce using rule 2 (programa -> funciones ALGORITMO cuerpo FIN_ALGORITMO .)


state 102

    (117) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion . FIN_FUNCION
    (118) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion . RETORNAR tipo_retorno_funcion FIN_FUNCION

    FIN_FUNCION     shift and go to state 150
    RETORNAR        shift and go to state 151


state 103

    (90) cuerpo_funcion -> sentencias_funcion .

    FIN_FUNCION     reduce using rule 90 (cuerpo_funcion -> sentencias_funcion .)
    RETORNAR        reduce using rule 90 (cuerpo_funcion -> sentencias_funcion .)


state 104

    (91) sentencias_funcion -> sentencia_funcion . sentencias_funcion
    (92) sentencias_funcion -> sentencia_funcion .
    (91) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (92) sentencias_funcion -> . sentencia_funcion
    (93) sentencia_funcion -> . posible_declaracion_variable_funcion
    (94) sentencia_funcion -> . estructura_escribir
    (95) sentencia_funcion -> . leer
    (96) sentencia_funcion -> . asignaciones
    (97) sentencia_funcion -> . para
    (98) sentencia_funcion -> . mientras
    (99) sentencia_funcion -> . segun
    (100) sentencia_funcion -> . multiple_si
    (101) sentencia_funcion -> . llamar_funciones
    (102) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (103) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (104) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (105) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    FIN_FUNCION     reduce using rule 92 (sentencias_funcion -> sentencia_funcion .)
    RETORNAR        reduce using rule 92 (sentencias_funcion -> sentencia_funcion .)
    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 116
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencia_funcion              shift and go to state 104
    sentencias_funcion             shift and go to state 152
    posible_declaracion_variable_funcion shift and go to state 105
    estructura_escribir            shift and go to state 106
    leer                           shift and go to state 107
    asignaciones                   shift and go to state 108
    para                           shift and go to state 109
    mientras                       shift and go to state 110
    segun                          shift and go to state 111
    multiple_si                    shift and go to state 112
    llamar_funciones               shift and go to state 113
    declaracion_variable_funcion   shift and go to state 114
    multiple_declaracion_variable_funcion shift and go to state 115
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 105

    (93) sentencia_funcion -> posible_declaracion_variable_funcion .

    LEER            reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    PARA            reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    SEGUN           reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    DEFINIR         reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    ESCRIBIR        reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    ID              reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    SI              reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)
    RETORNAR        reduce using rule 93 (sentencia_funcion -> posible_declaracion_variable_funcion .)


state 106

    (94) sentencia_funcion -> estructura_escribir .

    LEER            reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    PARA            reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    SEGUN           reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    DEFINIR         reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    ESCRIBIR        reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    ID              reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    SI              reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    MIENTRAS        reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    FIN_FUNCION     reduce using rule 94 (sentencia_funcion -> estructura_escribir .)
    RETORNAR        reduce using rule 94 (sentencia_funcion -> estructura_escribir .)


state 107

    (95) sentencia_funcion -> leer .

    LEER            reduce using rule 95 (sentencia_funcion -> leer .)
    PARA            reduce using rule 95 (sentencia_funcion -> leer .)
    SEGUN           reduce using rule 95 (sentencia_funcion -> leer .)
    DEFINIR         reduce using rule 95 (sentencia_funcion -> leer .)
    ESCRIBIR        reduce using rule 95 (sentencia_funcion -> leer .)
    ID              reduce using rule 95 (sentencia_funcion -> leer .)
    SI              reduce using rule 95 (sentencia_funcion -> leer .)
    MIENTRAS        reduce using rule 95 (sentencia_funcion -> leer .)
    FIN_FUNCION     reduce using rule 95 (sentencia_funcion -> leer .)
    RETORNAR        reduce using rule 95 (sentencia_funcion -> leer .)


state 108

    (96) sentencia_funcion -> asignaciones .

    LEER            reduce using rule 96 (sentencia_funcion -> asignaciones .)
    PARA            reduce using rule 96 (sentencia_funcion -> asignaciones .)
    SEGUN           reduce using rule 96 (sentencia_funcion -> asignaciones .)
    DEFINIR         reduce using rule 96 (sentencia_funcion -> asignaciones .)
    ESCRIBIR        reduce using rule 96 (sentencia_funcion -> asignaciones .)
    ID              reduce using rule 96 (sentencia_funcion -> asignaciones .)
    SI              reduce using rule 96 (sentencia_funcion -> asignaciones .)
    MIENTRAS        reduce using rule 96 (sentencia_funcion -> asignaciones .)
    FIN_FUNCION     reduce using rule 96 (sentencia_funcion -> asignaciones .)
    RETORNAR        reduce using rule 96 (sentencia_funcion -> asignaciones .)


state 109

    (97) sentencia_funcion -> para .

    LEER            reduce using rule 97 (sentencia_funcion -> para .)
    PARA            reduce using rule 97 (sentencia_funcion -> para .)
    SEGUN           reduce using rule 97 (sentencia_funcion -> para .)
    DEFINIR         reduce using rule 97 (sentencia_funcion -> para .)
    ESCRIBIR        reduce using rule 97 (sentencia_funcion -> para .)
    ID              reduce using rule 97 (sentencia_funcion -> para .)
    SI              reduce using rule 97 (sentencia_funcion -> para .)
    MIENTRAS        reduce using rule 97 (sentencia_funcion -> para .)
    FIN_FUNCION     reduce using rule 97 (sentencia_funcion -> para .)
    RETORNAR        reduce using rule 97 (sentencia_funcion -> para .)


state 110

    (98) sentencia_funcion -> mientras .

    LEER            reduce using rule 98 (sentencia_funcion -> mientras .)
    PARA            reduce using rule 98 (sentencia_funcion -> mientras .)
    SEGUN           reduce using rule 98 (sentencia_funcion -> mientras .)
    DEFINIR         reduce using rule 98 (sentencia_funcion -> mientras .)
    ESCRIBIR        reduce using rule 98 (sentencia_funcion -> mientras .)
    ID              reduce using rule 98 (sentencia_funcion -> mientras .)
    SI              reduce using rule 98 (sentencia_funcion -> mientras .)
    MIENTRAS        reduce using rule 98 (sentencia_funcion -> mientras .)
    FIN_FUNCION     reduce using rule 98 (sentencia_funcion -> mientras .)
    RETORNAR        reduce using rule 98 (sentencia_funcion -> mientras .)


state 111

    (99) sentencia_funcion -> segun .

    LEER            reduce using rule 99 (sentencia_funcion -> segun .)
    PARA            reduce using rule 99 (sentencia_funcion -> segun .)
    SEGUN           reduce using rule 99 (sentencia_funcion -> segun .)
    DEFINIR         reduce using rule 99 (sentencia_funcion -> segun .)
    ESCRIBIR        reduce using rule 99 (sentencia_funcion -> segun .)
    ID              reduce using rule 99 (sentencia_funcion -> segun .)
    SI              reduce using rule 99 (sentencia_funcion -> segun .)
    MIENTRAS        reduce using rule 99 (sentencia_funcion -> segun .)
    FIN_FUNCION     reduce using rule 99 (sentencia_funcion -> segun .)
    RETORNAR        reduce using rule 99 (sentencia_funcion -> segun .)


state 112

    (100) sentencia_funcion -> multiple_si .

    LEER            reduce using rule 100 (sentencia_funcion -> multiple_si .)
    PARA            reduce using rule 100 (sentencia_funcion -> multiple_si .)
    SEGUN           reduce using rule 100 (sentencia_funcion -> multiple_si .)
    DEFINIR         reduce using rule 100 (sentencia_funcion -> multiple_si .)
    ESCRIBIR        reduce using rule 100 (sentencia_funcion -> multiple_si .)
    ID              reduce using rule 100 (sentencia_funcion -> multiple_si .)
    SI              reduce using rule 100 (sentencia_funcion -> multiple_si .)
    MIENTRAS        reduce using rule 100 (sentencia_funcion -> multiple_si .)
    FIN_FUNCION     reduce using rule 100 (sentencia_funcion -> multiple_si .)
    RETORNAR        reduce using rule 100 (sentencia_funcion -> multiple_si .)


state 113

    (101) sentencia_funcion -> llamar_funciones .

    LEER            reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    PARA            reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    SEGUN           reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    DEFINIR         reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    ESCRIBIR        reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    ID              reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    SI              reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    MIENTRAS        reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    FIN_FUNCION     reduce using rule 101 (sentencia_funcion -> llamar_funciones .)
    RETORNAR        reduce using rule 101 (sentencia_funcion -> llamar_funciones .)


state 114

    (102) posible_declaracion_variable_funcion -> declaracion_variable_funcion .

    LEER            reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    PARA            reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    SEGUN           reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    DEFINIR         reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    ESCRIBIR        reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    ID              reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    SI              reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)
    RETORNAR        reduce using rule 102 (posible_declaracion_variable_funcion -> declaracion_variable_funcion .)


state 115

    (103) posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .

    LEER            reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    PARA            reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    SEGUN           reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    DEFINIR         reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    ESCRIBIR        reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    ID              reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    SI              reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    MIENTRAS        reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    FIN_FUNCION     reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)
    RETORNAR        reduce using rule 103 (posible_declaracion_variable_funcion -> multiple_declaracion_variable_funcion .)


state 116

    (104) declaracion_variable_funcion -> DEFINIR . ID COMO TIPO_DATO
    (105) multiple_declaracion_variable_funcion -> DEFINIR . ID COMA ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> DEFINIR . ID COMA ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR . ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR . ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 153


state 117

    (120) parametros -> ID .
    (121) parametros -> ID . COMA parametros

    PAR_DER         reduce using rule 120 (parametros -> ID .)
    COMA            shift and go to state 154


state 118

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros . PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PAR_DER         shift and go to state 155


state 119

    (71) operacion_matematica -> tipo_dato_identificador operador_aritmetico . tipo_dato_identificador
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 156

state 120

    (72) operador_aritmetico -> MAS .

    ID              reduce using rule 72 (operador_aritmetico -> MAS .)
    NUMERO          reduce using rule 72 (operador_aritmetico -> MAS .)
    CADENA          reduce using rule 72 (operador_aritmetico -> MAS .)
    REAL            reduce using rule 72 (operador_aritmetico -> MAS .)


state 121

    (73) operador_aritmetico -> MENOS .

    ID              reduce using rule 73 (operador_aritmetico -> MENOS .)
    NUMERO          reduce using rule 73 (operador_aritmetico -> MENOS .)
    CADENA          reduce using rule 73 (operador_aritmetico -> MENOS .)
    REAL            reduce using rule 73 (operador_aritmetico -> MENOS .)


state 122

    (74) operador_aritmetico -> POR .

    ID              reduce using rule 74 (operador_aritmetico -> POR .)
    NUMERO          reduce using rule 74 (operador_aritmetico -> POR .)
    CADENA          reduce using rule 74 (operador_aritmetico -> POR .)
    REAL            reduce using rule 74 (operador_aritmetico -> POR .)


state 123

    (75) operador_aritmetico -> DIVIDIDO .

    ID              reduce using rule 75 (operador_aritmetico -> DIVIDIDO .)
    NUMERO          reduce using rule 75 (operador_aritmetico -> DIVIDIDO .)
    CADENA          reduce using rule 75 (operador_aritmetico -> DIVIDIDO .)
    REAL            reduce using rule 75 (operador_aritmetico -> DIVIDIDO .)


state 124

    (76) operador_aritmetico -> ELEVADO_A .

    ID              reduce using rule 76 (operador_aritmetico -> ELEVADO_A .)
    NUMERO          reduce using rule 76 (operador_aritmetico -> ELEVADO_A .)
    CADENA          reduce using rule 76 (operador_aritmetico -> ELEVADO_A .)
    REAL            reduce using rule 76 (operador_aritmetico -> ELEVADO_A .)


state 125

    (77) operador_aritmetico -> RESIDUO .

    ID              reduce using rule 77 (operador_aritmetico -> RESIDUO .)
    NUMERO          reduce using rule 77 (operador_aritmetico -> RESIDUO .)
    CADENA          reduce using rule 77 (operador_aritmetico -> RESIDUO .)
    REAL            reduce using rule 77 (operador_aritmetico -> RESIDUO .)


state 126

    (70) operaciones_matematicas -> operacion_matematica operaciones_matematicas .

    LEER            reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    PARA            reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SEGUN           reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    DEFINIR         reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    ESCRIBIR        reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    ID              reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SI              reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    MIENTRAS        reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_ALGORITMO   reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_SI          reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    SI_NO           reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_MIENTRAS    reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_SEGUN       reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    NUMERO          reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    CADENA          reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    DE_OTRO_MODO    reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_PARA        reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    FIN_FUNCION     reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)
    RETORNAR        reduce using rule 70 (operaciones_matematicas -> operacion_matematica operaciones_matematicas .)


state 127

    (71) operacion_matematica -> tipo_dato_identificador . operador_aritmetico tipo_dato_identificador
    (72) operador_aritmetico -> . MAS
    (73) operador_aritmetico -> . MENOS
    (74) operador_aritmetico -> . POR
    (75) operador_aritmetico -> . DIVIDIDO
    (76) operador_aritmetico -> . ELEVADO_A
    (77) operador_aritmetico -> . RESIDUO

    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    POR             shift and go to state 122
    DIVIDIDO        shift and go to state 123
    ELEVADO_A       shift and go to state 124
    RESIDUO         shift and go to state 125

    operador_aritmetico            shift and go to state 119

state 128

    (69) operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .

    LEER            reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    PARA            reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SEGUN           reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    DEFINIR         reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    ESCRIBIR        reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    ID              reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SI              reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    MIENTRAS        reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_ALGORITMO   reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_SI          reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    SI_NO           reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_MIENTRAS    reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_SEGUN       reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    NUMERO          reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    CADENA          reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    DE_OTRO_MODO    reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_PARA        reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    FIN_FUNCION     reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)
    RETORNAR        reduce using rule 69 (operaciones_matematicas -> operacion_matematica_parentesis operacion_matematica .)


state 129

    (78) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica . PAR_DER
    (79) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica . PAR_DER operador_aritmetico tipo_dato_identificador

    PAR_DER         shift and go to state 157


state 130

    (80) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis . PAR_DER

    PAR_DER         shift and go to state 158


state 131

    (125) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .

    ID              reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 125 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador PAR_DER .)


state 132

    (126) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 159

state 133

    (43) para -> PARA ID DESDE NUMERO . HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    HASTA           shift and go to state 160


state 134

    (81) segun -> SEGUN ID HACER casos . DE_OTRO_MODO sentencias FIN_SEGUN

    DE_OTRO_MODO    shift and go to state 161


state 135

    (82) casos -> caso . casos
    (83) casos -> caso .
    (82) casos -> . caso casos
    (83) casos -> . caso
    (84) caso -> . NUMERO DOS_PUN sentencias
    (85) caso -> . CADENA DOS_PUN sentencias

    DE_OTRO_MODO    reduce using rule 83 (casos -> caso .)
    NUMERO          shift and go to state 136
    CADENA          shift and go to state 137

    caso                           shift and go to state 135
    casos                          shift and go to state 162

state 136

    (84) caso -> NUMERO . DOS_PUN sentencias

    DOS_PUN         shift and go to state 163


state 137

    (85) caso -> CADENA . DOS_PUN sentencias

    DOS_PUN         shift and go to state 164


state 138

    (17) declaracion_variable -> DEFINIR ID COMO TIPO_DATO .

    LEER            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    PARA            reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    ID              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI              reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    CADENA          reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 17 (declaracion_variable -> DEFINIR ID COMO TIPO_DATO .)


state 139

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMO TIPO_DATO
    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID . COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 166
    COMA            shift and go to state 165


state 140

    (33) escribir_cadena_id -> ESCRIBIR CADENA COMA ID .
    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID . COMA CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID . COMA CADENA COMA ID

    LEER            reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    PARA            reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SEGUN           reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    DEFINIR         reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    ESCRIBIR        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    ID              reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SI              reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    MIENTRAS        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_SI          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    SI_NO           reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    NUMERO          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    CADENA          reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_PARA        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    RETORNAR        reduce using rule 33 (escribir_cadena_id -> ESCRIBIR CADENA COMA ID .)
    COMA            shift and go to state 167


state 141

    (35) escribir_cadena_id -> ESCRIBIR ID COMA ID .

    LEER            reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    PARA            reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SEGUN           reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    DEFINIR         reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    ESCRIBIR        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    ID              reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SI              reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    MIENTRAS        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_ALGORITMO   reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_SI          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    SI_NO           reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_MIENTRAS    reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_SEGUN       reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    NUMERO          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    CADENA          reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    DE_OTRO_MODO    reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_PARA        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    FIN_FUNCION     reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)
    RETORNAR        reduce using rule 35 (escribir_cadena_id -> ESCRIBIR ID COMA ID .)


state 142

    (34) escribir_cadena_id -> ESCRIBIR ID COMA CADENA .
    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA . COMA ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA . COMA ID COMA CADENA

    LEER            reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    PARA            reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SEGUN           reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    DEFINIR         reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    ESCRIBIR        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    ID              reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SI              reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    MIENTRAS        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_SI          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    SI_NO           reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    NUMERO          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    CADENA          reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_PARA        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    RETORNAR        reduce using rule 34 (escribir_cadena_id -> ESCRIBIR ID COMA CADENA .)
    COMA            shift and go to state 168


state 143

    (36) escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .

    LEER            reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    PARA            reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SEGUN           reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    DEFINIR         reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    ESCRIBIR        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    ID              reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SI              reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    MIENTRAS        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_ALGORITMO   reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_SI          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    SI_NO           reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_MIENTRAS    reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_SEGUN       reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    NUMERO          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    CADENA          reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    DE_OTRO_MODO    reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_PARA        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    FIN_FUNCION     reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)
    RETORNAR        reduce using rule 36 (escribir_cadena_id -> ESCRIBIR ID COMA NUMERO .)


state 144

    (37) escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .

    LEER            reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    PARA            reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SEGUN           reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    DEFINIR         reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    ESCRIBIR        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    ID              reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SI              reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    MIENTRAS        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_ALGORITMO   reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_SI          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    SI_NO           reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_MIENTRAS    reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_SEGUN       reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    NUMERO          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    CADENA          reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    DE_OTRO_MODO    reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_PARA        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    FIN_FUNCION     reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)
    RETORNAR        reduce using rule 37 (escribir_cadena_id -> ESCRIBIR NUMERO COMA ID .)


state 145

    (88) si -> SI expresion_logica ENTONCES sentencias . FIN_SI
    (89) si_no -> SI expresion_logica ENTONCES sentencias . SI_NO sentencias FIN_SI

    FIN_SI          shift and go to state 169
    SI_NO           shift and go to state 170


state 146

    (53) expresion_logica -> expresion_logica operador_logico expresion_logica .
    (53) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (58) operador_logico -> . Y
    (59) operador_logico -> . O
    (60) operador_logico -> . NO

  ! shift/reduce conflict for Y resolved as shift
  ! shift/reduce conflict for O resolved as shift
  ! shift/reduce conflict for NO resolved as shift
    ENTONCES        reduce using rule 53 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    HACER           reduce using rule 53 (expresion_logica -> expresion_logica operador_logico expresion_logica .)
    Y               shift and go to state 89
    O               shift and go to state 90
    NO              shift and go to state 91

  ! Y               [ reduce using rule 53 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! O               [ reduce using rule 53 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]
  ! NO              [ reduce using rule 53 (expresion_logica -> expresion_logica operador_logico expresion_logica .) ]

    operador_logico                shift and go to state 88

state 147

    (52) expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .

    ENTONCES        reduce using rule 52 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    Y               reduce using rule 52 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    O               reduce using rule 52 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    NO              reduce using rule 52 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)
    HACER           reduce using rule 52 (expresion_logica -> tipo_dato_identificador operador_relacional tipo_dato_identificador .)


state 148

    (49) mientras_v1 -> MIENTRAS expresion_logica HACER sentencias . FIN_MIENTRAS
    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 172
    MIENTRAS        shift and go to state 171


state 149

    (51) mientras_v3 -> MIENTRAS LOGICO HACER sentencias . FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 173


state 150

    (117) funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .

    FUNCION         reduce using rule 117 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 117 (funcion_sin_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion FIN_FUNCION .)


state 151

    (118) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (111) tipo_retorno_funcion -> . ID
    (112) tipo_retorno_funcion -> . LOGICO
    (113) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 174
    LOGICO          shift and go to state 176
    CADENA          shift and go to state 177

    tipo_retorno_funcion           shift and go to state 175

state 152

    (91) sentencias_funcion -> sentencia_funcion sentencias_funcion .

    FIN_FUNCION     reduce using rule 91 (sentencias_funcion -> sentencia_funcion sentencias_funcion .)
    RETORNAR        reduce using rule 91 (sentencias_funcion -> sentencia_funcion sentencias_funcion .)


state 153

    (104) declaracion_variable_funcion -> DEFINIR ID . COMO TIPO_DATO
    (105) multiple_declaracion_variable_funcion -> DEFINIR ID . COMA ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> DEFINIR ID . COMA ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR ID . COMA ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID . COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 178
    COMA            shift and go to state 179


state 154

    (121) parametros -> ID COMA . parametros
    (120) parametros -> . ID
    (121) parametros -> . ID COMA parametros

    ID              shift and go to state 117

    parametros                     shift and go to state 180

state 155

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER . PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION

    PUN_Y_COM       shift and go to state 181


state 156

    (71) operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .

    PAR_IZQ         reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ID              reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    REAL            reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)
    PAR_DER         reduce using rule 71 (operacion_matematica -> tipo_dato_identificador operador_aritmetico tipo_dato_identificador .)


state 157

    (78) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .
    (79) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER . operador_aritmetico tipo_dato_identificador
    (72) operador_aritmetico -> . MAS
    (73) operador_aritmetico -> . MENOS
    (74) operador_aritmetico -> . POR
    (75) operador_aritmetico -> . DIVIDIDO
    (76) operador_aritmetico -> . ELEVADO_A
    (77) operador_aritmetico -> . RESIDUO

    ID              reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    NUMERO          reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    CADENA          reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    REAL            reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    LEER            reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    PARA            reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SEGUN           reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    DEFINIR         reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    ESCRIBIR        reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SI              reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    MIENTRAS        reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_ALGORITMO   reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_SI          reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    SI_NO           reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_MIENTRAS    reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_SEGUN       reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    DE_OTRO_MODO    reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_PARA        reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    FIN_FUNCION     reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    RETORNAR        reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    PAR_DER         reduce using rule 78 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER .)
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    POR             shift and go to state 122
    DIVIDIDO        shift and go to state 123
    ELEVADO_A       shift and go to state 124
    RESIDUO         shift and go to state 125

    operador_aritmetico            shift and go to state 182

state 158

    (80) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .

    ID              reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    NUMERO          reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    CADENA          reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    REAL            reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    LEER            reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    PARA            reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SEGUN           reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    DEFINIR         reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    ESCRIBIR        reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SI              reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    MIENTRAS        reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_ALGORITMO   reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_SI          reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    SI_NO           reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_MIENTRAS    reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_SEGUN       reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    DE_OTRO_MODO    reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_PARA        reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    FIN_FUNCION     reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    RETORNAR        reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)
    PAR_DER         reduce using rule 80 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica_parentesis PAR_DER .)


state 159

    (126) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 184
    COMA            shift and go to state 183


state 160

    (43) para -> PARA ID DESDE NUMERO HASTA . NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 185


state 161

    (81) segun -> SEGUN ID HACER casos DE_OTRO_MODO . sentencias FIN_SEGUN
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 186
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 162

    (82) casos -> caso casos .

    DE_OTRO_MODO    reduce using rule 82 (casos -> caso casos .)


state 163

    (84) caso -> NUMERO DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 187
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 164

    (85) caso -> CADENA DOS_PUN . sentencias
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 188
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 165

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA . ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 189


state 166

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 190


state 167

    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA . CADENA
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA . CADENA COMA ID

    CADENA          shift and go to state 191


state 168

    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA . ID
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA . ID COMA CADENA

    ID              shift and go to state 192


state 169

    (88) si -> SI expresion_logica ENTONCES sentencias FIN_SI .

    SI              reduce using rule 88 (si -> SI expresion_logica ENTONCES sentencias FIN_SI .)


state 170

    (89) si_no -> SI expresion_logica ENTONCES sentencias SI_NO . sentencias FIN_SI
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 193
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 171

    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS . expresion_logica HACER sentencias FIN_MIENTRAS
    (52) expresion_logica -> . tipo_dato_identificador operador_relacional tipo_dato_identificador
    (53) expresion_logica -> . expresion_logica operador_logico expresion_logica
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    expresion_logica               shift and go to state 194
    tipo_dato_identificador        shift and go to state 63

state 172

    (49) mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .

    MIENTRAS        reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    LEER            reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 49 (mientras_v1 -> MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)


state 173

    (51) mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .

    MIENTRAS        reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    LEER            reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 51 (mientras_v3 -> MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS .)


state 174

    (111) tipo_retorno_funcion -> ID .

    FIN_FUNCION     reduce using rule 111 (tipo_retorno_funcion -> ID .)


state 175

    (118) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 195


state 176

    (112) tipo_retorno_funcion -> LOGICO .

    FIN_FUNCION     reduce using rule 112 (tipo_retorno_funcion -> LOGICO .)


state 177

    (113) tipo_retorno_funcion -> CADENA .

    FIN_FUNCION     reduce using rule 113 (tipo_retorno_funcion -> CADENA .)


state 178

    (104) declaracion_variable_funcion -> DEFINIR ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 196


state 179

    (105) multiple_declaracion_variable_funcion -> DEFINIR ID COMA . ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA . ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA . ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA . ID COMA ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 197


state 180

    (121) parametros -> ID COMA parametros .

    PAR_DER         reduce using rule 121 (parametros -> ID COMA parametros .)


state 181

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM . cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION
    (90) cuerpo_funcion -> . sentencias_funcion
    (91) sentencias_funcion -> . sentencia_funcion sentencias_funcion
    (92) sentencias_funcion -> . sentencia_funcion
    (93) sentencia_funcion -> . posible_declaracion_variable_funcion
    (94) sentencia_funcion -> . estructura_escribir
    (95) sentencia_funcion -> . leer
    (96) sentencia_funcion -> . asignaciones
    (97) sentencia_funcion -> . para
    (98) sentencia_funcion -> . mientras
    (99) sentencia_funcion -> . segun
    (100) sentencia_funcion -> . multiple_si
    (101) sentencia_funcion -> . llamar_funciones
    (102) posible_declaracion_variable_funcion -> . declaracion_variable_funcion
    (103) posible_declaracion_variable_funcion -> . multiple_declaracion_variable_funcion
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (104) declaracion_variable_funcion -> . DEFINIR ID COMO TIPO_DATO
    (105) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 116
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    cuerpo_funcion                 shift and go to state 198
    sentencias_funcion             shift and go to state 103
    sentencia_funcion              shift and go to state 104
    posible_declaracion_variable_funcion shift and go to state 105
    estructura_escribir            shift and go to state 106
    leer                           shift and go to state 107
    asignaciones                   shift and go to state 108
    para                           shift and go to state 109
    mientras                       shift and go to state 110
    segun                          shift and go to state 111
    multiple_si                    shift and go to state 112
    llamar_funciones               shift and go to state 113
    declaracion_variable_funcion   shift and go to state 114
    multiple_declaracion_variable_funcion shift and go to state 115
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 182

    (79) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico . tipo_dato_identificador
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 199

state 183

    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 200

state 184

    (126) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 126 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 185

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO . CON_PASO NUMERO HACER sentencias FIN_PARA

    CON_PASO        shift and go to state 201


state 186

    (81) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias . FIN_SEGUN

    FIN_SEGUN       shift and go to state 202


state 187

    (84) caso -> NUMERO DOS_PUN sentencias .

    NUMERO          reduce using rule 84 (caso -> NUMERO DOS_PUN sentencias .)
    CADENA          reduce using rule 84 (caso -> NUMERO DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 84 (caso -> NUMERO DOS_PUN sentencias .)


state 188

    (85) caso -> CADENA DOS_PUN sentencias .

    NUMERO          reduce using rule 85 (caso -> CADENA DOS_PUN sentencias .)
    CADENA          reduce using rule 85 (caso -> CADENA DOS_PUN sentencias .)
    DE_OTRO_MODO    reduce using rule 85 (caso -> CADENA DOS_PUN sentencias .)


state 189

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMO TIPO_DATO
    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID . COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 204
    COMA            shift and go to state 203


state 190

    (18) multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 18 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMO TIPO_DATO .)


state 191

    (38) escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .
    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA . COMA ID

    LEER            reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    PARA            reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SEGUN           reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    DEFINIR         reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    ESCRIBIR        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    ID              reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SI              reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    MIENTRAS        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_SI          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    SI_NO           reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    NUMERO          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    CADENA          reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_PARA        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    RETORNAR        reduce using rule 38 (escribir_cadena_id_cadena -> ESCRIBIR CADENA COMA ID COMA CADENA .)
    COMA            shift and go to state 205


state 192

    (39) escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .
    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID . COMA CADENA

    LEER            reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    PARA            reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SEGUN           reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    DEFINIR         reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    ESCRIBIR        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    ID              reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SI              reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    MIENTRAS        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_SI          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    SI_NO           reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    NUMERO          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    CADENA          reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_PARA        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    RETORNAR        reduce using rule 39 (escribir_cadena_id_cadena -> ESCRIBIR ID COMA CADENA COMA ID .)
    COMA            shift and go to state 206


state 193

    (89) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias . FIN_SI

    FIN_SI          shift and go to state 207


state 194

    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica . HACER sentencias FIN_MIENTRAS
    (53) expresion_logica -> expresion_logica . operador_logico expresion_logica
    (58) operador_logico -> . Y
    (59) operador_logico -> . O
    (60) operador_logico -> . NO

    HACER           shift and go to state 208
    Y               shift and go to state 89
    O               shift and go to state 90
    NO              shift and go to state 91

    operador_logico                shift and go to state 88

state 195

    (118) funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 118 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 118 (funcion_con_retorno -> FUNCION ID PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 196

    (104) declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .

    LEER            reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    PARA            reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    ID              reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    SI              reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 104 (declaracion_variable_funcion -> DEFINIR ID COMO TIPO_DATO .)


state 197

    (105) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID . COMO TIPO_DATO
    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID . COMA ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID . COMA ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID . COMA ID COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 210
    COMA            shift and go to state 209


state 198

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion . RETORNAR tipo_retorno_funcion FIN_FUNCION

    RETORNAR        shift and go to state 211


state 199

    (79) operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .

    ID              reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    NUMERO          reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    CADENA          reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    REAL            reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    LEER            reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    PARA            reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SEGUN           reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    DEFINIR         reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    ESCRIBIR        reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SI              reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    MIENTRAS        reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_ALGORITMO   reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_SI          reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    SI_NO           reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_MIENTRAS    reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_SEGUN       reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    DE_OTRO_MODO    reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_PARA        reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    FIN_FUNCION     reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    RETORNAR        reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)
    PAR_DER         reduce using rule 79 (operacion_matematica_parentesis -> PAR_IZQ operacion_matematica PAR_DER operador_aritmetico tipo_dato_identificador .)


state 200

    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER
    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . COMA tipo_dato_identificador PAR_DER

    PAR_DER         shift and go to state 213
    COMA            shift and go to state 212


state 201

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO . NUMERO HACER sentencias FIN_PARA

    NUMERO          shift and go to state 214


state 202

    (81) segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .

    LEER            reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    PARA            reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SEGUN           reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DEFINIR         reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    ESCRIBIR        reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    ID              reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI              reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    MIENTRAS        reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_ALGORITMO   reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SI          reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    SI_NO           reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_MIENTRAS    reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_SEGUN       reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    NUMERO          reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    CADENA          reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    DE_OTRO_MODO    reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_PARA        reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    FIN_FUNCION     reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)
    RETORNAR        reduce using rule 81 (segun -> SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN .)


state 203

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA . ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA . ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 215


state 204

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 216


state 205

    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA . ID

    ID              shift and go to state 217


state 206

    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA . CADENA

    CADENA          shift and go to state 218


state 207

    (89) si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .

    LEER            reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    PARA            reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SEGUN           reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DEFINIR         reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    ESCRIBIR        reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    ID              reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI              reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    MIENTRAS        reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_ALGORITMO   reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SI          reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    SI_NO           reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_MIENTRAS    reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_SEGUN       reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    NUMERO          reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    CADENA          reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    DE_OTRO_MODO    reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_PARA        reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    FIN_FUNCION     reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)
    RETORNAR        reduce using rule 89 (si_no -> SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI .)


state 208

    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER . sentencias FIN_MIENTRAS
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 219
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 209

    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA . ID COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA . ID COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA . ID COMA ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 220


state 210

    (105) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 221


state 211

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR . tipo_retorno_funcion FIN_FUNCION
    (111) tipo_retorno_funcion -> . ID
    (112) tipo_retorno_funcion -> . LOGICO
    (113) tipo_retorno_funcion -> . CADENA

    ID              shift and go to state 174
    LOGICO          shift and go to state 176
    CADENA          shift and go to state 177

    tipo_retorno_funcion           shift and go to state 222

state 212

    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA . tipo_dato_identificador PAR_DER
    (54) tipo_dato_identificador -> . ID
    (55) tipo_dato_identificador -> . NUMERO
    (56) tipo_dato_identificador -> . CADENA
    (57) tipo_dato_identificador -> . REAL

    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    CADENA          shift and go to state 66
    REAL            shift and go to state 67

    tipo_dato_identificador        shift and go to state 223

state 213

    (127) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 127 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 214

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO . HACER sentencias FIN_PARA

    HACER           shift and go to state 224


state 215

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID . COMO TIPO_DATO
    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID . COMA ID COMO TIPO_DATO

    COMO            shift and go to state 226
    COMA            shift and go to state 225


state 216

    (19) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 19 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)


state 217

    (40) escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .

    LEER            reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    PARA            reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SEGUN           reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    DEFINIR         reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    ESCRIBIR        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    ID              reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SI              reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    MIENTRAS        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_ALGORITMO   reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_SI          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    SI_NO           reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_MIENTRAS    reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_SEGUN       reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    NUMERO          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    CADENA          reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    DE_OTRO_MODO    reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_PARA        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    FIN_FUNCION     reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)
    RETORNAR        reduce using rule 40 (escribir_cadena_id_id -> ESCRIBIR CADENA COMA ID COMA CADENA COMA ID .)


state 218

    (41) escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .

    LEER            reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    PARA            reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SEGUN           reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    DEFINIR         reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    ESCRIBIR        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    ID              reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SI              reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    MIENTRAS        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_ALGORITMO   reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_SI          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    SI_NO           reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_MIENTRAS    reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_SEGUN       reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    NUMERO          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    CADENA          reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    DE_OTRO_MODO    reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_PARA        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    FIN_FUNCION     reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)
    RETORNAR        reduce using rule 41 (escribir_cadena_id_id -> ESCRIBIR ID COMA CADENA COMA ID COMA CADENA .)


state 219

    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias . FIN_MIENTRAS

    FIN_MIENTRAS    shift and go to state 227


state 220

    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID . COMO TIPO_DATO
    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID . COMA ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID . COMA ID COMA ID COMO TIPO_DATO

    COMO            shift and go to state 229
    COMA            shift and go to state 228


state 221

    (105) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 105 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMO TIPO_DATO .)


state 222

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion . FIN_FUNCION

    FIN_FUNCION     shift and go to state 230


state 223

    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador . PAR_DER

    PAR_DER         shift and go to state 231


state 224

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER . sentencias FIN_PARA
    (4) sentencias -> . sentencia sentencias
    (5) sentencias -> . sentencia
    (6) sentencia -> . posible_declaracion_variable
    (7) sentencia -> . estructura_escribir
    (8) sentencia -> . leer
    (9) sentencia -> . asignaciones
    (10) sentencia -> . para
    (11) sentencia -> . mientras
    (12) sentencia -> . segun
    (13) sentencia -> . multiple_si
    (14) sentencia -> . llamar_funciones
    (15) posible_declaracion_variable -> . declaracion_variable
    (16) posible_declaracion_variable -> . multiple_declaracion_variable
    (26) estructura_escribir -> . escribir
    (27) estructura_escribir -> . escribir_cadena_id
    (28) estructura_escribir -> . escribir_cadena_id_cadena
    (29) estructura_escribir -> . escribir_cadena_id_id
    (42) leer -> . LEER ID
    (22) asignaciones -> . asignacion
    (23) asignaciones -> . asignacion_con_operacion
    (43) para -> . PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA
    (44) mientras -> . mientras_declaraciones mientras
    (45) mientras -> . mientras_declaraciones
    (81) segun -> . SEGUN ID HACER casos DE_OTRO_MODO sentencias FIN_SEGUN
    (86) multiple_si -> . si multiple_si
    (87) multiple_si -> . si_no
    (122) llamar_funciones -> . llamar_funcion llamar_funciones
    (123) llamar_funciones -> . llamar_funcion
    (17) declaracion_variable -> . DEFINIR ID COMO TIPO_DATO
    (18) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMO TIPO_DATO
    (19) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMO TIPO_DATO
    (20) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (21) multiple_declaracion_variable -> . DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO
    (30) escribir -> . ESCRIBIR CADENA
    (31) escribir -> . ESCRIBIR ID
    (32) escribir -> . ESCRIBIR NUMERO
    (33) escribir_cadena_id -> . ESCRIBIR CADENA COMA ID
    (34) escribir_cadena_id -> . ESCRIBIR ID COMA CADENA
    (35) escribir_cadena_id -> . ESCRIBIR ID COMA ID
    (36) escribir_cadena_id -> . ESCRIBIR ID COMA NUMERO
    (37) escribir_cadena_id -> . ESCRIBIR NUMERO COMA ID
    (38) escribir_cadena_id_cadena -> . ESCRIBIR CADENA COMA ID COMA CADENA
    (39) escribir_cadena_id_cadena -> . ESCRIBIR ID COMA CADENA COMA ID
    (40) escribir_cadena_id_id -> . ESCRIBIR CADENA COMA ID COMA CADENA COMA ID
    (41) escribir_cadena_id_id -> . ESCRIBIR ID COMA CADENA COMA ID COMA CADENA
    (24) asignacion -> . ID ASIGNAR tipo_dato_identificador
    (25) asignacion_con_operacion -> . ID ASIGNAR operaciones_matematicas
    (46) mientras_declaraciones -> . mientras_v1
    (47) mientras_declaraciones -> . mientras_v2
    (48) mientras_declaraciones -> . mientras_v3
    (88) si -> . SI expresion_logica ENTONCES sentencias FIN_SI
    (89) si_no -> . SI expresion_logica ENTONCES sentencias SI_NO sentencias FIN_SI
    (124) llamar_funcion -> . ID PAR_IZQ PAR_DER
    (125) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador PAR_DER
    (126) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (127) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (128) llamar_funcion -> . ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER
    (49) mientras_v1 -> . MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (50) mientras_v2 -> . MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS
    (51) mientras_v3 -> . MIENTRAS LOGICO HACER sentencias FIN_MIENTRAS

    LEER            shift and go to state 27
    PARA            shift and go to state 31
    SEGUN           shift and go to state 33
    DEFINIR         shift and go to state 37
    ESCRIBIR        shift and go to state 38
    ID              shift and go to state 28
    SI              shift and go to state 42
    MIENTRAS        shift and go to state 43

    sentencias                     shift and go to state 232
    sentencia                      shift and go to state 11
    posible_declaracion_variable   shift and go to state 12
    estructura_escribir            shift and go to state 13
    leer                           shift and go to state 14
    asignaciones                   shift and go to state 15
    para                           shift and go to state 16
    mientras                       shift and go to state 17
    segun                          shift and go to state 18
    multiple_si                    shift and go to state 19
    llamar_funciones               shift and go to state 20
    declaracion_variable           shift and go to state 21
    multiple_declaracion_variable  shift and go to state 22
    escribir                       shift and go to state 23
    escribir_cadena_id             shift and go to state 24
    escribir_cadena_id_cadena      shift and go to state 25
    escribir_cadena_id_id          shift and go to state 26
    asignacion                     shift and go to state 29
    asignacion_con_operacion       shift and go to state 30
    mientras_declaraciones         shift and go to state 32
    si                             shift and go to state 34
    si_no                          shift and go to state 35
    llamar_funcion                 shift and go to state 36
    mientras_v1                    shift and go to state 39
    mientras_v2                    shift and go to state 40
    mientras_v3                    shift and go to state 41

state 225

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA . ID COMO TIPO_DATO

    ID              shift and go to state 233


state 226

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 234


state 227

    (50) mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .

    MIENTRAS        reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    LEER            reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    PARA            reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SEGUN           reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DEFINIR         reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ESCRIBIR        reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    ID              reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI              reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_ALGORITMO   reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SI          reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    SI_NO           reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_MIENTRAS    reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_SEGUN       reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    NUMERO          reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    CADENA          reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    DE_OTRO_MODO    reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_PARA        reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    FIN_FUNCION     reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)
    RETORNAR        reduce using rule 50 (mientras_v2 -> MIENTRAS expresion_logica HACER sentencias MIENTRAS expresion_logica HACER sentencias FIN_MIENTRAS .)


state 228

    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA . ID COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA . ID COMA ID COMO TIPO_DATO

    ID              shift and go to state 235


state 229

    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 236


state 230

    (119) funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .

    FUNCION         reduce using rule 119 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)
    ALGORITMO       reduce using rule 119 (funcion_con_parametros_con_retorno -> FUNCION ID PAR_IZQ parametros PAR_DER PUN_Y_COM cuerpo_funcion RETORNAR tipo_retorno_funcion FIN_FUNCION .)


state 231

    (128) llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .

    ID              reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    LEER            reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    PARA            reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SEGUN           reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DEFINIR         reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    ESCRIBIR        reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI              reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    MIENTRAS        reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_ALGORITMO   reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SI          reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    SI_NO           reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_MIENTRAS    reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_SEGUN       reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    NUMERO          reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    CADENA          reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    DE_OTRO_MODO    reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_PARA        reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    FIN_FUNCION     reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)
    RETORNAR        reduce using rule 128 (llamar_funcion -> ID PAR_IZQ tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador COMA tipo_dato_identificador PAR_DER .)


state 232

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias . FIN_PARA

    FIN_PARA        shift and go to state 237


state 233

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID . COMO TIPO_DATO

    COMO            shift and go to state 238


state 234

    (20) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 20 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)


state 235

    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID . COMO TIPO_DATO
    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID . COMA ID COMO TIPO_DATO

    COMO            shift and go to state 240
    COMA            shift and go to state 239


state 236

    (106) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 106 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMO TIPO_DATO .)


state 237

    (43) para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .

    LEER            reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    PARA            reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SEGUN           reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DEFINIR         reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    ESCRIBIR        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    ID              reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI              reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    MIENTRAS        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_ALGORITMO   reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SI          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    SI_NO           reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_MIENTRAS    reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_SEGUN       reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    NUMERO          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    CADENA          reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    DE_OTRO_MODO    reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_PARA        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    FIN_FUNCION     reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)
    RETORNAR        reduce using rule 43 (para -> PARA ID DESDE NUMERO HASTA NUMERO CON_PASO NUMERO HACER sentencias FIN_PARA .)


state 238

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 241


state 239

    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA . ID COMO TIPO_DATO

    ID              shift and go to state 242


state 240

    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 243


state 241

    (21) multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_ALGORITMO   reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SI          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI_NO           reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_MIENTRAS    reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_SEGUN       reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    NUMERO          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    CADENA          reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DE_OTRO_MODO    reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_PARA        reduce using rule 21 (multiple_declaracion_variable -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)


state 242

    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID . COMO TIPO_DATO

    COMO            shift and go to state 244


state 243

    (107) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 107 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)


state 244

    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO . TIPO_DATO

    TIPO_DATO       shift and go to state 245


state 245

    (108) multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .

    LEER            reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    PARA            reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SEGUN           reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    DEFINIR         reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ESCRIBIR        reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    ID              reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    SI              reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    MIENTRAS        reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    FIN_FUNCION     reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)
    RETORNAR        reduce using rule 108 (multiple_declaracion_variable_funcion -> DEFINIR ID COMA ID COMA ID COMA ID COMA ID COMO TIPO_DATO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MIENTRAS in state 11 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 75 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 76 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 76 resolved as shift
WARNING: shift/reduce conflict for Y in state 146 resolved as shift
WARNING: shift/reduce conflict for O in state 146 resolved as shift
WARNING: shift/reduce conflict for NO in state 146 resolved as shift
